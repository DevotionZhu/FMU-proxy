buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:2.0.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'


def snapshot = true
def fmi4j_version = snapshot ? fmi4j_snapshot_version : fmi4j_stable_version

dependencies {

    providedCompile 'javax.servlet:servlet-api:2.2'
    providedCompile 'javax.servlet.jsp:jsp-api:2.2'
    providedCompile 'javax.enterprise:cdi-api:2.0'

    compile group: 'com.sun.faces', name: 'jsf-api', version: '2.2.15'
    runtime group: 'com.sun.faces', name: 'jsf-impl', version: '2.2.15'

    compile group: 'org.primefaces', name: 'primefaces', version: '6.1'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'org.zeromq', name: 'jeromq', version: '0.4.3'

//    //need to include JAXB explicitly in order to support >= Java9
//    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
//    runtime group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
//    runtime group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
//    runtime group: 'javax.activation', name: 'activation', version: '1.1.1'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    compile group: 'no.mechatronics.sfi.fmi4j', name: 'fmi-modeldescription', version: fmi4j_version, changing: snapshot

}

gretty {
    servletContainer = "tomcat8"
    httpEnabled = true
    httpPort = 8080
    contextPath = "/fmu-proxy"
    logDir = "$projectDir/logs"
}

task copyAvro(type: Copy) {

    from('../rpc-definitions/src/main/avro')
    into('src/main/webapp/resources/schemas/avro')
    include('*.avdl')

}

task copyThrift(type: Copy) {

    from('../rpc-definitions/src/main/thrift')
    into('src/main/webapp/resources/schemas/thrift')
    include('*.thrift')

}

task copyProto(type: Copy) {

    from('../rpc-definitions/src/main/proto')
    into('src/main/webapp/resources/schemas/proto')
    include('*.proto')

}

task copyProtoZip(type: Zip) {

    from '../rpc-definitions/src/main/proto'
    include '*'
    archiveName 'fmu-proxy-generic-proto.zip'
    destinationDir(file('src/main/webapp/resources/schemas/proto/'))
}

compileKotlin.dependsOn(copyAvro)
compileKotlin.dependsOn(copyThrift)
compileKotlin.dependsOn(copyProto)
compileKotlin.dependsOn(copyProtoZip)
