
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "no.mechatronics.sfi.fmuproxy.FmuProxy"

def snapshot = true
def fmi4j_version = snapshot ? fmi4j_snapshot_version : fmi4j_stable_version

dependencies {

    implementation group: 'io.grpc', name: 'grpc-netty', version: '1.13.1'
    implementation group: 'info.picocli', name: 'picocli', version: '3.1.0'
    implementation group: 'info.laht', name: 'YAJ-RPC', version: '0.7.1'

    compile group: 'no.mechatronics.sfi.fmi4j', name: 'fmi-import', version: fmi4j_version, changing: snapshot
    compile group: 'no.mechatronics.sfi.fmuproxy', name: 'rpc-definitions', version: '0.1-SNAPSHOT', changing: true

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    runtimeOnly group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    testImplementation project(':fmu-proxy-clients')

}

run {
    if (project.hasProperty("appArgs")) {
        args appArgs.split(" ")
    }
    standardInput = System.in
}

jar {
    manifest {
        attributes 'Main-Class': "no.mechatronics.sfi.fmuproxy.FmuProxy"
    }
}

shadowJar {
    baseName = 'fmu-proxy'
    classifier = null
    version = null
}

if (hasProperty("ossrhUsername")  && hasProperty("ossrhPassword")) {

    group = 'no.mechatronics.sfi.fmuproxy'
    version = '0.1-SNAPSHOT'

    apply plugin: 'maven'
    apply plugin: 'signing'

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name archivesBaseName
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'A collection of RPC servers for exposing FMUs over the network'
                    url 'https://github.com/SFI-Mechatronics/FMU-proxy'

                    scm {
                        connection 'scm:git:git://github.com/SFI-Mechatronics/FMU-proxy.git'
                        developerConnection 'scm:git:ssh://github.com/SFI-Mechatronics/FMU-proxy.git'
                        url 'https://github.com/SFI-Mechatronics/FMU-proxy/tree/master'
                    }

                    licenses {
                        license {
                            name 'The MIT License'
                            url 'https://opensource.org/licenses/mit-license.php'
                        }
                    }

                    developers {
                        developer {
                            id 'laht'
                            name 'Lars Ivar Hatledal'
                            email 'laht@ntnu.no'
                        }
                    }
                }
            }
        }
    }
}
