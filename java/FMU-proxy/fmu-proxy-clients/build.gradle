
plugins {
    id "kotlin"
}

def snapshot = true
def fmi4j_version = snapshot ? fmi4j_snapshot_version : fmi4j_stable_version

dependencies {

    implementation group: 'io.grpc', name: 'grpc-netty', version: grpc_version

    implementation group: 'info.laht', name: 'yaj-rpc', version: yajrpc_version
    implementation group: 'info.laht', name: 'yaj-rpc-ws', version: yajrpc_version
    implementation group: 'info.laht', name: 'yaj-rpc-tcp', version: yajrpc_version
    implementation group: 'info.laht', name: 'yaj-rpc-zmq', version: yajrpc_version
    implementation group: 'info.laht', name: 'yaj-rpc-http', version: yajrpc_version

    implementation group: 'no.mechatronics.sfi.fmi4j', name: 'fmi-modeldescription', version: fmi4j_version, changing: snapshot
    implementation group: 'no.mechatronics.sfi.fmuproxy', name: 'rpc-definitions', version: '0.1-SNAPSHOT', changing: true

    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
    runtime group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4j_version

}

if (hasProperty("ossrhUsername") && hasProperty("ossrhPassword")) {

    apply plugin: 'maven'
    apply plugin: 'signing'

    group = 'no.mechatronics.sfi.fmuproxy'
    version = '0.1-SNAPSHOT'

    task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar (type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name archivesBaseName
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'A collection of clients for talking to FMU-proxy servers'
                    url 'https://github.com/SFI-Mechatronics/FMU-proxy'

                    scm {
                        connection 'scm:git:git://github.com/SFI-Mechatronics/FMU-proxy.git'
                        developerConnection 'scm:git:ssh://github.com/SFI-Mechatronics/FMU-proxy.git'
                        url 'https://github.com/SFI-Mechatronics/FMU-proxy/tree/master'
                    }

                    licenses {
                        license {
                            name 'The MIT License'
                            url 'https://opensource.org/licenses/mit-license.php'
                        }
                    }

                    developers {
                        developer {
                            id 'laht'
                            name 'Lars Ivar Hatledal'
                            email 'laht@ntnu.no'
                        }
                    }

                }
            }
        }
    }

}
