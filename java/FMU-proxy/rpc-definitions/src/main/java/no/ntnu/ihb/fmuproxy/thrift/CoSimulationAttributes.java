/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package no.ntnu.ihb.fmuproxy.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-01-09")
public class CoSimulationAttributes implements org.apache.thrift.TBase<CoSimulationAttributes, CoSimulationAttributes._Fields>, java.io.Serializable, Cloneable, Comparable<CoSimulationAttributes> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CoSimulationAttributes");

  private static final org.apache.thrift.protocol.TField MODEL_IDENTIFIER_FIELD_DESC = new org.apache.thrift.protocol.TField("modelIdentifier", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CAN_GET_AND_SET_FMUSTATE_FIELD_DESC = new org.apache.thrift.protocol.TField("canGetAndSetFMUstate", org.apache.thrift.protocol.TType.BOOL, (short)2);
  private static final org.apache.thrift.protocol.TField CAN_SERIALIZE_FMUSTATE_FIELD_DESC = new org.apache.thrift.protocol.TField("canSerializeFMUstate", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField PROVIDES_DIRECTIONAL_DERIVATIVE_FIELD_DESC = new org.apache.thrift.protocol.TField("providesDirectionalDerivative", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("canHandleVariableCommunicationStepSize", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField CAN_INTERPOLATE_INPUTS_FIELD_DESC = new org.apache.thrift.protocol.TField("canInterpolateInputs", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField MAX_OUTPUT_DERIVATIVE_ORDER_FIELD_DESC = new org.apache.thrift.protocol.TField("maxOutputDerivativeOrder", org.apache.thrift.protocol.TType.I32, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CoSimulationAttributesStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CoSimulationAttributesTupleSchemeFactory();

  public java.lang.String modelIdentifier; // required
  public boolean canGetAndSetFMUstate; // required
  public boolean canSerializeFMUstate; // required
  public boolean providesDirectionalDerivative; // required
  public boolean canHandleVariableCommunicationStepSize; // required
  public boolean canInterpolateInputs; // required
  public int maxOutputDerivativeOrder; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MODEL_IDENTIFIER((short)1, "modelIdentifier"),
    CAN_GET_AND_SET_FMUSTATE((short)2, "canGetAndSetFMUstate"),
    CAN_SERIALIZE_FMUSTATE((short)3, "canSerializeFMUstate"),
    PROVIDES_DIRECTIONAL_DERIVATIVE((short)4, "providesDirectionalDerivative"),
    CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE((short)5, "canHandleVariableCommunicationStepSize"),
    CAN_INTERPOLATE_INPUTS((short)6, "canInterpolateInputs"),
    MAX_OUTPUT_DERIVATIVE_ORDER((short)7, "maxOutputDerivativeOrder");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MODEL_IDENTIFIER
          return MODEL_IDENTIFIER;
        case 2: // CAN_GET_AND_SET_FMUSTATE
          return CAN_GET_AND_SET_FMUSTATE;
        case 3: // CAN_SERIALIZE_FMUSTATE
          return CAN_SERIALIZE_FMUSTATE;
        case 4: // PROVIDES_DIRECTIONAL_DERIVATIVE
          return PROVIDES_DIRECTIONAL_DERIVATIVE;
        case 5: // CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE
          return CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE;
        case 6: // CAN_INTERPOLATE_INPUTS
          return CAN_INTERPOLATE_INPUTS;
        case 7: // MAX_OUTPUT_DERIVATIVE_ORDER
          return MAX_OUTPUT_DERIVATIVE_ORDER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CANGETANDSETFMUSTATE_ISSET_ID = 0;
  private static final int __CANSERIALIZEFMUSTATE_ISSET_ID = 1;
  private static final int __PROVIDESDIRECTIONALDERIVATIVE_ISSET_ID = 2;
  private static final int __CANHANDLEVARIABLECOMMUNICATIONSTEPSIZE_ISSET_ID = 3;
  private static final int __CANINTERPOLATEINPUTS_ISSET_ID = 4;
  private static final int __MAXOUTPUTDERIVATIVEORDER_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MODEL_IDENTIFIER, new org.apache.thrift.meta_data.FieldMetaData("modelIdentifier", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CAN_GET_AND_SET_FMUSTATE, new org.apache.thrift.meta_data.FieldMetaData("canGetAndSetFMUstate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CAN_SERIALIZE_FMUSTATE, new org.apache.thrift.meta_data.FieldMetaData("canSerializeFMUstate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PROVIDES_DIRECTIONAL_DERIVATIVE, new org.apache.thrift.meta_data.FieldMetaData("providesDirectionalDerivative", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE, new org.apache.thrift.meta_data.FieldMetaData("canHandleVariableCommunicationStepSize", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CAN_INTERPOLATE_INPUTS, new org.apache.thrift.meta_data.FieldMetaData("canInterpolateInputs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MAX_OUTPUT_DERIVATIVE_ORDER, new org.apache.thrift.meta_data.FieldMetaData("maxOutputDerivativeOrder", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CoSimulationAttributes.class, metaDataMap);
  }

  public CoSimulationAttributes() {
  }

  public CoSimulationAttributes(
    java.lang.String modelIdentifier,
    boolean canGetAndSetFMUstate,
    boolean canSerializeFMUstate,
    boolean providesDirectionalDerivative,
    boolean canHandleVariableCommunicationStepSize,
    boolean canInterpolateInputs,
    int maxOutputDerivativeOrder)
  {
    this();
    this.modelIdentifier = modelIdentifier;
    this.canGetAndSetFMUstate = canGetAndSetFMUstate;
    setCanGetAndSetFMUstateIsSet(true);
    this.canSerializeFMUstate = canSerializeFMUstate;
    setCanSerializeFMUstateIsSet(true);
    this.providesDirectionalDerivative = providesDirectionalDerivative;
    setProvidesDirectionalDerivativeIsSet(true);
    this.canHandleVariableCommunicationStepSize = canHandleVariableCommunicationStepSize;
    setCanHandleVariableCommunicationStepSizeIsSet(true);
    this.canInterpolateInputs = canInterpolateInputs;
    setCanInterpolateInputsIsSet(true);
    this.maxOutputDerivativeOrder = maxOutputDerivativeOrder;
    setMaxOutputDerivativeOrderIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CoSimulationAttributes(CoSimulationAttributes other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetModelIdentifier()) {
      this.modelIdentifier = other.modelIdentifier;
    }
    this.canGetAndSetFMUstate = other.canGetAndSetFMUstate;
    this.canSerializeFMUstate = other.canSerializeFMUstate;
    this.providesDirectionalDerivative = other.providesDirectionalDerivative;
    this.canHandleVariableCommunicationStepSize = other.canHandleVariableCommunicationStepSize;
    this.canInterpolateInputs = other.canInterpolateInputs;
    this.maxOutputDerivativeOrder = other.maxOutputDerivativeOrder;
  }

  public CoSimulationAttributes deepCopy() {
    return new CoSimulationAttributes(this);
  }

  @Override
  public void clear() {
    this.modelIdentifier = null;
    setCanGetAndSetFMUstateIsSet(false);
    this.canGetAndSetFMUstate = false;
    setCanSerializeFMUstateIsSet(false);
    this.canSerializeFMUstate = false;
    setProvidesDirectionalDerivativeIsSet(false);
    this.providesDirectionalDerivative = false;
    setCanHandleVariableCommunicationStepSizeIsSet(false);
    this.canHandleVariableCommunicationStepSize = false;
    setCanInterpolateInputsIsSet(false);
    this.canInterpolateInputs = false;
    setMaxOutputDerivativeOrderIsSet(false);
    this.maxOutputDerivativeOrder = 0;
  }

  public java.lang.String getModelIdentifier() {
    return this.modelIdentifier;
  }

  public CoSimulationAttributes setModelIdentifier(java.lang.String modelIdentifier) {
    this.modelIdentifier = modelIdentifier;
    return this;
  }

  public void unsetModelIdentifier() {
    this.modelIdentifier = null;
  }

  /** Returns true if field modelIdentifier is set (has been assigned a value) and false otherwise */
  public boolean isSetModelIdentifier() {
    return this.modelIdentifier != null;
  }

  public void setModelIdentifierIsSet(boolean value) {
    if (!value) {
      this.modelIdentifier = null;
    }
  }

  public boolean isCanGetAndSetFMUstate() {
    return this.canGetAndSetFMUstate;
  }

  public CoSimulationAttributes setCanGetAndSetFMUstate(boolean canGetAndSetFMUstate) {
    this.canGetAndSetFMUstate = canGetAndSetFMUstate;
    setCanGetAndSetFMUstateIsSet(true);
    return this;
  }

  public void unsetCanGetAndSetFMUstate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANGETANDSETFMUSTATE_ISSET_ID);
  }

  /** Returns true if field canGetAndSetFMUstate is set (has been assigned a value) and false otherwise */
  public boolean isSetCanGetAndSetFMUstate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANGETANDSETFMUSTATE_ISSET_ID);
  }

  public void setCanGetAndSetFMUstateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANGETANDSETFMUSTATE_ISSET_ID, value);
  }

  public boolean isCanSerializeFMUstate() {
    return this.canSerializeFMUstate;
  }

  public CoSimulationAttributes setCanSerializeFMUstate(boolean canSerializeFMUstate) {
    this.canSerializeFMUstate = canSerializeFMUstate;
    setCanSerializeFMUstateIsSet(true);
    return this;
  }

  public void unsetCanSerializeFMUstate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANSERIALIZEFMUSTATE_ISSET_ID);
  }

  /** Returns true if field canSerializeFMUstate is set (has been assigned a value) and false otherwise */
  public boolean isSetCanSerializeFMUstate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANSERIALIZEFMUSTATE_ISSET_ID);
  }

  public void setCanSerializeFMUstateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANSERIALIZEFMUSTATE_ISSET_ID, value);
  }

  public boolean isProvidesDirectionalDerivative() {
    return this.providesDirectionalDerivative;
  }

  public CoSimulationAttributes setProvidesDirectionalDerivative(boolean providesDirectionalDerivative) {
    this.providesDirectionalDerivative = providesDirectionalDerivative;
    setProvidesDirectionalDerivativeIsSet(true);
    return this;
  }

  public void unsetProvidesDirectionalDerivative() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROVIDESDIRECTIONALDERIVATIVE_ISSET_ID);
  }

  /** Returns true if field providesDirectionalDerivative is set (has been assigned a value) and false otherwise */
  public boolean isSetProvidesDirectionalDerivative() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROVIDESDIRECTIONALDERIVATIVE_ISSET_ID);
  }

  public void setProvidesDirectionalDerivativeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROVIDESDIRECTIONALDERIVATIVE_ISSET_ID, value);
  }

  public boolean isCanHandleVariableCommunicationStepSize() {
    return this.canHandleVariableCommunicationStepSize;
  }

  public CoSimulationAttributes setCanHandleVariableCommunicationStepSize(boolean canHandleVariableCommunicationStepSize) {
    this.canHandleVariableCommunicationStepSize = canHandleVariableCommunicationStepSize;
    setCanHandleVariableCommunicationStepSizeIsSet(true);
    return this;
  }

  public void unsetCanHandleVariableCommunicationStepSize() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANHANDLEVARIABLECOMMUNICATIONSTEPSIZE_ISSET_ID);
  }

  /** Returns true if field canHandleVariableCommunicationStepSize is set (has been assigned a value) and false otherwise */
  public boolean isSetCanHandleVariableCommunicationStepSize() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANHANDLEVARIABLECOMMUNICATIONSTEPSIZE_ISSET_ID);
  }

  public void setCanHandleVariableCommunicationStepSizeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANHANDLEVARIABLECOMMUNICATIONSTEPSIZE_ISSET_ID, value);
  }

  public boolean isCanInterpolateInputs() {
    return this.canInterpolateInputs;
  }

  public CoSimulationAttributes setCanInterpolateInputs(boolean canInterpolateInputs) {
    this.canInterpolateInputs = canInterpolateInputs;
    setCanInterpolateInputsIsSet(true);
    return this;
  }

  public void unsetCanInterpolateInputs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANINTERPOLATEINPUTS_ISSET_ID);
  }

  /** Returns true if field canInterpolateInputs is set (has been assigned a value) and false otherwise */
  public boolean isSetCanInterpolateInputs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANINTERPOLATEINPUTS_ISSET_ID);
  }

  public void setCanInterpolateInputsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANINTERPOLATEINPUTS_ISSET_ID, value);
  }

  public int getMaxOutputDerivativeOrder() {
    return this.maxOutputDerivativeOrder;
  }

  public CoSimulationAttributes setMaxOutputDerivativeOrder(int maxOutputDerivativeOrder) {
    this.maxOutputDerivativeOrder = maxOutputDerivativeOrder;
    setMaxOutputDerivativeOrderIsSet(true);
    return this;
  }

  public void unsetMaxOutputDerivativeOrder() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAXOUTPUTDERIVATIVEORDER_ISSET_ID);
  }

  /** Returns true if field maxOutputDerivativeOrder is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxOutputDerivativeOrder() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAXOUTPUTDERIVATIVEORDER_ISSET_ID);
  }

  public void setMaxOutputDerivativeOrderIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAXOUTPUTDERIVATIVEORDER_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case MODEL_IDENTIFIER:
      if (value == null) {
        unsetModelIdentifier();
      } else {
        setModelIdentifier((java.lang.String)value);
      }
      break;

    case CAN_GET_AND_SET_FMUSTATE:
      if (value == null) {
        unsetCanGetAndSetFMUstate();
      } else {
        setCanGetAndSetFMUstate((java.lang.Boolean)value);
      }
      break;

    case CAN_SERIALIZE_FMUSTATE:
      if (value == null) {
        unsetCanSerializeFMUstate();
      } else {
        setCanSerializeFMUstate((java.lang.Boolean)value);
      }
      break;

    case PROVIDES_DIRECTIONAL_DERIVATIVE:
      if (value == null) {
        unsetProvidesDirectionalDerivative();
      } else {
        setProvidesDirectionalDerivative((java.lang.Boolean)value);
      }
      break;

    case CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE:
      if (value == null) {
        unsetCanHandleVariableCommunicationStepSize();
      } else {
        setCanHandleVariableCommunicationStepSize((java.lang.Boolean)value);
      }
      break;

    case CAN_INTERPOLATE_INPUTS:
      if (value == null) {
        unsetCanInterpolateInputs();
      } else {
        setCanInterpolateInputs((java.lang.Boolean)value);
      }
      break;

    case MAX_OUTPUT_DERIVATIVE_ORDER:
      if (value == null) {
        unsetMaxOutputDerivativeOrder();
      } else {
        setMaxOutputDerivativeOrder((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case MODEL_IDENTIFIER:
      return getModelIdentifier();

    case CAN_GET_AND_SET_FMUSTATE:
      return isCanGetAndSetFMUstate();

    case CAN_SERIALIZE_FMUSTATE:
      return isCanSerializeFMUstate();

    case PROVIDES_DIRECTIONAL_DERIVATIVE:
      return isProvidesDirectionalDerivative();

    case CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE:
      return isCanHandleVariableCommunicationStepSize();

    case CAN_INTERPOLATE_INPUTS:
      return isCanInterpolateInputs();

    case MAX_OUTPUT_DERIVATIVE_ORDER:
      return getMaxOutputDerivativeOrder();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case MODEL_IDENTIFIER:
      return isSetModelIdentifier();
    case CAN_GET_AND_SET_FMUSTATE:
      return isSetCanGetAndSetFMUstate();
    case CAN_SERIALIZE_FMUSTATE:
      return isSetCanSerializeFMUstate();
    case PROVIDES_DIRECTIONAL_DERIVATIVE:
      return isSetProvidesDirectionalDerivative();
    case CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE:
      return isSetCanHandleVariableCommunicationStepSize();
    case CAN_INTERPOLATE_INPUTS:
      return isSetCanInterpolateInputs();
    case MAX_OUTPUT_DERIVATIVE_ORDER:
      return isSetMaxOutputDerivativeOrder();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CoSimulationAttributes)
      return this.equals((CoSimulationAttributes)that);
    return false;
  }

  public boolean equals(CoSimulationAttributes that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_modelIdentifier = true && this.isSetModelIdentifier();
    boolean that_present_modelIdentifier = true && that.isSetModelIdentifier();
    if (this_present_modelIdentifier || that_present_modelIdentifier) {
      if (!(this_present_modelIdentifier && that_present_modelIdentifier))
        return false;
      if (!this.modelIdentifier.equals(that.modelIdentifier))
        return false;
    }

    boolean this_present_canGetAndSetFMUstate = true;
    boolean that_present_canGetAndSetFMUstate = true;
    if (this_present_canGetAndSetFMUstate || that_present_canGetAndSetFMUstate) {
      if (!(this_present_canGetAndSetFMUstate && that_present_canGetAndSetFMUstate))
        return false;
      if (this.canGetAndSetFMUstate != that.canGetAndSetFMUstate)
        return false;
    }

    boolean this_present_canSerializeFMUstate = true;
    boolean that_present_canSerializeFMUstate = true;
    if (this_present_canSerializeFMUstate || that_present_canSerializeFMUstate) {
      if (!(this_present_canSerializeFMUstate && that_present_canSerializeFMUstate))
        return false;
      if (this.canSerializeFMUstate != that.canSerializeFMUstate)
        return false;
    }

    boolean this_present_providesDirectionalDerivative = true;
    boolean that_present_providesDirectionalDerivative = true;
    if (this_present_providesDirectionalDerivative || that_present_providesDirectionalDerivative) {
      if (!(this_present_providesDirectionalDerivative && that_present_providesDirectionalDerivative))
        return false;
      if (this.providesDirectionalDerivative != that.providesDirectionalDerivative)
        return false;
    }

    boolean this_present_canHandleVariableCommunicationStepSize = true;
    boolean that_present_canHandleVariableCommunicationStepSize = true;
    if (this_present_canHandleVariableCommunicationStepSize || that_present_canHandleVariableCommunicationStepSize) {
      if (!(this_present_canHandleVariableCommunicationStepSize && that_present_canHandleVariableCommunicationStepSize))
        return false;
      if (this.canHandleVariableCommunicationStepSize != that.canHandleVariableCommunicationStepSize)
        return false;
    }

    boolean this_present_canInterpolateInputs = true;
    boolean that_present_canInterpolateInputs = true;
    if (this_present_canInterpolateInputs || that_present_canInterpolateInputs) {
      if (!(this_present_canInterpolateInputs && that_present_canInterpolateInputs))
        return false;
      if (this.canInterpolateInputs != that.canInterpolateInputs)
        return false;
    }

    boolean this_present_maxOutputDerivativeOrder = true;
    boolean that_present_maxOutputDerivativeOrder = true;
    if (this_present_maxOutputDerivativeOrder || that_present_maxOutputDerivativeOrder) {
      if (!(this_present_maxOutputDerivativeOrder && that_present_maxOutputDerivativeOrder))
        return false;
      if (this.maxOutputDerivativeOrder != that.maxOutputDerivativeOrder)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetModelIdentifier()) ? 131071 : 524287);
    if (isSetModelIdentifier())
      hashCode = hashCode * 8191 + modelIdentifier.hashCode();

    hashCode = hashCode * 8191 + ((canGetAndSetFMUstate) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((canSerializeFMUstate) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((providesDirectionalDerivative) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((canHandleVariableCommunicationStepSize) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((canInterpolateInputs) ? 131071 : 524287);

    hashCode = hashCode * 8191 + maxOutputDerivativeOrder;

    return hashCode;
  }

  @Override
  public int compareTo(CoSimulationAttributes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetModelIdentifier()).compareTo(other.isSetModelIdentifier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelIdentifier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modelIdentifier, other.modelIdentifier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCanGetAndSetFMUstate()).compareTo(other.isSetCanGetAndSetFMUstate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanGetAndSetFMUstate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canGetAndSetFMUstate, other.canGetAndSetFMUstate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCanSerializeFMUstate()).compareTo(other.isSetCanSerializeFMUstate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanSerializeFMUstate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canSerializeFMUstate, other.canSerializeFMUstate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProvidesDirectionalDerivative()).compareTo(other.isSetProvidesDirectionalDerivative());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvidesDirectionalDerivative()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.providesDirectionalDerivative, other.providesDirectionalDerivative);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCanHandleVariableCommunicationStepSize()).compareTo(other.isSetCanHandleVariableCommunicationStepSize());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanHandleVariableCommunicationStepSize()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canHandleVariableCommunicationStepSize, other.canHandleVariableCommunicationStepSize);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCanInterpolateInputs()).compareTo(other.isSetCanInterpolateInputs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanInterpolateInputs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canInterpolateInputs, other.canInterpolateInputs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMaxOutputDerivativeOrder()).compareTo(other.isSetMaxOutputDerivativeOrder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxOutputDerivativeOrder()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxOutputDerivativeOrder, other.maxOutputDerivativeOrder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CoSimulationAttributes(");
    boolean first = true;

    sb.append("modelIdentifier:");
    if (this.modelIdentifier == null) {
      sb.append("null");
    } else {
      sb.append(this.modelIdentifier);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("canGetAndSetFMUstate:");
    sb.append(this.canGetAndSetFMUstate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("canSerializeFMUstate:");
    sb.append(this.canSerializeFMUstate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("providesDirectionalDerivative:");
    sb.append(this.providesDirectionalDerivative);
    first = false;
    if (!first) sb.append(", ");
    sb.append("canHandleVariableCommunicationStepSize:");
    sb.append(this.canHandleVariableCommunicationStepSize);
    first = false;
    if (!first) sb.append(", ");
    sb.append("canInterpolateInputs:");
    sb.append(this.canInterpolateInputs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxOutputDerivativeOrder:");
    sb.append(this.maxOutputDerivativeOrder);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CoSimulationAttributesStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CoSimulationAttributesStandardScheme getScheme() {
      return new CoSimulationAttributesStandardScheme();
    }
  }

  private static class CoSimulationAttributesStandardScheme extends org.apache.thrift.scheme.StandardScheme<CoSimulationAttributes> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CoSimulationAttributes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MODEL_IDENTIFIER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modelIdentifier = iprot.readString();
              struct.setModelIdentifierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CAN_GET_AND_SET_FMUSTATE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.canGetAndSetFMUstate = iprot.readBool();
              struct.setCanGetAndSetFMUstateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CAN_SERIALIZE_FMUSTATE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.canSerializeFMUstate = iprot.readBool();
              struct.setCanSerializeFMUstateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROVIDES_DIRECTIONAL_DERIVATIVE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.providesDirectionalDerivative = iprot.readBool();
              struct.setProvidesDirectionalDerivativeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.canHandleVariableCommunicationStepSize = iprot.readBool();
              struct.setCanHandleVariableCommunicationStepSizeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CAN_INTERPOLATE_INPUTS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.canInterpolateInputs = iprot.readBool();
              struct.setCanInterpolateInputsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MAX_OUTPUT_DERIVATIVE_ORDER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxOutputDerivativeOrder = iprot.readI32();
              struct.setMaxOutputDerivativeOrderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CoSimulationAttributes struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.modelIdentifier != null) {
        oprot.writeFieldBegin(MODEL_IDENTIFIER_FIELD_DESC);
        oprot.writeString(struct.modelIdentifier);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CAN_GET_AND_SET_FMUSTATE_FIELD_DESC);
      oprot.writeBool(struct.canGetAndSetFMUstate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAN_SERIALIZE_FMUSTATE_FIELD_DESC);
      oprot.writeBool(struct.canSerializeFMUstate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROVIDES_DIRECTIONAL_DERIVATIVE_FIELD_DESC);
      oprot.writeBool(struct.providesDirectionalDerivative);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAN_HANDLE_VARIABLE_COMMUNICATION_STEP_SIZE_FIELD_DESC);
      oprot.writeBool(struct.canHandleVariableCommunicationStepSize);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAN_INTERPOLATE_INPUTS_FIELD_DESC);
      oprot.writeBool(struct.canInterpolateInputs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_OUTPUT_DERIVATIVE_ORDER_FIELD_DESC);
      oprot.writeI32(struct.maxOutputDerivativeOrder);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CoSimulationAttributesTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CoSimulationAttributesTupleScheme getScheme() {
      return new CoSimulationAttributesTupleScheme();
    }
  }

  private static class CoSimulationAttributesTupleScheme extends org.apache.thrift.scheme.TupleScheme<CoSimulationAttributes> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CoSimulationAttributes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetModelIdentifier()) {
        optionals.set(0);
      }
      if (struct.isSetCanGetAndSetFMUstate()) {
        optionals.set(1);
      }
      if (struct.isSetCanSerializeFMUstate()) {
        optionals.set(2);
      }
      if (struct.isSetProvidesDirectionalDerivative()) {
        optionals.set(3);
      }
      if (struct.isSetCanHandleVariableCommunicationStepSize()) {
        optionals.set(4);
      }
      if (struct.isSetCanInterpolateInputs()) {
        optionals.set(5);
      }
      if (struct.isSetMaxOutputDerivativeOrder()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetModelIdentifier()) {
        oprot.writeString(struct.modelIdentifier);
      }
      if (struct.isSetCanGetAndSetFMUstate()) {
        oprot.writeBool(struct.canGetAndSetFMUstate);
      }
      if (struct.isSetCanSerializeFMUstate()) {
        oprot.writeBool(struct.canSerializeFMUstate);
      }
      if (struct.isSetProvidesDirectionalDerivative()) {
        oprot.writeBool(struct.providesDirectionalDerivative);
      }
      if (struct.isSetCanHandleVariableCommunicationStepSize()) {
        oprot.writeBool(struct.canHandleVariableCommunicationStepSize);
      }
      if (struct.isSetCanInterpolateInputs()) {
        oprot.writeBool(struct.canInterpolateInputs);
      }
      if (struct.isSetMaxOutputDerivativeOrder()) {
        oprot.writeI32(struct.maxOutputDerivativeOrder);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CoSimulationAttributes struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.modelIdentifier = iprot.readString();
        struct.setModelIdentifierIsSet(true);
      }
      if (incoming.get(1)) {
        struct.canGetAndSetFMUstate = iprot.readBool();
        struct.setCanGetAndSetFMUstateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.canSerializeFMUstate = iprot.readBool();
        struct.setCanSerializeFMUstateIsSet(true);
      }
      if (incoming.get(3)) {
        struct.providesDirectionalDerivative = iprot.readBool();
        struct.setProvidesDirectionalDerivativeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.canHandleVariableCommunicationStepSize = iprot.readBool();
        struct.setCanHandleVariableCommunicationStepSizeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.canInterpolateInputs = iprot.readBool();
        struct.setCanInterpolateInputsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.maxOutputDerivativeOrder = iprot.readI32();
        struct.setMaxOutputDerivativeOrderIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

