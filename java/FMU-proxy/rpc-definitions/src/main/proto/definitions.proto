/*
 * The MIT License
 *
 * Copyright 2017-2018 Norwegian University of Technology (NTNU)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

syntax = "proto3";

package no.mechatronics.sfi.fmuproxy.grpc;
option java_outer_classname = "Proto";

message ModelDescription {
    string fmiVersion = 1;
    string guid = 2;
    string model_name = 3;
    string license = 4;
    string copyright = 5;
    string author = 6;
    string version = 7;
    string description = 8;
    string generation_tool = 9;
    string generationDateAndTime = 10;
    DefaultExperiment default_experiment = 11;
    VariableNamingConvention variable_naming_convention = 12;
    repeated ScalarVariable model_variables = 13;
    ModelStructure model_structure = 14;
    bool supports_co_simulation = 15;
    bool supports_model_exchange = 16;
}

message IntegerAttribute {
    int32 min = 1;
    int32 max = 2;
    int32 start = 3;
}

message RealAttribute {
    double min = 1;
    double max = 2;
    double start = 3;
}

message StringAttribute {
    string start = 1;
}

message BooleanAttribute {
    bool start = 1;
}

message EnumerationAttribute {
    int32 min = 1;
    int32 max = 2;
    int32 start = 3;
}

message ScalarVariable {
    uint32 value_reference = 1;
    string name = 2;
    string description = 3;
    string declared_type = 4;
    Initial initial = 5;
    Causality causality = 6;
    Variability variability = 7;
    oneof attribute {
        IntegerAttribute integerAttribute = 10;
        RealAttribute realAttribute = 11;
        StringAttribute stringAttribute = 12;
        BooleanAttribute booleanAttribute = 13;
        EnumerationAttribute enumerationAttribute = 14;
    }
}

message DefaultExperiment {
    double start_time = 1;
    double stop_time = 2;
    double tolerance = 3;
    double step_size = 4;
}


message Unknown {
    uint32 index = 1;
    repeated uint32 dependencies = 2;
    DependenciesKind dependencies_kind = 3;
}

message ModelStructure {
    repeated Unknown outputs = 1;
    repeated Unknown derivatives = 2;
    repeated Unknown initial_unknowns = 3;
}

message Status {
    StatusCode code = 1;
    string message = 2;
}

message InitRequest {
    uint32 fmu_id = 1;
    double start = 2;
    double stop = 3;
}

message StepRequest {
    uint32 fmu_id = 1;
    double step_size = 2;
}

message UInt {
    uint32 value = 1;
}

message Int {
    int32 value = 1;
}

message IntRead {
    int32 value = 1;
    StatusCode status = 2;
}

message IntList {
    repeated int32 values = 1;
}

message IntListRead {
    repeated int32 values = 1;
    StatusCode status = 2;
}

message Real {
    double value = 1;
}

message RealRead {
    double value = 1;
    StatusCode status = 2;
}

message RealList {
    repeated double values = 1;
}

message RealListRead {
    repeated double values = 1;
    StatusCode status = 2;
}

message Str {
    string value = 1;
}

message StrRead {
    string value = 1;
    StatusCode status = 2;
}

message StrList {
    repeated string values = 1;
}

message StrListRead {
    repeated string values = 1;
    StatusCode status = 2;
}

message Bool {
    bool value = 1;
}

message BoolRead {
    bool value = 1;
    StatusCode status = 2;
}

message BoolList {
    repeated bool values = 1;
}

message BoolListRead {
    repeated bool values = 1;
    StatusCode status = 2;
}

message ReadRequest {
    uint32 fmu_id = 1;
    uint32 value_reference = 2;
}

message BulkReadRequest {
    uint32 fmu_id = 1;
    repeated uint32 value_references = 2;
}

message WriteIntRequest {
    uint32 fmu_id = 1;
    uint32 value_reference = 2;
    int32 value = 3;
}

message BulkWriteIntRequest {
    uint32 fmu_id = 1;
    repeated uint32 value_references = 2;
    repeated int32 values = 3;
}

message WriteRealRequest {
    uint32 fmu_id = 1;
    uint32 value_reference = 2;
    double value = 3;
}

message BulkWriteRealRequest {
    uint32 fmu_id = 1;
    repeated uint32 value_references = 2;
    repeated double values = 3;
}

message WriteStrRequest {
    uint32 fmu_id = 1;
    uint32 value_reference = 2;
    string value = 3;
}

message BulkWriteStrRequest {
    uint32 fmu_id = 1;
    repeated uint32 value_references = 2;
    repeated string values = 3;
}

message WriteBoolRequest {
    uint32 fmu_id = 1;
    uint32 value_reference = 2;
    bool value = 3;
}

message BulkWriteBoolRequest {
    uint32 fmu_id = 1;
    repeated uint32 value_references = 2;
    repeated bool values = 3;
}

message InstanceIntWrite {
    uint32 fmu_id = 1;
    int32 value = 2;
}

message InstanceRealWrite {
    uint32 fmu_id = 1;
    double value = 2;
}

message InstanceStrWrite {
    uint32 fmu_id = 1;
    string value = 2;
}

message InstanceBoolWrite {
    uint32 fmu_id = 1;
    bool value = 2;
}

enum Causality {
    INPUT_CAUSALITY = 0;
    OUTPUT_CAUSALITY = 1;
    PARAMETER_CAUSALITY = 2;
    CALCULATED_PARAMETER_CAUSALITY = 3;
    LOCAL_CAUSALITY = 4;
    INDEPENDENT_CAUSALITY = 5;
}

enum Variability {
    CONSTANT_VARIABILITY = 0;
    FIXED_VARIABILITY = 1;
    CONTINUOUS_VARIABILITY = 2;
    DISCRETE_VARIABILITY = 3;
    TUNABLE_VARIABILITY = 4;
}

enum Initial {
    EXACT_INITIAL = 0;
    APPROX_INITIAL = 1;
    CALCULATED_INITIAL = 2;
}

enum StatusCode {
    OK_STATUS = 0;
    WARNING_STATUS = 1;
    DISCARD_STATUS = 2;
    ERROR_STATUS = 3;
    FATAL_STATUS = 4;
    PENDING_STATUS = 5;
}

enum DependenciesKind {
    DEPENDENT_KIND = 0;
    CONSTANT_KIND = 1;
    TUNABLE_KIND = 2;
    DISCRETE_KIND = 4;
}

enum VariableNamingConvention {
    FLAT = 0;
    STRUCTURED = 1;
}

message Integrator {

    oneof integrators {
        Euler euler = 1;
        ClassicalRungeKutta runge_kutta = 2;
        Midpoint mid_point = 3;
        Gill gill = 4;
        AdamsBashforth adams_bashforth = 5;
        DormandPrince54 dormand_prince54 = 6;
    }

    message Euler {
        double step_size = 1;
    }

    message ClassicalRungeKutta {
        double step_size = 1;
    }

    message Midpoint {
        double step_size = 1;
    }

    message Gill {
        double step_size = 1;
    }

    message AdamsBashforth{
        uint32 n_steps = 1;
        double min_Step = 2;
        double max_step = 3;
        double scal_absolute_tolerance = 4;
        double scal_relative_tolerance = 5;
    }

    message DormandPrince54 {
        double min_Step = 1;
        double max_step = 2;
        double scal_absolute_tolerance = 3;
        double scal_relative_tolerance = 4;
    }

}




    





