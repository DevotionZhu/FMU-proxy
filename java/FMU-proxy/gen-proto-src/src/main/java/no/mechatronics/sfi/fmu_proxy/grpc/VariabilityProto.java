// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: definitions.proto

package no.mechatronics.sfi.fmu_proxy.grpc;

/**
 * Protobuf enum {@code no.mechatronics.sfi.fmu_proxy.grpc.VariabilityProto}
 */
public enum VariabilityProto
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNDEFINED_VARIABILITY = 0;</code>
   */
  UNDEFINED_VARIABILITY(0),
  /**
   * <code>CONSTANT_VARIABILITY = 1;</code>
   */
  CONSTANT_VARIABILITY(1),
  /**
   * <code>FIXED_VARIABILITY = 2;</code>
   */
  FIXED_VARIABILITY(2),
  /**
   * <code>CONTINUOUS_VARIABILITY = 3;</code>
   */
  CONTINUOUS_VARIABILITY(3),
  /**
   * <code>DISCRETE_VARIABILITY = 4;</code>
   */
  DISCRETE_VARIABILITY(4),
  /**
   * <code>TUNABLE_VARIABILITY = 5;</code>
   */
  TUNABLE_VARIABILITY(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNDEFINED_VARIABILITY = 0;</code>
   */
  public static final int UNDEFINED_VARIABILITY_VALUE = 0;
  /**
   * <code>CONSTANT_VARIABILITY = 1;</code>
   */
  public static final int CONSTANT_VARIABILITY_VALUE = 1;
  /**
   * <code>FIXED_VARIABILITY = 2;</code>
   */
  public static final int FIXED_VARIABILITY_VALUE = 2;
  /**
   * <code>CONTINUOUS_VARIABILITY = 3;</code>
   */
  public static final int CONTINUOUS_VARIABILITY_VALUE = 3;
  /**
   * <code>DISCRETE_VARIABILITY = 4;</code>
   */
  public static final int DISCRETE_VARIABILITY_VALUE = 4;
  /**
   * <code>TUNABLE_VARIABILITY = 5;</code>
   */
  public static final int TUNABLE_VARIABILITY_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static VariabilityProto valueOf(int value) {
    return forNumber(value);
  }

  public static VariabilityProto forNumber(int value) {
    switch (value) {
      case 0: return UNDEFINED_VARIABILITY;
      case 1: return CONSTANT_VARIABILITY;
      case 2: return FIXED_VARIABILITY;
      case 3: return CONTINUOUS_VARIABILITY;
      case 4: return DISCRETE_VARIABILITY;
      case 5: return TUNABLE_VARIABILITY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<VariabilityProto>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      VariabilityProto> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<VariabilityProto>() {
          public VariabilityProto findValueByNumber(int number) {
            return VariabilityProto.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return no.mechatronics.sfi.fmu_proxy.grpc.Definitions.getDescriptor().getEnumTypes().get(1);
  }

  private static final VariabilityProto[] VALUES = values();

  public static VariabilityProto valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private VariabilityProto(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:no.mechatronics.sfi.fmu_proxy.grpc.VariabilityProto)
}

