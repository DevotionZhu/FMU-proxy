/*
 * The MIT License
 *
 * Copyright 2017-2018 Norwegian University of Technology (NTNU)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

syntax = "proto3";

package no.mechatronics.sfi.fmu_proxy.grpc;
option java_outer_classname = "GenericFmuProto";
import "definitions.proto";

service GenericFmuService {

    rpc CreateInstanceFromCS (Empty) returns (UInt);
	rpc CreateInstanceFromME (Integrator) returns (UInt);

	rpc GetGuid (Empty)  returns (Str);
    rpc GetModelName (Empty) returns (Str);
	rpc GetModelDescriptionXml(Empty) returns (Str);

	rpc GetModelStructure (Empty) returns (ModelStructure);
    rpc GetModelVariables (Empty) returns (stream ScalarVariable);

    //instance methods
    rpc GetCurrentTime (UInt) returns (Real);
    rpc IsTerminated (UInt) returns (Bool);

    rpc Init (InitRequest) returns (Bool);
    rpc Step (StepRequest) returns (Status);
    rpc Terminate (UInt) returns (Bool);
    rpc Reset(UInt) returns (Status);

    rpc ReadInteger (ReadRequest) returns (IntRead);
	rpc ReadReal (ReadRequest) returns (RealRead);
	rpc ReadString (ReadRequest) returns (StrRead);
	rpc ReadBoolean (ReadRequest) returns (BoolRead);
	
	rpc BulkReadInteger (BulkReadRequest) returns (IntListRead);
	rpc BulkReadReal (BulkReadRequest) returns (RealListRead);
	rpc BulkReadString (BulkReadRequest) returns (StrListRead);
	rpc BulkReadBoolean (BulkReadRequest) returns (BoolListRead);
	
    rpc WriteInteger (WriteIntegerRequest) returns (Status);
	rpc WriteReal (WriteRealRequest) returns (Status);
	rpc WriteString (WriteStringRequest) returns (Status);
	rpc WriteBoolean (WriteBooleanRequest) returns (Status);
	
	rpc BulkWriteInteger (BulkWriteIntegerRequest) returns (Status);
	rpc BulkWriteReal (BulkWriteRealRequest) returns (Status);
	rpc BulkWriteString (BulkWriteStringRequest) returns (Status);
	rpc BulkWriteBoolean (BulkWriteBooleanRequest) returns (Status);

}
