


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
    }
}

apply plugin: 'com.google.protobuf'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'no.mechatronics.sfi.grpc_fmu'
version = '0.1-SNAPSHOT'

dependencies {

    implementation group: 'io.grpc', name: 'grpc-stub', version: '1.9.0'
    implementation group: 'io.grpc', name: 'grpc-netty', version: '1.9.0'
    implementation group: 'io.grpc', name: 'grpc-protobuf', version: '1.9.0'

    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.5.1'

    testImplementation group: 'no.mechatronics.sfi.fmi4j', name: 'fmi-import', version: '0.2.3'

}

protobuf {
    generatedFilesBaseDir = "$projectDir/src"
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    generateProtoTasks {

        ofSourceSet('main')*.plugins {
            grpc {
                outputSubDir = 'java'
            }
        }
    }

}

sourceSets {
    main {
        proto {
            srcDir '../../../proto'
        }
    }
}


task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name archivesBaseName
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'A Java client, written in Kotlin, for talking to gRPC-FMU servers'
                url 'https://github.com/SFI-Mechatronics/gRPC-FMU'

                scm {
                    connection 'scm:git:git://github.com/SFI-Mechatronics/gRPC-FMU.git'
                    developerConnection 'scm:git:ssh://github.com/SFI-Mechatronics/gRPC-FMU.git'
                    url 'https://github.com/SFI-Mechatronics/gRPC-FMU/tree/master'
                }

                licenses {
                    license {
                        name 'The MIT License'
                        url 'https://opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id 'laht'
                        name 'Lars Ivar Hatledal'
                        email 'laht@ntnu.no'
                    }
                }
            }
        }
    }
}