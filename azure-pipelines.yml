trigger:
  - master

jobs:

  - job: java
    timeoutInMinutes: 30

    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - task: Gradle@2
        inputs:
          workingDirectory: 'java/FMU-proxy'
          gradleWrapperFile: 'java/FMU-proxy/gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'

  - job: cpp_vcpkg
    timeoutInMinutes: 120

    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - task: Bash@3
        inputs:
          script: |
            git submodule update --init --recursive
          workingDirectory: '$(system.defaultWorkingDirectory)'
          targetType: inline

      - task: Bash@3
        inputs:
          script: |
            git clone https://github.com/Microsoft/vcpkg.git
            cd vcpkg
            ./bootstrap-vcpkg.bat
            ./vcpkg install curl grpc nlohmann-json libzip[core] spdlog boost-program-options boost-ublas boost-odeint --triplet x64-windows
          workingDirectory: '$(system.defaultWorkingDirectory)/..'
          targetType: inline

      - task: CMake@1
        inputs:
          workingDirectory: '$(system.defaultWorkingDirectory)/cpp/FMU-proxy/build'
          cmakeArgs: '.. -DCMAKE_TOOLCHAIN_FILE=../../../../vcpkg/scripts/buildsystems/vcpkg.cmake -DFMU_PROXY_WITH_THRIFT=OFF -A x64'

      - task: CMake@1
        inputs:
          workingDirectory: '$(system.defaultWorkingDirectory)/cpp/FMU-proxy/build'
          cmakeArgs: '--build .'

#      - task: Bash@3
#        inputs:
#          script: 'ctest -C Debug'
#          workingDirectory: '$(system.defaultWorkingDirectory)/cpp/FMU-proxy/build/tests'
#          targetType: inline


#  - job: cpp_conan
#    timeoutInMinutes: 120
#
#    pool:
#      vmImage: 'vs2017-win2016'
#
#    steps:
#      - task: Bash@3
#        inputs:
#          script: |
#            git submodule update --init --recursive
#          workingDirectory: '$(system.defaultWorkingDirectory)'
#          targetType: inline
#
#      - task: Bash@3
#        inputs:
#          script: |
#            pip install conan --upgrade
#            conan remote add inexorgame "https://api.bintray.com/conan/inexorgame/inexor-conan"
#            conan remote add bincrafters "https://api.bintray.com/conan/bincrafters/public-conan"
#            conan install . -s build_type=Debug --install-folder=build -o thrift=False -o grpc=True --build=missing
#          workingDirectory: '$(system.defaultWorkingDirectory)/cpp/FMU-proxy/'
#          targetType: inline
#
#      - task: CMake@1
#        inputs:
#          workingDirectory: '$(system.defaultWorkingDirectory)/cpp/FMU-proxy/build'
#          cmakeArgs: '.. -DFMU_PROXY_USING_CONAN=ON -DFMU_PROXY_WITH_THRIFT=OFF -A x64'
#
#      - task: CMake@1
#        inputs:
#          workingDirectory: '$(system.defaultWorkingDirectory)/cpp/FMU-proxy/build'
#          cmakeArgs: '--build .'

#      - task: Bash@3
#        inputs:
#          script: 'ctest -C Debug'
#          workingDirectory: '$(system.defaultWorkingDirectory)/cpp/FMU-proxy/build/tests'
#          targetType: inline
