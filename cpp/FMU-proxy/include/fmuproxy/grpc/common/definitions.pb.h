// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: definitions.proto

#ifndef PROTOBUF_INCLUDED_definitions_2eproto
#define PROTOBUF_INCLUDED_definitions_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_definitions_2eproto 

namespace protobuf_definitions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[38];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_definitions_2eproto
namespace fmuproxy {
namespace grpc {
class Bool;
class BoolDefaultTypeInternal;
extern BoolDefaultTypeInternal _Bool_default_instance_;
class BooleanAttribute;
class BooleanAttributeDefaultTypeInternal;
extern BooleanAttributeDefaultTypeInternal _BooleanAttribute_default_instance_;
class BooleanRead;
class BooleanReadDefaultTypeInternal;
extern BooleanReadDefaultTypeInternal _BooleanRead_default_instance_;
class BulkBooleanRead;
class BulkBooleanReadDefaultTypeInternal;
extern BulkBooleanReadDefaultTypeInternal _BulkBooleanRead_default_instance_;
class BulkIntegerRead;
class BulkIntegerReadDefaultTypeInternal;
extern BulkIntegerReadDefaultTypeInternal _BulkIntegerRead_default_instance_;
class BulkReadRequest;
class BulkReadRequestDefaultTypeInternal;
extern BulkReadRequestDefaultTypeInternal _BulkReadRequest_default_instance_;
class BulkRealRead;
class BulkRealReadDefaultTypeInternal;
extern BulkRealReadDefaultTypeInternal _BulkRealRead_default_instance_;
class BulkStringRead;
class BulkStringReadDefaultTypeInternal;
extern BulkStringReadDefaultTypeInternal _BulkStringRead_default_instance_;
class BulkWriteBooleanRequest;
class BulkWriteBooleanRequestDefaultTypeInternal;
extern BulkWriteBooleanRequestDefaultTypeInternal _BulkWriteBooleanRequest_default_instance_;
class BulkWriteIntegerRequest;
class BulkWriteIntegerRequestDefaultTypeInternal;
extern BulkWriteIntegerRequestDefaultTypeInternal _BulkWriteIntegerRequest_default_instance_;
class BulkWriteRealRequest;
class BulkWriteRealRequestDefaultTypeInternal;
extern BulkWriteRealRequestDefaultTypeInternal _BulkWriteRealRequest_default_instance_;
class BulkWriteStringRequest;
class BulkWriteStringRequestDefaultTypeInternal;
extern BulkWriteStringRequestDefaultTypeInternal _BulkWriteStringRequest_default_instance_;
class DefaultExperiment;
class DefaultExperimentDefaultTypeInternal;
extern DefaultExperimentDefaultTypeInternal _DefaultExperiment_default_instance_;
class EnumerationAttribute;
class EnumerationAttributeDefaultTypeInternal;
extern EnumerationAttributeDefaultTypeInternal _EnumerationAttribute_default_instance_;
class InitRequest;
class InitRequestDefaultTypeInternal;
extern InitRequestDefaultTypeInternal _InitRequest_default_instance_;
class Int;
class IntDefaultTypeInternal;
extern IntDefaultTypeInternal _Int_default_instance_;
class IntegerAttribute;
class IntegerAttributeDefaultTypeInternal;
extern IntegerAttributeDefaultTypeInternal _IntegerAttribute_default_instance_;
class IntegerRead;
class IntegerReadDefaultTypeInternal;
extern IntegerReadDefaultTypeInternal _IntegerRead_default_instance_;
class ModelDescription;
class ModelDescriptionDefaultTypeInternal;
extern ModelDescriptionDefaultTypeInternal _ModelDescription_default_instance_;
class ModelStructure;
class ModelStructureDefaultTypeInternal;
extern ModelStructureDefaultTypeInternal _ModelStructure_default_instance_;
class ReadRequest;
class ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
class Real;
class RealDefaultTypeInternal;
extern RealDefaultTypeInternal _Real_default_instance_;
class RealAttribute;
class RealAttributeDefaultTypeInternal;
extern RealAttributeDefaultTypeInternal _RealAttribute_default_instance_;
class RealRead;
class RealReadDefaultTypeInternal;
extern RealReadDefaultTypeInternal _RealRead_default_instance_;
class ScalarVariable;
class ScalarVariableDefaultTypeInternal;
extern ScalarVariableDefaultTypeInternal _ScalarVariable_default_instance_;
class Solver;
class SolverDefaultTypeInternal;
extern SolverDefaultTypeInternal _Solver_default_instance_;
class StatusResponse;
class StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
class StepRequest;
class StepRequestDefaultTypeInternal;
extern StepRequestDefaultTypeInternal _StepRequest_default_instance_;
class StepResult;
class StepResultDefaultTypeInternal;
extern StepResultDefaultTypeInternal _StepResult_default_instance_;
class Str;
class StrDefaultTypeInternal;
extern StrDefaultTypeInternal _Str_default_instance_;
class StringAttribute;
class StringAttributeDefaultTypeInternal;
extern StringAttributeDefaultTypeInternal _StringAttribute_default_instance_;
class StringRead;
class StringReadDefaultTypeInternal;
extern StringReadDefaultTypeInternal _StringRead_default_instance_;
class UInt;
class UIntDefaultTypeInternal;
extern UIntDefaultTypeInternal _UInt_default_instance_;
class Unknown;
class UnknownDefaultTypeInternal;
extern UnknownDefaultTypeInternal _Unknown_default_instance_;
class WriteBooleanRequest;
class WriteBooleanRequestDefaultTypeInternal;
extern WriteBooleanRequestDefaultTypeInternal _WriteBooleanRequest_default_instance_;
class WriteIntegerRequest;
class WriteIntegerRequestDefaultTypeInternal;
extern WriteIntegerRequestDefaultTypeInternal _WriteIntegerRequest_default_instance_;
class WriteRealRequest;
class WriteRealRequestDefaultTypeInternal;
extern WriteRealRequestDefaultTypeInternal _WriteRealRequest_default_instance_;
class WriteStringRequest;
class WriteStringRequestDefaultTypeInternal;
extern WriteStringRequestDefaultTypeInternal _WriteStringRequest_default_instance_;
}  // namespace grpc
}  // namespace fmuproxy
namespace google {
namespace protobuf {
template<> ::fmuproxy::grpc::Bool* Arena::CreateMaybeMessage<::fmuproxy::grpc::Bool>(Arena*);
template<> ::fmuproxy::grpc::BooleanAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::BooleanAttribute>(Arena*);
template<> ::fmuproxy::grpc::BooleanRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::BooleanRead>(Arena*);
template<> ::fmuproxy::grpc::BulkBooleanRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkBooleanRead>(Arena*);
template<> ::fmuproxy::grpc::BulkIntegerRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkIntegerRead>(Arena*);
template<> ::fmuproxy::grpc::BulkReadRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkReadRequest>(Arena*);
template<> ::fmuproxy::grpc::BulkRealRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkRealRead>(Arena*);
template<> ::fmuproxy::grpc::BulkStringRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkStringRead>(Arena*);
template<> ::fmuproxy::grpc::BulkWriteBooleanRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkWriteBooleanRequest>(Arena*);
template<> ::fmuproxy::grpc::BulkWriteIntegerRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkWriteIntegerRequest>(Arena*);
template<> ::fmuproxy::grpc::BulkWriteRealRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkWriteRealRequest>(Arena*);
template<> ::fmuproxy::grpc::BulkWriteStringRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::BulkWriteStringRequest>(Arena*);
template<> ::fmuproxy::grpc::DefaultExperiment* Arena::CreateMaybeMessage<::fmuproxy::grpc::DefaultExperiment>(Arena*);
template<> ::fmuproxy::grpc::EnumerationAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::EnumerationAttribute>(Arena*);
template<> ::fmuproxy::grpc::InitRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::InitRequest>(Arena*);
template<> ::fmuproxy::grpc::Int* Arena::CreateMaybeMessage<::fmuproxy::grpc::Int>(Arena*);
template<> ::fmuproxy::grpc::IntegerAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::IntegerAttribute>(Arena*);
template<> ::fmuproxy::grpc::IntegerRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::IntegerRead>(Arena*);
template<> ::fmuproxy::grpc::ModelDescription* Arena::CreateMaybeMessage<::fmuproxy::grpc::ModelDescription>(Arena*);
template<> ::fmuproxy::grpc::ModelStructure* Arena::CreateMaybeMessage<::fmuproxy::grpc::ModelStructure>(Arena*);
template<> ::fmuproxy::grpc::ReadRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::ReadRequest>(Arena*);
template<> ::fmuproxy::grpc::Real* Arena::CreateMaybeMessage<::fmuproxy::grpc::Real>(Arena*);
template<> ::fmuproxy::grpc::RealAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::RealAttribute>(Arena*);
template<> ::fmuproxy::grpc::RealRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::RealRead>(Arena*);
template<> ::fmuproxy::grpc::ScalarVariable* Arena::CreateMaybeMessage<::fmuproxy::grpc::ScalarVariable>(Arena*);
template<> ::fmuproxy::grpc::Solver* Arena::CreateMaybeMessage<::fmuproxy::grpc::Solver>(Arena*);
template<> ::fmuproxy::grpc::StatusResponse* Arena::CreateMaybeMessage<::fmuproxy::grpc::StatusResponse>(Arena*);
template<> ::fmuproxy::grpc::StepRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::StepRequest>(Arena*);
template<> ::fmuproxy::grpc::StepResult* Arena::CreateMaybeMessage<::fmuproxy::grpc::StepResult>(Arena*);
template<> ::fmuproxy::grpc::Str* Arena::CreateMaybeMessage<::fmuproxy::grpc::Str>(Arena*);
template<> ::fmuproxy::grpc::StringAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::StringAttribute>(Arena*);
template<> ::fmuproxy::grpc::StringRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::StringRead>(Arena*);
template<> ::fmuproxy::grpc::UInt* Arena::CreateMaybeMessage<::fmuproxy::grpc::UInt>(Arena*);
template<> ::fmuproxy::grpc::Unknown* Arena::CreateMaybeMessage<::fmuproxy::grpc::Unknown>(Arena*);
template<> ::fmuproxy::grpc::WriteBooleanRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteBooleanRequest>(Arena*);
template<> ::fmuproxy::grpc::WriteIntegerRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteIntegerRequest>(Arena*);
template<> ::fmuproxy::grpc::WriteRealRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteRealRequest>(Arena*);
template<> ::fmuproxy::grpc::WriteStringRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteStringRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace fmuproxy {
namespace grpc {

enum Causality {
  INPUT_CAUSALITY = 0,
  OUTPUT_CAUSALITY = 1,
  PARAMETER_CAUSALITY = 2,
  CALCULATED_PARAMETER_CAUSALITY = 3,
  LOCAL_CAUSALITY = 4,
  INDEPENDENT_CAUSALITY = 5,
  Causality_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Causality_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Causality_IsValid(int value);
const Causality Causality_MIN = INPUT_CAUSALITY;
const Causality Causality_MAX = INDEPENDENT_CAUSALITY;
const int Causality_ARRAYSIZE = Causality_MAX + 1;

const ::google::protobuf::EnumDescriptor* Causality_descriptor();
inline const ::std::string& Causality_Name(Causality value) {
  return ::google::protobuf::internal::NameOfEnum(
    Causality_descriptor(), value);
}
inline bool Causality_Parse(
    const ::std::string& name, Causality* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Causality>(
    Causality_descriptor(), name, value);
}
enum Variability {
  CONSTANT_VARIABILITY = 0,
  FIXED_VARIABILITY = 1,
  CONTINUOUS_VARIABILITY = 2,
  DISCRETE_VARIABILITY = 3,
  TUNABLE_VARIABILITY = 4,
  Variability_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Variability_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Variability_IsValid(int value);
const Variability Variability_MIN = CONSTANT_VARIABILITY;
const Variability Variability_MAX = TUNABLE_VARIABILITY;
const int Variability_ARRAYSIZE = Variability_MAX + 1;

const ::google::protobuf::EnumDescriptor* Variability_descriptor();
inline const ::std::string& Variability_Name(Variability value) {
  return ::google::protobuf::internal::NameOfEnum(
    Variability_descriptor(), value);
}
inline bool Variability_Parse(
    const ::std::string& name, Variability* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Variability>(
    Variability_descriptor(), name, value);
}
enum Initial {
  EXACT_INITIAL = 0,
  APPROX_INITIAL = 1,
  CALCULATED_INITIAL = 2,
  Initial_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Initial_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Initial_IsValid(int value);
const Initial Initial_MIN = EXACT_INITIAL;
const Initial Initial_MAX = CALCULATED_INITIAL;
const int Initial_ARRAYSIZE = Initial_MAX + 1;

const ::google::protobuf::EnumDescriptor* Initial_descriptor();
inline const ::std::string& Initial_Name(Initial value) {
  return ::google::protobuf::internal::NameOfEnum(
    Initial_descriptor(), value);
}
inline bool Initial_Parse(
    const ::std::string& name, Initial* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Initial>(
    Initial_descriptor(), name, value);
}
enum Status {
  OK_STATUS = 0,
  WARNING_STATUS = 1,
  DISCARD_STATUS = 2,
  ERROR_STATUS = 3,
  FATAL_STATUS = 4,
  PENDING_STATUS = 5,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Status_IsValid(int value);
const Status Status_MIN = OK_STATUS;
const Status Status_MAX = PENDING_STATUS;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
enum DependenciesKind {
  DEPENDENT_KIND = 0,
  CONSTANT_KIND = 1,
  TUNABLE_KIND = 2,
  DISCRETE_KIND = 4,
  DependenciesKind_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DependenciesKind_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DependenciesKind_IsValid(int value);
const DependenciesKind DependenciesKind_MIN = DEPENDENT_KIND;
const DependenciesKind DependenciesKind_MAX = DISCRETE_KIND;
const int DependenciesKind_ARRAYSIZE = DependenciesKind_MAX + 1;

const ::google::protobuf::EnumDescriptor* DependenciesKind_descriptor();
inline const ::std::string& DependenciesKind_Name(DependenciesKind value) {
  return ::google::protobuf::internal::NameOfEnum(
    DependenciesKind_descriptor(), value);
}
inline bool DependenciesKind_Parse(
    const ::std::string& name, DependenciesKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DependenciesKind>(
    DependenciesKind_descriptor(), name, value);
}
enum VariableNamingConvention {
  FLAT = 0,
  STRUCTURED = 1,
  VariableNamingConvention_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VariableNamingConvention_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VariableNamingConvention_IsValid(int value);
const VariableNamingConvention VariableNamingConvention_MIN = FLAT;
const VariableNamingConvention VariableNamingConvention_MAX = STRUCTURED;
const int VariableNamingConvention_ARRAYSIZE = VariableNamingConvention_MAX + 1;

const ::google::protobuf::EnumDescriptor* VariableNamingConvention_descriptor();
inline const ::std::string& VariableNamingConvention_Name(VariableNamingConvention value) {
  return ::google::protobuf::internal::NameOfEnum(
    VariableNamingConvention_descriptor(), value);
}
inline bool VariableNamingConvention_Parse(
    const ::std::string& name, VariableNamingConvention* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariableNamingConvention>(
    VariableNamingConvention_descriptor(), name, value);
}
// ===================================================================

class ModelDescription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ModelDescription) */ {
 public:
  ModelDescription();
  virtual ~ModelDescription();

  ModelDescription(const ModelDescription& from);

  inline ModelDescription& operator=(const ModelDescription& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModelDescription(ModelDescription&& from) noexcept
    : ModelDescription() {
    *this = ::std::move(from);
  }

  inline ModelDescription& operator=(ModelDescription&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelDescription& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelDescription* internal_default_instance() {
    return reinterpret_cast<const ModelDescription*>(
               &_ModelDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ModelDescription* other);
  friend void swap(ModelDescription& a, ModelDescription& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModelDescription* New() const final {
    return CreateMaybeMessage<ModelDescription>(NULL);
  }

  ModelDescription* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ModelDescription>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ModelDescription& from);
  void MergeFrom(const ModelDescription& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fmuproxy.grpc.ScalarVariable model_variables = 13;
  int model_variables_size() const;
  void clear_model_variables();
  static const int kModelVariablesFieldNumber = 13;
  ::fmuproxy::grpc::ScalarVariable* mutable_model_variables(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >*
      mutable_model_variables();
  const ::fmuproxy::grpc::ScalarVariable& model_variables(int index) const;
  ::fmuproxy::grpc::ScalarVariable* add_model_variables();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >&
      model_variables() const;

  // string fmi_version = 1;
  void clear_fmi_version();
  static const int kFmiVersionFieldNumber = 1;
  const ::std::string& fmi_version() const;
  void set_fmi_version(const ::std::string& value);
  #if LANG_CXX11
  void set_fmi_version(::std::string&& value);
  #endif
  void set_fmi_version(const char* value);
  void set_fmi_version(const char* value, size_t size);
  ::std::string* mutable_fmi_version();
  ::std::string* release_fmi_version();
  void set_allocated_fmi_version(::std::string* fmi_version);

  // string guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // string model_name = 3;
  void clear_model_name();
  static const int kModelNameFieldNumber = 3;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // string license = 4;
  void clear_license();
  static const int kLicenseFieldNumber = 4;
  const ::std::string& license() const;
  void set_license(const ::std::string& value);
  #if LANG_CXX11
  void set_license(::std::string&& value);
  #endif
  void set_license(const char* value);
  void set_license(const char* value, size_t size);
  ::std::string* mutable_license();
  ::std::string* release_license();
  void set_allocated_license(::std::string* license);

  // string copyright = 5;
  void clear_copyright();
  static const int kCopyrightFieldNumber = 5;
  const ::std::string& copyright() const;
  void set_copyright(const ::std::string& value);
  #if LANG_CXX11
  void set_copyright(::std::string&& value);
  #endif
  void set_copyright(const char* value);
  void set_copyright(const char* value, size_t size);
  ::std::string* mutable_copyright();
  ::std::string* release_copyright();
  void set_allocated_copyright(::std::string* copyright);

  // string author = 6;
  void clear_author();
  static const int kAuthorFieldNumber = 6;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // string version = 7;
  void clear_version();
  static const int kVersionFieldNumber = 7;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string description = 8;
  void clear_description();
  static const int kDescriptionFieldNumber = 8;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string generation_tool = 9;
  void clear_generation_tool();
  static const int kGenerationToolFieldNumber = 9;
  const ::std::string& generation_tool() const;
  void set_generation_tool(const ::std::string& value);
  #if LANG_CXX11
  void set_generation_tool(::std::string&& value);
  #endif
  void set_generation_tool(const char* value);
  void set_generation_tool(const char* value, size_t size);
  ::std::string* mutable_generation_tool();
  ::std::string* release_generation_tool();
  void set_allocated_generation_tool(::std::string* generation_tool);

  // string generation_date_and_time = 10;
  void clear_generation_date_and_time();
  static const int kGenerationDateAndTimeFieldNumber = 10;
  const ::std::string& generation_date_and_time() const;
  void set_generation_date_and_time(const ::std::string& value);
  #if LANG_CXX11
  void set_generation_date_and_time(::std::string&& value);
  #endif
  void set_generation_date_and_time(const char* value);
  void set_generation_date_and_time(const char* value, size_t size);
  ::std::string* mutable_generation_date_and_time();
  ::std::string* release_generation_date_and_time();
  void set_allocated_generation_date_and_time(::std::string* generation_date_and_time);

  // .fmuproxy.grpc.DefaultExperiment default_experiment = 11;
  bool has_default_experiment() const;
  void clear_default_experiment();
  static const int kDefaultExperimentFieldNumber = 11;
  private:
  const ::fmuproxy::grpc::DefaultExperiment& _internal_default_experiment() const;
  public:
  const ::fmuproxy::grpc::DefaultExperiment& default_experiment() const;
  ::fmuproxy::grpc::DefaultExperiment* release_default_experiment();
  ::fmuproxy::grpc::DefaultExperiment* mutable_default_experiment();
  void set_allocated_default_experiment(::fmuproxy::grpc::DefaultExperiment* default_experiment);

  // .fmuproxy.grpc.ModelStructure model_structure = 14;
  bool has_model_structure() const;
  void clear_model_structure();
  static const int kModelStructureFieldNumber = 14;
  private:
  const ::fmuproxy::grpc::ModelStructure& _internal_model_structure() const;
  public:
  const ::fmuproxy::grpc::ModelStructure& model_structure() const;
  ::fmuproxy::grpc::ModelStructure* release_model_structure();
  ::fmuproxy::grpc::ModelStructure* mutable_model_structure();
  void set_allocated_model_structure(::fmuproxy::grpc::ModelStructure* model_structure);

  // .fmuproxy.grpc.VariableNamingConvention variable_naming_convention = 12;
  void clear_variable_naming_convention();
  static const int kVariableNamingConventionFieldNumber = 12;
  ::fmuproxy::grpc::VariableNamingConvention variable_naming_convention() const;
  void set_variable_naming_convention(::fmuproxy::grpc::VariableNamingConvention value);

  // bool supports_co_simulation = 15;
  void clear_supports_co_simulation();
  static const int kSupportsCoSimulationFieldNumber = 15;
  bool supports_co_simulation() const;
  void set_supports_co_simulation(bool value);

  // bool supports_model_exchange = 16;
  void clear_supports_model_exchange();
  static const int kSupportsModelExchangeFieldNumber = 16;
  bool supports_model_exchange() const;
  void set_supports_model_exchange(bool value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ModelDescription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable > model_variables_;
  ::google::protobuf::internal::ArenaStringPtr fmi_version_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::internal::ArenaStringPtr license_;
  ::google::protobuf::internal::ArenaStringPtr copyright_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr generation_tool_;
  ::google::protobuf::internal::ArenaStringPtr generation_date_and_time_;
  ::fmuproxy::grpc::DefaultExperiment* default_experiment_;
  ::fmuproxy::grpc::ModelStructure* model_structure_;
  int variable_naming_convention_;
  bool supports_co_simulation_;
  bool supports_model_exchange_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntegerAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.IntegerAttribute) */ {
 public:
  IntegerAttribute();
  virtual ~IntegerAttribute();

  IntegerAttribute(const IntegerAttribute& from);

  inline IntegerAttribute& operator=(const IntegerAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntegerAttribute(IntegerAttribute&& from) noexcept
    : IntegerAttribute() {
    *this = ::std::move(from);
  }

  inline IntegerAttribute& operator=(IntegerAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntegerAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntegerAttribute* internal_default_instance() {
    return reinterpret_cast<const IntegerAttribute*>(
               &_IntegerAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(IntegerAttribute* other);
  friend void swap(IntegerAttribute& a, IntegerAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntegerAttribute* New() const final {
    return CreateMaybeMessage<IntegerAttribute>(NULL);
  }

  IntegerAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntegerAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntegerAttribute& from);
  void MergeFrom(const IntegerAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntegerAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  ::google::protobuf::int32 min() const;
  void set_min(::google::protobuf::int32 value);

  // int32 max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  ::google::protobuf::int32 max() const;
  void set_max(::google::protobuf::int32 value);

  // int32 start = 3;
  void clear_start();
  static const int kStartFieldNumber = 3;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.IntegerAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 max_;
  ::google::protobuf::int32 start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RealAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.RealAttribute) */ {
 public:
  RealAttribute();
  virtual ~RealAttribute();

  RealAttribute(const RealAttribute& from);

  inline RealAttribute& operator=(const RealAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RealAttribute(RealAttribute&& from) noexcept
    : RealAttribute() {
    *this = ::std::move(from);
  }

  inline RealAttribute& operator=(RealAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RealAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RealAttribute* internal_default_instance() {
    return reinterpret_cast<const RealAttribute*>(
               &_RealAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RealAttribute* other);
  friend void swap(RealAttribute& a, RealAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RealAttribute* New() const final {
    return CreateMaybeMessage<RealAttribute>(NULL);
  }

  RealAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RealAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RealAttribute& from);
  void MergeFrom(const RealAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  double min() const;
  void set_min(double value);

  // double max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  double max() const;
  void set_max(double value);

  // double start = 3;
  void clear_start();
  static const int kStartFieldNumber = 3;
  double start() const;
  void set_start(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.RealAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double min_;
  double max_;
  double start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StringAttribute) */ {
 public:
  StringAttribute();
  virtual ~StringAttribute();

  StringAttribute(const StringAttribute& from);

  inline StringAttribute& operator=(const StringAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringAttribute(StringAttribute&& from) noexcept
    : StringAttribute() {
    *this = ::std::move(from);
  }

  inline StringAttribute& operator=(StringAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringAttribute* internal_default_instance() {
    return reinterpret_cast<const StringAttribute*>(
               &_StringAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(StringAttribute* other);
  friend void swap(StringAttribute& a, StringAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringAttribute* New() const final {
    return CreateMaybeMessage<StringAttribute>(NULL);
  }

  StringAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringAttribute& from);
  void MergeFrom(const StringAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  const ::std::string& start() const;
  void set_start(const ::std::string& value);
  #if LANG_CXX11
  void set_start(::std::string&& value);
  #endif
  void set_start(const char* value);
  void set_start(const char* value, size_t size);
  ::std::string* mutable_start();
  ::std::string* release_start();
  void set_allocated_start(::std::string* start);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StringAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BooleanAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BooleanAttribute) */ {
 public:
  BooleanAttribute();
  virtual ~BooleanAttribute();

  BooleanAttribute(const BooleanAttribute& from);

  inline BooleanAttribute& operator=(const BooleanAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BooleanAttribute(BooleanAttribute&& from) noexcept
    : BooleanAttribute() {
    *this = ::std::move(from);
  }

  inline BooleanAttribute& operator=(BooleanAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BooleanAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BooleanAttribute* internal_default_instance() {
    return reinterpret_cast<const BooleanAttribute*>(
               &_BooleanAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(BooleanAttribute* other);
  friend void swap(BooleanAttribute& a, BooleanAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BooleanAttribute* New() const final {
    return CreateMaybeMessage<BooleanAttribute>(NULL);
  }

  BooleanAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BooleanAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BooleanAttribute& from);
  void MergeFrom(const BooleanAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BooleanAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  bool start() const;
  void set_start(bool value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BooleanAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnumerationAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.EnumerationAttribute) */ {
 public:
  EnumerationAttribute();
  virtual ~EnumerationAttribute();

  EnumerationAttribute(const EnumerationAttribute& from);

  inline EnumerationAttribute& operator=(const EnumerationAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnumerationAttribute(EnumerationAttribute&& from) noexcept
    : EnumerationAttribute() {
    *this = ::std::move(from);
  }

  inline EnumerationAttribute& operator=(EnumerationAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnumerationAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnumerationAttribute* internal_default_instance() {
    return reinterpret_cast<const EnumerationAttribute*>(
               &_EnumerationAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(EnumerationAttribute* other);
  friend void swap(EnumerationAttribute& a, EnumerationAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnumerationAttribute* New() const final {
    return CreateMaybeMessage<EnumerationAttribute>(NULL);
  }

  EnumerationAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnumerationAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnumerationAttribute& from);
  void MergeFrom(const EnumerationAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnumerationAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  ::google::protobuf::int32 min() const;
  void set_min(::google::protobuf::int32 value);

  // int32 max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  ::google::protobuf::int32 max() const;
  void set_max(::google::protobuf::int32 value);

  // int32 start = 3;
  void clear_start();
  static const int kStartFieldNumber = 3;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.EnumerationAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 max_;
  ::google::protobuf::int32 start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScalarVariable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ScalarVariable) */ {
 public:
  ScalarVariable();
  virtual ~ScalarVariable();

  ScalarVariable(const ScalarVariable& from);

  inline ScalarVariable& operator=(const ScalarVariable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScalarVariable(ScalarVariable&& from) noexcept
    : ScalarVariable() {
    *this = ::std::move(from);
  }

  inline ScalarVariable& operator=(ScalarVariable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScalarVariable& default_instance();

  enum AttributeCase {
    kIntegerAttribute = 10,
    kRealAttribute = 11,
    kStringAttribute = 12,
    kBooleanAttribute = 13,
    kEnumerationAttribute = 14,
    ATTRIBUTE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarVariable* internal_default_instance() {
    return reinterpret_cast<const ScalarVariable*>(
               &_ScalarVariable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ScalarVariable* other);
  friend void swap(ScalarVariable& a, ScalarVariable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScalarVariable* New() const final {
    return CreateMaybeMessage<ScalarVariable>(NULL);
  }

  ScalarVariable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScalarVariable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScalarVariable& from);
  void MergeFrom(const ScalarVariable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarVariable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string declared_type = 4;
  void clear_declared_type();
  static const int kDeclaredTypeFieldNumber = 4;
  const ::std::string& declared_type() const;
  void set_declared_type(const ::std::string& value);
  #if LANG_CXX11
  void set_declared_type(::std::string&& value);
  #endif
  void set_declared_type(const char* value);
  void set_declared_type(const char* value, size_t size);
  ::std::string* mutable_declared_type();
  ::std::string* release_declared_type();
  void set_allocated_declared_type(::std::string* declared_type);

  // uint32 value_reference = 1;
  void clear_value_reference();
  static const int kValueReferenceFieldNumber = 1;
  ::google::protobuf::uint32 value_reference() const;
  void set_value_reference(::google::protobuf::uint32 value);

  // .fmuproxy.grpc.Initial initial = 5;
  void clear_initial();
  static const int kInitialFieldNumber = 5;
  ::fmuproxy::grpc::Initial initial() const;
  void set_initial(::fmuproxy::grpc::Initial value);

  // .fmuproxy.grpc.Causality causality = 6;
  void clear_causality();
  static const int kCausalityFieldNumber = 6;
  ::fmuproxy::grpc::Causality causality() const;
  void set_causality(::fmuproxy::grpc::Causality value);

  // .fmuproxy.grpc.Variability variability = 7;
  void clear_variability();
  static const int kVariabilityFieldNumber = 7;
  ::fmuproxy::grpc::Variability variability() const;
  void set_variability(::fmuproxy::grpc::Variability value);

  // .fmuproxy.grpc.IntegerAttribute integer_attribute = 10;
  bool has_integer_attribute() const;
  void clear_integer_attribute();
  static const int kIntegerAttributeFieldNumber = 10;
  private:
  const ::fmuproxy::grpc::IntegerAttribute& _internal_integer_attribute() const;
  public:
  const ::fmuproxy::grpc::IntegerAttribute& integer_attribute() const;
  ::fmuproxy::grpc::IntegerAttribute* release_integer_attribute();
  ::fmuproxy::grpc::IntegerAttribute* mutable_integer_attribute();
  void set_allocated_integer_attribute(::fmuproxy::grpc::IntegerAttribute* integer_attribute);

  // .fmuproxy.grpc.RealAttribute real_attribute = 11;
  bool has_real_attribute() const;
  void clear_real_attribute();
  static const int kRealAttributeFieldNumber = 11;
  private:
  const ::fmuproxy::grpc::RealAttribute& _internal_real_attribute() const;
  public:
  const ::fmuproxy::grpc::RealAttribute& real_attribute() const;
  ::fmuproxy::grpc::RealAttribute* release_real_attribute();
  ::fmuproxy::grpc::RealAttribute* mutable_real_attribute();
  void set_allocated_real_attribute(::fmuproxy::grpc::RealAttribute* real_attribute);

  // .fmuproxy.grpc.StringAttribute string_attribute = 12;
  bool has_string_attribute() const;
  void clear_string_attribute();
  static const int kStringAttributeFieldNumber = 12;
  private:
  const ::fmuproxy::grpc::StringAttribute& _internal_string_attribute() const;
  public:
  const ::fmuproxy::grpc::StringAttribute& string_attribute() const;
  ::fmuproxy::grpc::StringAttribute* release_string_attribute();
  ::fmuproxy::grpc::StringAttribute* mutable_string_attribute();
  void set_allocated_string_attribute(::fmuproxy::grpc::StringAttribute* string_attribute);

  // .fmuproxy.grpc.BooleanAttribute boolean_attribute = 13;
  bool has_boolean_attribute() const;
  void clear_boolean_attribute();
  static const int kBooleanAttributeFieldNumber = 13;
  private:
  const ::fmuproxy::grpc::BooleanAttribute& _internal_boolean_attribute() const;
  public:
  const ::fmuproxy::grpc::BooleanAttribute& boolean_attribute() const;
  ::fmuproxy::grpc::BooleanAttribute* release_boolean_attribute();
  ::fmuproxy::grpc::BooleanAttribute* mutable_boolean_attribute();
  void set_allocated_boolean_attribute(::fmuproxy::grpc::BooleanAttribute* boolean_attribute);

  // .fmuproxy.grpc.EnumerationAttribute enumeration_attribute = 14;
  bool has_enumeration_attribute() const;
  void clear_enumeration_attribute();
  static const int kEnumerationAttributeFieldNumber = 14;
  private:
  const ::fmuproxy::grpc::EnumerationAttribute& _internal_enumeration_attribute() const;
  public:
  const ::fmuproxy::grpc::EnumerationAttribute& enumeration_attribute() const;
  ::fmuproxy::grpc::EnumerationAttribute* release_enumeration_attribute();
  ::fmuproxy::grpc::EnumerationAttribute* mutable_enumeration_attribute();
  void set_allocated_enumeration_attribute(::fmuproxy::grpc::EnumerationAttribute* enumeration_attribute);

  void clear_attribute();
  AttributeCase attribute_case() const;
  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ScalarVariable)
 private:
  void set_has_integer_attribute();
  void set_has_real_attribute();
  void set_has_string_attribute();
  void set_has_boolean_attribute();
  void set_has_enumeration_attribute();

  inline bool has_attribute() const;
  inline void clear_has_attribute();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr declared_type_;
  ::google::protobuf::uint32 value_reference_;
  int initial_;
  int causality_;
  int variability_;
  union AttributeUnion {
    AttributeUnion() {}
    ::fmuproxy::grpc::IntegerAttribute* integer_attribute_;
    ::fmuproxy::grpc::RealAttribute* real_attribute_;
    ::fmuproxy::grpc::StringAttribute* string_attribute_;
    ::fmuproxy::grpc::BooleanAttribute* boolean_attribute_;
    ::fmuproxy::grpc::EnumerationAttribute* enumeration_attribute_;
  } attribute_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DefaultExperiment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.DefaultExperiment) */ {
 public:
  DefaultExperiment();
  virtual ~DefaultExperiment();

  DefaultExperiment(const DefaultExperiment& from);

  inline DefaultExperiment& operator=(const DefaultExperiment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DefaultExperiment(DefaultExperiment&& from) noexcept
    : DefaultExperiment() {
    *this = ::std::move(from);
  }

  inline DefaultExperiment& operator=(DefaultExperiment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DefaultExperiment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DefaultExperiment* internal_default_instance() {
    return reinterpret_cast<const DefaultExperiment*>(
               &_DefaultExperiment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DefaultExperiment* other);
  friend void swap(DefaultExperiment& a, DefaultExperiment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DefaultExperiment* New() const final {
    return CreateMaybeMessage<DefaultExperiment>(NULL);
  }

  DefaultExperiment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DefaultExperiment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DefaultExperiment& from);
  void MergeFrom(const DefaultExperiment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DefaultExperiment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start_time = 1;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  double start_time() const;
  void set_start_time(double value);

  // double stop_time = 2;
  void clear_stop_time();
  static const int kStopTimeFieldNumber = 2;
  double stop_time() const;
  void set_stop_time(double value);

  // double tolerance = 3;
  void clear_tolerance();
  static const int kToleranceFieldNumber = 3;
  double tolerance() const;
  void set_tolerance(double value);

  // double step_size = 4;
  void clear_step_size();
  static const int kStepSizeFieldNumber = 4;
  double step_size() const;
  void set_step_size(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.DefaultExperiment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_time_;
  double stop_time_;
  double tolerance_;
  double step_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Unknown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Unknown) */ {
 public:
  Unknown();
  virtual ~Unknown();

  Unknown(const Unknown& from);

  inline Unknown& operator=(const Unknown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unknown(Unknown&& from) noexcept
    : Unknown() {
    *this = ::std::move(from);
  }

  inline Unknown& operator=(Unknown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Unknown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unknown* internal_default_instance() {
    return reinterpret_cast<const Unknown*>(
               &_Unknown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Unknown* other);
  friend void swap(Unknown& a, Unknown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unknown* New() const final {
    return CreateMaybeMessage<Unknown>(NULL);
  }

  Unknown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unknown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Unknown& from);
  void MergeFrom(const Unknown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Unknown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 dependencies = 2;
  int dependencies_size() const;
  void clear_dependencies();
  static const int kDependenciesFieldNumber = 2;
  ::google::protobuf::uint32 dependencies(int index) const;
  void set_dependencies(int index, ::google::protobuf::uint32 value);
  void add_dependencies(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dependencies() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dependencies();

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // .fmuproxy.grpc.DependenciesKind dependencies_kind = 3;
  void clear_dependencies_kind();
  static const int kDependenciesKindFieldNumber = 3;
  ::fmuproxy::grpc::DependenciesKind dependencies_kind() const;
  void set_dependencies_kind(::fmuproxy::grpc::DependenciesKind value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Unknown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dependencies_;
  mutable int _dependencies_cached_byte_size_;
  ::google::protobuf::uint32 index_;
  int dependencies_kind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModelStructure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ModelStructure) */ {
 public:
  ModelStructure();
  virtual ~ModelStructure();

  ModelStructure(const ModelStructure& from);

  inline ModelStructure& operator=(const ModelStructure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModelStructure(ModelStructure&& from) noexcept
    : ModelStructure() {
    *this = ::std::move(from);
  }

  inline ModelStructure& operator=(ModelStructure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelStructure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelStructure* internal_default_instance() {
    return reinterpret_cast<const ModelStructure*>(
               &_ModelStructure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ModelStructure* other);
  friend void swap(ModelStructure& a, ModelStructure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModelStructure* New() const final {
    return CreateMaybeMessage<ModelStructure>(NULL);
  }

  ModelStructure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ModelStructure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ModelStructure& from);
  void MergeFrom(const ModelStructure& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelStructure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fmuproxy.grpc.Unknown outputs = 1;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 1;
  ::fmuproxy::grpc::Unknown* mutable_outputs(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
      mutable_outputs();
  const ::fmuproxy::grpc::Unknown& outputs(int index) const;
  ::fmuproxy::grpc::Unknown* add_outputs();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
      outputs() const;

  // repeated .fmuproxy.grpc.Unknown derivatives = 2;
  int derivatives_size() const;
  void clear_derivatives();
  static const int kDerivativesFieldNumber = 2;
  ::fmuproxy::grpc::Unknown* mutable_derivatives(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
      mutable_derivatives();
  const ::fmuproxy::grpc::Unknown& derivatives(int index) const;
  ::fmuproxy::grpc::Unknown* add_derivatives();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
      derivatives() const;

  // repeated .fmuproxy.grpc.Unknown initial_unknowns = 3;
  int initial_unknowns_size() const;
  void clear_initial_unknowns();
  static const int kInitialUnknownsFieldNumber = 3;
  ::fmuproxy::grpc::Unknown* mutable_initial_unknowns(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
      mutable_initial_unknowns();
  const ::fmuproxy::grpc::Unknown& initial_unknowns(int index) const;
  ::fmuproxy::grpc::Unknown* add_initial_unknowns();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
      initial_unknowns() const;

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ModelStructure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown > outputs_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown > derivatives_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown > initial_unknowns_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StatusResponse) */ {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusResponse(StatusResponse&& from) noexcept
    : StatusResponse() {
    *this = ::std::move(from);
  }

  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
               &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(StatusResponse* other);
  friend void swap(StatusResponse& a, StatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusResponse* New() const final {
    return CreateMaybeMessage<StatusResponse>(NULL);
  }

  StatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .fmuproxy.grpc.Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StatusResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.InitRequest) */ {
 public:
  InitRequest();
  virtual ~InitRequest();

  InitRequest(const InitRequest& from);

  inline InitRequest& operator=(const InitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitRequest(InitRequest&& from) noexcept
    : InitRequest() {
    *this = ::std::move(from);
  }

  inline InitRequest& operator=(InitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitRequest* internal_default_instance() {
    return reinterpret_cast<const InitRequest*>(
               &_InitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(InitRequest* other);
  friend void swap(InitRequest& a, InitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitRequest* New() const final {
    return CreateMaybeMessage<InitRequest>(NULL);
  }

  InitRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InitRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InitRequest& from);
  void MergeFrom(const InitRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  double start() const;
  void set_start(double value);

  // double stop = 3;
  void clear_stop();
  static const int kStopFieldNumber = 3;
  double stop() const;
  void set_stop(double value);

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.InitRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_;
  double stop_;
  ::google::protobuf::uint32 fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StepRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StepRequest) */ {
 public:
  StepRequest();
  virtual ~StepRequest();

  StepRequest(const StepRequest& from);

  inline StepRequest& operator=(const StepRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StepRequest(StepRequest&& from) noexcept
    : StepRequest() {
    *this = ::std::move(from);
  }

  inline StepRequest& operator=(StepRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StepRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepRequest* internal_default_instance() {
    return reinterpret_cast<const StepRequest*>(
               &_StepRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(StepRequest* other);
  friend void swap(StepRequest& a, StepRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StepRequest* New() const final {
    return CreateMaybeMessage<StepRequest>(NULL);
  }

  StepRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StepRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StepRequest& from);
  void MergeFrom(const StepRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double step_size = 2;
  void clear_step_size();
  static const int kStepSizeFieldNumber = 2;
  double step_size() const;
  void set_step_size(double value);

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StepRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double step_size_;
  ::google::protobuf::uint32 fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StepResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StepResult) */ {
 public:
  StepResult();
  virtual ~StepResult();

  StepResult(const StepResult& from);

  inline StepResult& operator=(const StepResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StepResult(StepResult&& from) noexcept
    : StepResult() {
    *this = ::std::move(from);
  }

  inline StepResult& operator=(StepResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StepResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepResult* internal_default_instance() {
    return reinterpret_cast<const StepResult*>(
               &_StepResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(StepResult* other);
  friend void swap(StepResult& a, StepResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StepResult* New() const final {
    return CreateMaybeMessage<StepResult>(NULL);
  }

  StepResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StepResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StepResult& from);
  void MergeFrom(const StepResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double simulation_time = 2;
  void clear_simulation_time();
  static const int kSimulationTimeFieldNumber = 2;
  double simulation_time() const;
  void set_simulation_time(double value);

  // .fmuproxy.grpc.Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StepResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double simulation_time_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UInt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.UInt) */ {
 public:
  UInt();
  virtual ~UInt();

  UInt(const UInt& from);

  inline UInt& operator=(const UInt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UInt(UInt&& from) noexcept
    : UInt() {
    *this = ::std::move(from);
  }

  inline UInt& operator=(UInt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UInt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UInt* internal_default_instance() {
    return reinterpret_cast<const UInt*>(
               &_UInt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(UInt* other);
  friend void swap(UInt& a, UInt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UInt* New() const final {
    return CreateMaybeMessage<UInt>(NULL);
  }

  UInt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UInt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UInt& from);
  void MergeFrom(const UInt& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UInt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.UInt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Int) */ {
 public:
  Int();
  virtual ~Int();

  Int(const Int& from);

  inline Int& operator=(const Int& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int(Int&& from) noexcept
    : Int() {
    *this = ::std::move(from);
  }

  inline Int& operator=(Int&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int* internal_default_instance() {
    return reinterpret_cast<const Int*>(
               &_Int_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Int* other);
  friend void swap(Int& a, Int& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int* New() const final {
    return CreateMaybeMessage<Int>(NULL);
  }

  Int* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int& from);
  void MergeFrom(const Int& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Int)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntegerRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.IntegerRead) */ {
 public:
  IntegerRead();
  virtual ~IntegerRead();

  IntegerRead(const IntegerRead& from);

  inline IntegerRead& operator=(const IntegerRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntegerRead(IntegerRead&& from) noexcept
    : IntegerRead() {
    *this = ::std::move(from);
  }

  inline IntegerRead& operator=(IntegerRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntegerRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntegerRead* internal_default_instance() {
    return reinterpret_cast<const IntegerRead*>(
               &_IntegerRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(IntegerRead* other);
  friend void swap(IntegerRead& a, IntegerRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntegerRead* New() const final {
    return CreateMaybeMessage<IntegerRead>(NULL);
  }

  IntegerRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntegerRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntegerRead& from);
  void MergeFrom(const IntegerRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntegerRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.IntegerRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkIntegerRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkIntegerRead) */ {
 public:
  BulkIntegerRead();
  virtual ~BulkIntegerRead();

  BulkIntegerRead(const BulkIntegerRead& from);

  inline BulkIntegerRead& operator=(const BulkIntegerRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkIntegerRead(BulkIntegerRead&& from) noexcept
    : BulkIntegerRead() {
    *this = ::std::move(from);
  }

  inline BulkIntegerRead& operator=(BulkIntegerRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkIntegerRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkIntegerRead* internal_default_instance() {
    return reinterpret_cast<const BulkIntegerRead*>(
               &_BulkIntegerRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(BulkIntegerRead* other);
  friend void swap(BulkIntegerRead& a, BulkIntegerRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkIntegerRead* New() const final {
    return CreateMaybeMessage<BulkIntegerRead>(NULL);
  }

  BulkIntegerRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkIntegerRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkIntegerRead& from);
  void MergeFrom(const BulkIntegerRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkIntegerRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkIntegerRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Real : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Real) */ {
 public:
  Real();
  virtual ~Real();

  Real(const Real& from);

  inline Real& operator=(const Real& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Real(Real&& from) noexcept
    : Real() {
    *this = ::std::move(from);
  }

  inline Real& operator=(Real&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Real& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Real* internal_default_instance() {
    return reinterpret_cast<const Real*>(
               &_Real_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(Real* other);
  friend void swap(Real& a, Real& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Real* New() const final {
    return CreateMaybeMessage<Real>(NULL);
  }

  Real* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Real>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Real& from);
  void MergeFrom(const Real& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Real* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Real)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RealRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.RealRead) */ {
 public:
  RealRead();
  virtual ~RealRead();

  RealRead(const RealRead& from);

  inline RealRead& operator=(const RealRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RealRead(RealRead&& from) noexcept
    : RealRead() {
    *this = ::std::move(from);
  }

  inline RealRead& operator=(RealRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RealRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RealRead* internal_default_instance() {
    return reinterpret_cast<const RealRead*>(
               &_RealRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(RealRead* other);
  friend void swap(RealRead& a, RealRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RealRead* New() const final {
    return CreateMaybeMessage<RealRead>(NULL);
  }

  RealRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RealRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RealRead& from);
  void MergeFrom(const RealRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.RealRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double value_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkRealRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkRealRead) */ {
 public:
  BulkRealRead();
  virtual ~BulkRealRead();

  BulkRealRead(const BulkRealRead& from);

  inline BulkRealRead& operator=(const BulkRealRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkRealRead(BulkRealRead&& from) noexcept
    : BulkRealRead() {
    *this = ::std::move(from);
  }

  inline BulkRealRead& operator=(BulkRealRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkRealRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkRealRead* internal_default_instance() {
    return reinterpret_cast<const BulkRealRead*>(
               &_BulkRealRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(BulkRealRead* other);
  friend void swap(BulkRealRead& a, BulkRealRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkRealRead* New() const final {
    return CreateMaybeMessage<BulkRealRead>(NULL);
  }

  BulkRealRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkRealRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkRealRead& from);
  void MergeFrom(const BulkRealRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkRealRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkRealRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > values_;
  mutable int _values_cached_byte_size_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Str : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Str) */ {
 public:
  Str();
  virtual ~Str();

  Str(const Str& from);

  inline Str& operator=(const Str& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Str(Str&& from) noexcept
    : Str() {
    *this = ::std::move(from);
  }

  inline Str& operator=(Str&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Str& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Str* internal_default_instance() {
    return reinterpret_cast<const Str*>(
               &_Str_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(Str* other);
  friend void swap(Str& a, Str& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Str* New() const final {
    return CreateMaybeMessage<Str>(NULL);
  }

  Str* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Str>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Str& from);
  void MergeFrom(const Str& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Str* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Str)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StringRead) */ {
 public:
  StringRead();
  virtual ~StringRead();

  StringRead(const StringRead& from);

  inline StringRead& operator=(const StringRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringRead(StringRead&& from) noexcept
    : StringRead() {
    *this = ::std::move(from);
  }

  inline StringRead& operator=(StringRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringRead* internal_default_instance() {
    return reinterpret_cast<const StringRead*>(
               &_StringRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(StringRead* other);
  friend void swap(StringRead& a, StringRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringRead* New() const final {
    return CreateMaybeMessage<StringRead>(NULL);
  }

  StringRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringRead& from);
  void MergeFrom(const StringRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StringRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkStringRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkStringRead) */ {
 public:
  BulkStringRead();
  virtual ~BulkStringRead();

  BulkStringRead(const BulkStringRead& from);

  inline BulkStringRead& operator=(const BulkStringRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkStringRead(BulkStringRead&& from) noexcept
    : BulkStringRead() {
    *this = ::std::move(from);
  }

  inline BulkStringRead& operator=(BulkStringRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkStringRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkStringRead* internal_default_instance() {
    return reinterpret_cast<const BulkStringRead*>(
               &_BulkStringRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(BulkStringRead* other);
  friend void swap(BulkStringRead& a, BulkStringRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkStringRead* New() const final {
    return CreateMaybeMessage<BulkStringRead>(NULL);
  }

  BulkStringRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkStringRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkStringRead& from);
  void MergeFrom(const BulkStringRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkStringRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkStringRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Bool) */ {
 public:
  Bool();
  virtual ~Bool();

  Bool(const Bool& from);

  inline Bool& operator=(const Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bool(Bool&& from) noexcept
    : Bool() {
    *this = ::std::move(from);
  }

  inline Bool& operator=(Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bool* internal_default_instance() {
    return reinterpret_cast<const Bool*>(
               &_Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(Bool* other);
  friend void swap(Bool& a, Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bool* New() const final {
    return CreateMaybeMessage<Bool>(NULL);
  }

  Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bool& from);
  void MergeFrom(const Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BooleanRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BooleanRead) */ {
 public:
  BooleanRead();
  virtual ~BooleanRead();

  BooleanRead(const BooleanRead& from);

  inline BooleanRead& operator=(const BooleanRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BooleanRead(BooleanRead&& from) noexcept
    : BooleanRead() {
    *this = ::std::move(from);
  }

  inline BooleanRead& operator=(BooleanRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BooleanRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BooleanRead* internal_default_instance() {
    return reinterpret_cast<const BooleanRead*>(
               &_BooleanRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(BooleanRead* other);
  friend void swap(BooleanRead& a, BooleanRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BooleanRead* New() const final {
    return CreateMaybeMessage<BooleanRead>(NULL);
  }

  BooleanRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BooleanRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BooleanRead& from);
  void MergeFrom(const BooleanRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BooleanRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  bool value() const;
  void set_value(bool value);

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BooleanRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool value_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkBooleanRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkBooleanRead) */ {
 public:
  BulkBooleanRead();
  virtual ~BulkBooleanRead();

  BulkBooleanRead(const BulkBooleanRead& from);

  inline BulkBooleanRead& operator=(const BulkBooleanRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkBooleanRead(BulkBooleanRead&& from) noexcept
    : BulkBooleanRead() {
    *this = ::std::move(from);
  }

  inline BulkBooleanRead& operator=(BulkBooleanRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkBooleanRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkBooleanRead* internal_default_instance() {
    return reinterpret_cast<const BulkBooleanRead*>(
               &_BulkBooleanRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(BulkBooleanRead* other);
  friend void swap(BulkBooleanRead& a, BulkBooleanRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkBooleanRead* New() const final {
    return CreateMaybeMessage<BulkBooleanRead>(NULL);
  }

  BulkBooleanRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkBooleanRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkBooleanRead& from);
  void MergeFrom(const BulkBooleanRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkBooleanRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  bool values(int index) const;
  void set_values(int index, bool value);
  void add_values(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      values() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkBooleanRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > values_;
  mutable int _values_cached_byte_size_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ReadRequest) */ {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadRequest(ReadRequest&& from) noexcept
    : ReadRequest() {
    *this = ::std::move(from);
  }

  inline ReadRequest& operator=(ReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadRequest* internal_default_instance() {
    return reinterpret_cast<const ReadRequest*>(
               &_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(ReadRequest* other);
  friend void swap(ReadRequest& a, ReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const final {
    return CreateMaybeMessage<ReadRequest>(NULL);
  }

  ReadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // uint32 value_reference = 2;
  void clear_value_reference();
  static const int kValueReferenceFieldNumber = 2;
  ::google::protobuf::uint32 value_reference() const;
  void set_value_reference(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fmu_id_;
  ::google::protobuf::uint32 value_reference_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkReadRequest) */ {
 public:
  BulkReadRequest();
  virtual ~BulkReadRequest();

  BulkReadRequest(const BulkReadRequest& from);

  inline BulkReadRequest& operator=(const BulkReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkReadRequest(BulkReadRequest&& from) noexcept
    : BulkReadRequest() {
    *this = ::std::move(from);
  }

  inline BulkReadRequest& operator=(BulkReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkReadRequest* internal_default_instance() {
    return reinterpret_cast<const BulkReadRequest*>(
               &_BulkReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(BulkReadRequest* other);
  friend void swap(BulkReadRequest& a, BulkReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkReadRequest* New() const final {
    return CreateMaybeMessage<BulkReadRequest>(NULL);
  }

  BulkReadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkReadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkReadRequest& from);
  void MergeFrom(const BulkReadRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint32 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint32 value);
  void add_value_references(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value_references();

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::uint32 fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteIntegerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteIntegerRequest) */ {
 public:
  WriteIntegerRequest();
  virtual ~WriteIntegerRequest();

  WriteIntegerRequest(const WriteIntegerRequest& from);

  inline WriteIntegerRequest& operator=(const WriteIntegerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteIntegerRequest(WriteIntegerRequest&& from) noexcept
    : WriteIntegerRequest() {
    *this = ::std::move(from);
  }

  inline WriteIntegerRequest& operator=(WriteIntegerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteIntegerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteIntegerRequest* internal_default_instance() {
    return reinterpret_cast<const WriteIntegerRequest*>(
               &_WriteIntegerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(WriteIntegerRequest* other);
  friend void swap(WriteIntegerRequest& a, WriteIntegerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteIntegerRequest* New() const final {
    return CreateMaybeMessage<WriteIntegerRequest>(NULL);
  }

  WriteIntegerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteIntegerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteIntegerRequest& from);
  void MergeFrom(const WriteIntegerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteIntegerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // uint32 value_reference = 2;
  void clear_value_reference();
  static const int kValueReferenceFieldNumber = 2;
  ::google::protobuf::uint32 value_reference() const;
  void set_value_reference(::google::protobuf::uint32 value);

  // int32 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteIntegerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fmu_id_;
  ::google::protobuf::uint32 value_reference_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkWriteIntegerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkWriteIntegerRequest) */ {
 public:
  BulkWriteIntegerRequest();
  virtual ~BulkWriteIntegerRequest();

  BulkWriteIntegerRequest(const BulkWriteIntegerRequest& from);

  inline BulkWriteIntegerRequest& operator=(const BulkWriteIntegerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkWriteIntegerRequest(BulkWriteIntegerRequest&& from) noexcept
    : BulkWriteIntegerRequest() {
    *this = ::std::move(from);
  }

  inline BulkWriteIntegerRequest& operator=(BulkWriteIntegerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkWriteIntegerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkWriteIntegerRequest* internal_default_instance() {
    return reinterpret_cast<const BulkWriteIntegerRequest*>(
               &_BulkWriteIntegerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(BulkWriteIntegerRequest* other);
  friend void swap(BulkWriteIntegerRequest& a, BulkWriteIntegerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkWriteIntegerRequest* New() const final {
    return CreateMaybeMessage<BulkWriteIntegerRequest>(NULL);
  }

  BulkWriteIntegerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkWriteIntegerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkWriteIntegerRequest& from);
  void MergeFrom(const BulkWriteIntegerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkWriteIntegerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint32 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint32 value);
  void add_value_references(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value_references();

  // repeated int32 values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkWriteIntegerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::uint32 fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteRealRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteRealRequest) */ {
 public:
  WriteRealRequest();
  virtual ~WriteRealRequest();

  WriteRealRequest(const WriteRealRequest& from);

  inline WriteRealRequest& operator=(const WriteRealRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteRealRequest(WriteRealRequest&& from) noexcept
    : WriteRealRequest() {
    *this = ::std::move(from);
  }

  inline WriteRealRequest& operator=(WriteRealRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRealRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteRealRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRealRequest*>(
               &_WriteRealRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(WriteRealRequest* other);
  friend void swap(WriteRealRequest& a, WriteRealRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteRealRequest* New() const final {
    return CreateMaybeMessage<WriteRealRequest>(NULL);
  }

  WriteRealRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteRealRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteRealRequest& from);
  void MergeFrom(const WriteRealRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteRealRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // uint32 value_reference = 2;
  void clear_value_reference();
  static const int kValueReferenceFieldNumber = 2;
  ::google::protobuf::uint32 value_reference() const;
  void set_value_reference(::google::protobuf::uint32 value);

  // double value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteRealRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fmu_id_;
  ::google::protobuf::uint32 value_reference_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkWriteRealRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkWriteRealRequest) */ {
 public:
  BulkWriteRealRequest();
  virtual ~BulkWriteRealRequest();

  BulkWriteRealRequest(const BulkWriteRealRequest& from);

  inline BulkWriteRealRequest& operator=(const BulkWriteRealRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkWriteRealRequest(BulkWriteRealRequest&& from) noexcept
    : BulkWriteRealRequest() {
    *this = ::std::move(from);
  }

  inline BulkWriteRealRequest& operator=(BulkWriteRealRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkWriteRealRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkWriteRealRequest* internal_default_instance() {
    return reinterpret_cast<const BulkWriteRealRequest*>(
               &_BulkWriteRealRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(BulkWriteRealRequest* other);
  friend void swap(BulkWriteRealRequest& a, BulkWriteRealRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkWriteRealRequest* New() const final {
    return CreateMaybeMessage<BulkWriteRealRequest>(NULL);
  }

  BulkWriteRealRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkWriteRealRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkWriteRealRequest& from);
  void MergeFrom(const BulkWriteRealRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkWriteRealRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint32 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint32 value);
  void add_value_references(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value_references();

  // repeated double values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values();

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkWriteRealRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::uint32 fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteStringRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteStringRequest) */ {
 public:
  WriteStringRequest();
  virtual ~WriteStringRequest();

  WriteStringRequest(const WriteStringRequest& from);

  inline WriteStringRequest& operator=(const WriteStringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteStringRequest(WriteStringRequest&& from) noexcept
    : WriteStringRequest() {
    *this = ::std::move(from);
  }

  inline WriteStringRequest& operator=(WriteStringRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteStringRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteStringRequest* internal_default_instance() {
    return reinterpret_cast<const WriteStringRequest*>(
               &_WriteStringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(WriteStringRequest* other);
  friend void swap(WriteStringRequest& a, WriteStringRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteStringRequest* New() const final {
    return CreateMaybeMessage<WriteStringRequest>(NULL);
  }

  WriteStringRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteStringRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteStringRequest& from);
  void MergeFrom(const WriteStringRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteStringRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // uint32 value_reference = 2;
  void clear_value_reference();
  static const int kValueReferenceFieldNumber = 2;
  ::google::protobuf::uint32 value_reference() const;
  void set_value_reference(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteStringRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 fmu_id_;
  ::google::protobuf::uint32 value_reference_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkWriteStringRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkWriteStringRequest) */ {
 public:
  BulkWriteStringRequest();
  virtual ~BulkWriteStringRequest();

  BulkWriteStringRequest(const BulkWriteStringRequest& from);

  inline BulkWriteStringRequest& operator=(const BulkWriteStringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkWriteStringRequest(BulkWriteStringRequest&& from) noexcept
    : BulkWriteStringRequest() {
    *this = ::std::move(from);
  }

  inline BulkWriteStringRequest& operator=(BulkWriteStringRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkWriteStringRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkWriteStringRequest* internal_default_instance() {
    return reinterpret_cast<const BulkWriteStringRequest*>(
               &_BulkWriteStringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(BulkWriteStringRequest* other);
  friend void swap(BulkWriteStringRequest& a, BulkWriteStringRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkWriteStringRequest* New() const final {
    return CreateMaybeMessage<BulkWriteStringRequest>(NULL);
  }

  BulkWriteStringRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkWriteStringRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkWriteStringRequest& from);
  void MergeFrom(const BulkWriteStringRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkWriteStringRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint32 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint32 value);
  void add_value_references(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value_references();

  // repeated string values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkWriteStringRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  ::google::protobuf::uint32 fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteBooleanRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteBooleanRequest) */ {
 public:
  WriteBooleanRequest();
  virtual ~WriteBooleanRequest();

  WriteBooleanRequest(const WriteBooleanRequest& from);

  inline WriteBooleanRequest& operator=(const WriteBooleanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteBooleanRequest(WriteBooleanRequest&& from) noexcept
    : WriteBooleanRequest() {
    *this = ::std::move(from);
  }

  inline WriteBooleanRequest& operator=(WriteBooleanRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteBooleanRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteBooleanRequest* internal_default_instance() {
    return reinterpret_cast<const WriteBooleanRequest*>(
               &_WriteBooleanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(WriteBooleanRequest* other);
  friend void swap(WriteBooleanRequest& a, WriteBooleanRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteBooleanRequest* New() const final {
    return CreateMaybeMessage<WriteBooleanRequest>(NULL);
  }

  WriteBooleanRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteBooleanRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteBooleanRequest& from);
  void MergeFrom(const WriteBooleanRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteBooleanRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // uint32 value_reference = 2;
  void clear_value_reference();
  static const int kValueReferenceFieldNumber = 2;
  ::google::protobuf::uint32 value_reference() const;
  void set_value_reference(::google::protobuf::uint32 value);

  // bool value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteBooleanRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fmu_id_;
  ::google::protobuf::uint32 value_reference_;
  bool value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkWriteBooleanRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BulkWriteBooleanRequest) */ {
 public:
  BulkWriteBooleanRequest();
  virtual ~BulkWriteBooleanRequest();

  BulkWriteBooleanRequest(const BulkWriteBooleanRequest& from);

  inline BulkWriteBooleanRequest& operator=(const BulkWriteBooleanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkWriteBooleanRequest(BulkWriteBooleanRequest&& from) noexcept
    : BulkWriteBooleanRequest() {
    *this = ::std::move(from);
  }

  inline BulkWriteBooleanRequest& operator=(BulkWriteBooleanRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkWriteBooleanRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkWriteBooleanRequest* internal_default_instance() {
    return reinterpret_cast<const BulkWriteBooleanRequest*>(
               &_BulkWriteBooleanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(BulkWriteBooleanRequest* other);
  friend void swap(BulkWriteBooleanRequest& a, BulkWriteBooleanRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkWriteBooleanRequest* New() const final {
    return CreateMaybeMessage<BulkWriteBooleanRequest>(NULL);
  }

  BulkWriteBooleanRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkWriteBooleanRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkWriteBooleanRequest& from);
  void MergeFrom(const BulkWriteBooleanRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkWriteBooleanRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint32 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint32 value);
  void add_value_references(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value_references();

  // repeated bool values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  bool values(int index) const;
  void set_values(int index, bool value);
  void add_values(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      values() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_values();

  // uint32 fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  ::google::protobuf::uint32 fmu_id() const;
  void set_fmu_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BulkWriteBooleanRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::uint32 fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Solver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Solver) */ {
 public:
  Solver();
  virtual ~Solver();

  Solver(const Solver& from);

  inline Solver& operator=(const Solver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Solver(Solver&& from) noexcept
    : Solver() {
    *this = ::std::move(from);
  }

  inline Solver& operator=(Solver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Solver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Solver* internal_default_instance() {
    return reinterpret_cast<const Solver*>(
               &_Solver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(Solver* other);
  friend void swap(Solver& a, Solver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Solver* New() const final {
    return CreateMaybeMessage<Solver>(NULL);
  }

  Solver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Solver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Solver& from);
  void MergeFrom(const Solver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Solver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string settings = 2;
  void clear_settings();
  static const int kSettingsFieldNumber = 2;
  const ::std::string& settings() const;
  void set_settings(const ::std::string& value);
  #if LANG_CXX11
  void set_settings(::std::string&& value);
  #endif
  void set_settings(const char* value);
  void set_settings(const char* value, size_t size);
  ::std::string* mutable_settings();
  ::std::string* release_settings();
  void set_allocated_settings(::std::string* settings);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Solver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_definitions_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModelDescription

// string fmi_version = 1;
inline void ModelDescription::clear_fmi_version() {
  fmi_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::fmi_version() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.fmi_version)
  return fmi_version_.GetNoArena();
}
inline void ModelDescription::set_fmi_version(const ::std::string& value) {
  
  fmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.fmi_version)
}
#if LANG_CXX11
inline void ModelDescription::set_fmi_version(::std::string&& value) {
  
  fmi_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.fmi_version)
}
#endif
inline void ModelDescription::set_fmi_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.fmi_version)
}
inline void ModelDescription::set_fmi_version(const char* value, size_t size) {
  
  fmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.fmi_version)
}
inline ::std::string* ModelDescription::mutable_fmi_version() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.fmi_version)
  return fmi_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_fmi_version() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.fmi_version)
  
  return fmi_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_fmi_version(::std::string* fmi_version) {
  if (fmi_version != NULL) {
    
  } else {
    
  }
  fmi_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmi_version);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.fmi_version)
}

// string guid = 2;
inline void ModelDescription::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::guid() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.guid)
  return guid_.GetNoArena();
}
inline void ModelDescription::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.guid)
}
#if LANG_CXX11
inline void ModelDescription::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.guid)
}
#endif
inline void ModelDescription::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.guid)
}
inline void ModelDescription::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.guid)
}
inline ::std::string* ModelDescription::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_guid() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.guid)
}

// string model_name = 3;
inline void ModelDescription::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::model_name() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.model_name)
  return model_name_.GetNoArena();
}
inline void ModelDescription::set_model_name(const ::std::string& value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.model_name)
}
#if LANG_CXX11
inline void ModelDescription::set_model_name(::std::string&& value) {
  
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.model_name)
}
#endif
inline void ModelDescription::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.model_name)
}
inline void ModelDescription::set_model_name(const char* value, size_t size) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.model_name)
}
inline ::std::string* ModelDescription::mutable_model_name() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_model_name() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.model_name)
  
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    
  } else {
    
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.model_name)
}

// string license = 4;
inline void ModelDescription::clear_license() {
  license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::license() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.license)
  return license_.GetNoArena();
}
inline void ModelDescription::set_license(const ::std::string& value) {
  
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.license)
}
#if LANG_CXX11
inline void ModelDescription::set_license(::std::string&& value) {
  
  license_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.license)
}
#endif
inline void ModelDescription::set_license(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.license)
}
inline void ModelDescription::set_license(const char* value, size_t size) {
  
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.license)
}
inline ::std::string* ModelDescription::mutable_license() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.license)
  return license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_license() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.license)
  
  return license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_license(::std::string* license) {
  if (license != NULL) {
    
  } else {
    
  }
  license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), license);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.license)
}

// string copyright = 5;
inline void ModelDescription::clear_copyright() {
  copyright_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::copyright() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.copyright)
  return copyright_.GetNoArena();
}
inline void ModelDescription::set_copyright(const ::std::string& value) {
  
  copyright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.copyright)
}
#if LANG_CXX11
inline void ModelDescription::set_copyright(::std::string&& value) {
  
  copyright_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.copyright)
}
#endif
inline void ModelDescription::set_copyright(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  copyright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.copyright)
}
inline void ModelDescription::set_copyright(const char* value, size_t size) {
  
  copyright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.copyright)
}
inline ::std::string* ModelDescription::mutable_copyright() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.copyright)
  return copyright_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_copyright() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.copyright)
  
  return copyright_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_copyright(::std::string* copyright) {
  if (copyright != NULL) {
    
  } else {
    
  }
  copyright_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), copyright);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.copyright)
}

// string author = 6;
inline void ModelDescription::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::author() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.author)
  return author_.GetNoArena();
}
inline void ModelDescription::set_author(const ::std::string& value) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.author)
}
#if LANG_CXX11
inline void ModelDescription::set_author(::std::string&& value) {
  
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.author)
}
#endif
inline void ModelDescription::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.author)
}
inline void ModelDescription::set_author(const char* value, size_t size) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.author)
}
inline ::std::string* ModelDescription::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_author() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.author)
  
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.author)
}

// string version = 7;
inline void ModelDescription::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::version() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.version)
  return version_.GetNoArena();
}
inline void ModelDescription::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.version)
}
#if LANG_CXX11
inline void ModelDescription::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.version)
}
#endif
inline void ModelDescription::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.version)
}
inline void ModelDescription::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.version)
}
inline ::std::string* ModelDescription::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_version() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.version)
}

// string description = 8;
inline void ModelDescription::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::description() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.description)
  return description_.GetNoArena();
}
inline void ModelDescription::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.description)
}
#if LANG_CXX11
inline void ModelDescription::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.description)
}
#endif
inline void ModelDescription::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.description)
}
inline void ModelDescription::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.description)
}
inline ::std::string* ModelDescription::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_description() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.description)
}

// string generation_tool = 9;
inline void ModelDescription::clear_generation_tool() {
  generation_tool_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::generation_tool() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.generation_tool)
  return generation_tool_.GetNoArena();
}
inline void ModelDescription::set_generation_tool(const ::std::string& value) {
  
  generation_tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.generation_tool)
}
#if LANG_CXX11
inline void ModelDescription::set_generation_tool(::std::string&& value) {
  
  generation_tool_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.generation_tool)
}
#endif
inline void ModelDescription::set_generation_tool(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  generation_tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.generation_tool)
}
inline void ModelDescription::set_generation_tool(const char* value, size_t size) {
  
  generation_tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.generation_tool)
}
inline ::std::string* ModelDescription::mutable_generation_tool() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.generation_tool)
  return generation_tool_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_generation_tool() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.generation_tool)
  
  return generation_tool_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_generation_tool(::std::string* generation_tool) {
  if (generation_tool != NULL) {
    
  } else {
    
  }
  generation_tool_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generation_tool);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.generation_tool)
}

// string generation_date_and_time = 10;
inline void ModelDescription::clear_generation_date_and_time() {
  generation_date_and_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::generation_date_and_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.generation_date_and_time)
  return generation_date_and_time_.GetNoArena();
}
inline void ModelDescription::set_generation_date_and_time(const ::std::string& value) {
  
  generation_date_and_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
#if LANG_CXX11
inline void ModelDescription::set_generation_date_and_time(::std::string&& value) {
  
  generation_date_and_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
#endif
inline void ModelDescription::set_generation_date_and_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  generation_date_and_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
inline void ModelDescription::set_generation_date_and_time(const char* value, size_t size) {
  
  generation_date_and_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
inline ::std::string* ModelDescription::mutable_generation_date_and_time() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.generation_date_and_time)
  return generation_date_and_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_generation_date_and_time() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.generation_date_and_time)
  
  return generation_date_and_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_generation_date_and_time(::std::string* generation_date_and_time) {
  if (generation_date_and_time != NULL) {
    
  } else {
    
  }
  generation_date_and_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generation_date_and_time);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}

// .fmuproxy.grpc.DefaultExperiment default_experiment = 11;
inline bool ModelDescription::has_default_experiment() const {
  return this != internal_default_instance() && default_experiment_ != NULL;
}
inline void ModelDescription::clear_default_experiment() {
  if (GetArenaNoVirtual() == NULL && default_experiment_ != NULL) {
    delete default_experiment_;
  }
  default_experiment_ = NULL;
}
inline const ::fmuproxy::grpc::DefaultExperiment& ModelDescription::_internal_default_experiment() const {
  return *default_experiment_;
}
inline const ::fmuproxy::grpc::DefaultExperiment& ModelDescription::default_experiment() const {
  const ::fmuproxy::grpc::DefaultExperiment* p = default_experiment_;
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.default_experiment)
  return p != NULL ? *p : *reinterpret_cast<const ::fmuproxy::grpc::DefaultExperiment*>(
      &::fmuproxy::grpc::_DefaultExperiment_default_instance_);
}
inline ::fmuproxy::grpc::DefaultExperiment* ModelDescription::release_default_experiment() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.default_experiment)
  
  ::fmuproxy::grpc::DefaultExperiment* temp = default_experiment_;
  default_experiment_ = NULL;
  return temp;
}
inline ::fmuproxy::grpc::DefaultExperiment* ModelDescription::mutable_default_experiment() {
  
  if (default_experiment_ == NULL) {
    auto* p = CreateMaybeMessage<::fmuproxy::grpc::DefaultExperiment>(GetArenaNoVirtual());
    default_experiment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.default_experiment)
  return default_experiment_;
}
inline void ModelDescription::set_allocated_default_experiment(::fmuproxy::grpc::DefaultExperiment* default_experiment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete default_experiment_;
  }
  if (default_experiment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      default_experiment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_experiment, submessage_arena);
    }
    
  } else {
    
  }
  default_experiment_ = default_experiment;
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.default_experiment)
}

// .fmuproxy.grpc.VariableNamingConvention variable_naming_convention = 12;
inline void ModelDescription::clear_variable_naming_convention() {
  variable_naming_convention_ = 0;
}
inline ::fmuproxy::grpc::VariableNamingConvention ModelDescription::variable_naming_convention() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.variable_naming_convention)
  return static_cast< ::fmuproxy::grpc::VariableNamingConvention >(variable_naming_convention_);
}
inline void ModelDescription::set_variable_naming_convention(::fmuproxy::grpc::VariableNamingConvention value) {
  
  variable_naming_convention_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.variable_naming_convention)
}

// repeated .fmuproxy.grpc.ScalarVariable model_variables = 13;
inline int ModelDescription::model_variables_size() const {
  return model_variables_.size();
}
inline void ModelDescription::clear_model_variables() {
  model_variables_.Clear();
}
inline ::fmuproxy::grpc::ScalarVariable* ModelDescription::mutable_model_variables(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >*
ModelDescription::mutable_model_variables() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelDescription.model_variables)
  return &model_variables_;
}
inline const ::fmuproxy::grpc::ScalarVariable& ModelDescription::model_variables(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_.Get(index);
}
inline ::fmuproxy::grpc::ScalarVariable* ModelDescription::add_model_variables() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >&
ModelDescription::model_variables() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_;
}

// .fmuproxy.grpc.ModelStructure model_structure = 14;
inline bool ModelDescription::has_model_structure() const {
  return this != internal_default_instance() && model_structure_ != NULL;
}
inline void ModelDescription::clear_model_structure() {
  if (GetArenaNoVirtual() == NULL && model_structure_ != NULL) {
    delete model_structure_;
  }
  model_structure_ = NULL;
}
inline const ::fmuproxy::grpc::ModelStructure& ModelDescription::_internal_model_structure() const {
  return *model_structure_;
}
inline const ::fmuproxy::grpc::ModelStructure& ModelDescription::model_structure() const {
  const ::fmuproxy::grpc::ModelStructure* p = model_structure_;
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.model_structure)
  return p != NULL ? *p : *reinterpret_cast<const ::fmuproxy::grpc::ModelStructure*>(
      &::fmuproxy::grpc::_ModelStructure_default_instance_);
}
inline ::fmuproxy::grpc::ModelStructure* ModelDescription::release_model_structure() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.model_structure)
  
  ::fmuproxy::grpc::ModelStructure* temp = model_structure_;
  model_structure_ = NULL;
  return temp;
}
inline ::fmuproxy::grpc::ModelStructure* ModelDescription::mutable_model_structure() {
  
  if (model_structure_ == NULL) {
    auto* p = CreateMaybeMessage<::fmuproxy::grpc::ModelStructure>(GetArenaNoVirtual());
    model_structure_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.model_structure)
  return model_structure_;
}
inline void ModelDescription::set_allocated_model_structure(::fmuproxy::grpc::ModelStructure* model_structure) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete model_structure_;
  }
  if (model_structure) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      model_structure = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, model_structure, submessage_arena);
    }
    
  } else {
    
  }
  model_structure_ = model_structure;
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.model_structure)
}

// bool supports_co_simulation = 15;
inline void ModelDescription::clear_supports_co_simulation() {
  supports_co_simulation_ = false;
}
inline bool ModelDescription::supports_co_simulation() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.supports_co_simulation)
  return supports_co_simulation_;
}
inline void ModelDescription::set_supports_co_simulation(bool value) {
  
  supports_co_simulation_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.supports_co_simulation)
}

// bool supports_model_exchange = 16;
inline void ModelDescription::clear_supports_model_exchange() {
  supports_model_exchange_ = false;
}
inline bool ModelDescription::supports_model_exchange() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.supports_model_exchange)
  return supports_model_exchange_;
}
inline void ModelDescription::set_supports_model_exchange(bool value) {
  
  supports_model_exchange_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.supports_model_exchange)
}

// -------------------------------------------------------------------

// IntegerAttribute

// int32 min = 1;
inline void IntegerAttribute::clear_min() {
  min_ = 0;
}
inline ::google::protobuf::int32 IntegerAttribute::min() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerAttribute.min)
  return min_;
}
inline void IntegerAttribute::set_min(::google::protobuf::int32 value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerAttribute.min)
}

// int32 max = 2;
inline void IntegerAttribute::clear_max() {
  max_ = 0;
}
inline ::google::protobuf::int32 IntegerAttribute::max() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerAttribute.max)
  return max_;
}
inline void IntegerAttribute::set_max(::google::protobuf::int32 value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerAttribute.max)
}

// int32 start = 3;
inline void IntegerAttribute::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 IntegerAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerAttribute.start)
  return start_;
}
inline void IntegerAttribute::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerAttribute.start)
}

// -------------------------------------------------------------------

// RealAttribute

// double min = 1;
inline void RealAttribute::clear_min() {
  min_ = 0;
}
inline double RealAttribute::min() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealAttribute.min)
  return min_;
}
inline void RealAttribute::set_min(double value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealAttribute.min)
}

// double max = 2;
inline void RealAttribute::clear_max() {
  max_ = 0;
}
inline double RealAttribute::max() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealAttribute.max)
  return max_;
}
inline void RealAttribute::set_max(double value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealAttribute.max)
}

// double start = 3;
inline void RealAttribute::clear_start() {
  start_ = 0;
}
inline double RealAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealAttribute.start)
  return start_;
}
inline void RealAttribute::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealAttribute.start)
}

// -------------------------------------------------------------------

// StringAttribute

// string start = 1;
inline void StringAttribute::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StringAttribute.start)
  return start_.GetNoArena();
}
inline void StringAttribute::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StringAttribute.start)
}
#if LANG_CXX11
inline void StringAttribute::set_start(::std::string&& value) {
  
  start_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.StringAttribute.start)
}
#endif
inline void StringAttribute::set_start(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.StringAttribute.start)
}
inline void StringAttribute::set_start(const char* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.StringAttribute.start)
}
inline ::std::string* StringAttribute::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.StringAttribute.start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringAttribute::release_start() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.StringAttribute.start)
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringAttribute::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.StringAttribute.start)
}

// -------------------------------------------------------------------

// BooleanAttribute

// bool start = 1;
inline void BooleanAttribute::clear_start() {
  start_ = false;
}
inline bool BooleanAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BooleanAttribute.start)
  return start_;
}
inline void BooleanAttribute::set_start(bool value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BooleanAttribute.start)
}

// -------------------------------------------------------------------

// EnumerationAttribute

// int32 min = 1;
inline void EnumerationAttribute::clear_min() {
  min_ = 0;
}
inline ::google::protobuf::int32 EnumerationAttribute::min() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnumerationAttribute.min)
  return min_;
}
inline void EnumerationAttribute::set_min(::google::protobuf::int32 value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnumerationAttribute.min)
}

// int32 max = 2;
inline void EnumerationAttribute::clear_max() {
  max_ = 0;
}
inline ::google::protobuf::int32 EnumerationAttribute::max() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnumerationAttribute.max)
  return max_;
}
inline void EnumerationAttribute::set_max(::google::protobuf::int32 value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnumerationAttribute.max)
}

// int32 start = 3;
inline void EnumerationAttribute::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 EnumerationAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnumerationAttribute.start)
  return start_;
}
inline void EnumerationAttribute::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnumerationAttribute.start)
}

// -------------------------------------------------------------------

// ScalarVariable

// uint32 value_reference = 1;
inline void ScalarVariable::clear_value_reference() {
  value_reference_ = 0u;
}
inline ::google::protobuf::uint32 ScalarVariable::value_reference() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.value_reference)
  return value_reference_;
}
inline void ScalarVariable::set_value_reference(::google::protobuf::uint32 value) {
  
  value_reference_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.value_reference)
}

// string name = 2;
inline void ScalarVariable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::name() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.name)
  return name_.GetNoArena();
}
inline void ScalarVariable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.name)
}
#if LANG_CXX11
inline void ScalarVariable::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.name)
}
#endif
inline void ScalarVariable::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.name)
}
inline void ScalarVariable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.name)
}
inline ::std::string* ScalarVariable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_name() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.name)
}

// string description = 3;
inline void ScalarVariable::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::description() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.description)
  return description_.GetNoArena();
}
inline void ScalarVariable::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.description)
}
#if LANG_CXX11
inline void ScalarVariable::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.description)
}
#endif
inline void ScalarVariable::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.description)
}
inline void ScalarVariable::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.description)
}
inline ::std::string* ScalarVariable::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_description() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.description)
}

// string declared_type = 4;
inline void ScalarVariable::clear_declared_type() {
  declared_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::declared_type() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.declared_type)
  return declared_type_.GetNoArena();
}
inline void ScalarVariable::set_declared_type(const ::std::string& value) {
  
  declared_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.declared_type)
}
#if LANG_CXX11
inline void ScalarVariable::set_declared_type(::std::string&& value) {
  
  declared_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.declared_type)
}
#endif
inline void ScalarVariable::set_declared_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  declared_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.declared_type)
}
inline void ScalarVariable::set_declared_type(const char* value, size_t size) {
  
  declared_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.declared_type)
}
inline ::std::string* ScalarVariable::mutable_declared_type() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.declared_type)
  return declared_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_declared_type() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.declared_type)
  
  return declared_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_declared_type(::std::string* declared_type) {
  if (declared_type != NULL) {
    
  } else {
    
  }
  declared_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), declared_type);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.declared_type)
}

// .fmuproxy.grpc.Initial initial = 5;
inline void ScalarVariable::clear_initial() {
  initial_ = 0;
}
inline ::fmuproxy::grpc::Initial ScalarVariable::initial() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.initial)
  return static_cast< ::fmuproxy::grpc::Initial >(initial_);
}
inline void ScalarVariable::set_initial(::fmuproxy::grpc::Initial value) {
  
  initial_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.initial)
}

// .fmuproxy.grpc.Causality causality = 6;
inline void ScalarVariable::clear_causality() {
  causality_ = 0;
}
inline ::fmuproxy::grpc::Causality ScalarVariable::causality() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.causality)
  return static_cast< ::fmuproxy::grpc::Causality >(causality_);
}
inline void ScalarVariable::set_causality(::fmuproxy::grpc::Causality value) {
  
  causality_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.causality)
}

// .fmuproxy.grpc.Variability variability = 7;
inline void ScalarVariable::clear_variability() {
  variability_ = 0;
}
inline ::fmuproxy::grpc::Variability ScalarVariable::variability() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.variability)
  return static_cast< ::fmuproxy::grpc::Variability >(variability_);
}
inline void ScalarVariable::set_variability(::fmuproxy::grpc::Variability value) {
  
  variability_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.variability)
}

// .fmuproxy.grpc.IntegerAttribute integer_attribute = 10;
inline bool ScalarVariable::has_integer_attribute() const {
  return attribute_case() == kIntegerAttribute;
}
inline void ScalarVariable::set_has_integer_attribute() {
  _oneof_case_[0] = kIntegerAttribute;
}
inline void ScalarVariable::clear_integer_attribute() {
  if (has_integer_attribute()) {
    delete attribute_.integer_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::IntegerAttribute& ScalarVariable::_internal_integer_attribute() const {
  return *attribute_.integer_attribute_;
}
inline ::fmuproxy::grpc::IntegerAttribute* ScalarVariable::release_integer_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.integer_attribute)
  if (has_integer_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::IntegerAttribute* temp = attribute_.integer_attribute_;
    attribute_.integer_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::IntegerAttribute& ScalarVariable::integer_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.integer_attribute)
  return has_integer_attribute()
      ? *attribute_.integer_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::IntegerAttribute*>(&::fmuproxy::grpc::_IntegerAttribute_default_instance_);
}
inline ::fmuproxy::grpc::IntegerAttribute* ScalarVariable::mutable_integer_attribute() {
  if (!has_integer_attribute()) {
    clear_attribute();
    set_has_integer_attribute();
    attribute_.integer_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::IntegerAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.integer_attribute)
  return attribute_.integer_attribute_;
}

// .fmuproxy.grpc.RealAttribute real_attribute = 11;
inline bool ScalarVariable::has_real_attribute() const {
  return attribute_case() == kRealAttribute;
}
inline void ScalarVariable::set_has_real_attribute() {
  _oneof_case_[0] = kRealAttribute;
}
inline void ScalarVariable::clear_real_attribute() {
  if (has_real_attribute()) {
    delete attribute_.real_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::RealAttribute& ScalarVariable::_internal_real_attribute() const {
  return *attribute_.real_attribute_;
}
inline ::fmuproxy::grpc::RealAttribute* ScalarVariable::release_real_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.real_attribute)
  if (has_real_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::RealAttribute* temp = attribute_.real_attribute_;
    attribute_.real_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::RealAttribute& ScalarVariable::real_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.real_attribute)
  return has_real_attribute()
      ? *attribute_.real_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::RealAttribute*>(&::fmuproxy::grpc::_RealAttribute_default_instance_);
}
inline ::fmuproxy::grpc::RealAttribute* ScalarVariable::mutable_real_attribute() {
  if (!has_real_attribute()) {
    clear_attribute();
    set_has_real_attribute();
    attribute_.real_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::RealAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.real_attribute)
  return attribute_.real_attribute_;
}

// .fmuproxy.grpc.StringAttribute string_attribute = 12;
inline bool ScalarVariable::has_string_attribute() const {
  return attribute_case() == kStringAttribute;
}
inline void ScalarVariable::set_has_string_attribute() {
  _oneof_case_[0] = kStringAttribute;
}
inline void ScalarVariable::clear_string_attribute() {
  if (has_string_attribute()) {
    delete attribute_.string_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::StringAttribute& ScalarVariable::_internal_string_attribute() const {
  return *attribute_.string_attribute_;
}
inline ::fmuproxy::grpc::StringAttribute* ScalarVariable::release_string_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.string_attribute)
  if (has_string_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::StringAttribute* temp = attribute_.string_attribute_;
    attribute_.string_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::StringAttribute& ScalarVariable::string_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.string_attribute)
  return has_string_attribute()
      ? *attribute_.string_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::StringAttribute*>(&::fmuproxy::grpc::_StringAttribute_default_instance_);
}
inline ::fmuproxy::grpc::StringAttribute* ScalarVariable::mutable_string_attribute() {
  if (!has_string_attribute()) {
    clear_attribute();
    set_has_string_attribute();
    attribute_.string_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::StringAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.string_attribute)
  return attribute_.string_attribute_;
}

// .fmuproxy.grpc.BooleanAttribute boolean_attribute = 13;
inline bool ScalarVariable::has_boolean_attribute() const {
  return attribute_case() == kBooleanAttribute;
}
inline void ScalarVariable::set_has_boolean_attribute() {
  _oneof_case_[0] = kBooleanAttribute;
}
inline void ScalarVariable::clear_boolean_attribute() {
  if (has_boolean_attribute()) {
    delete attribute_.boolean_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::BooleanAttribute& ScalarVariable::_internal_boolean_attribute() const {
  return *attribute_.boolean_attribute_;
}
inline ::fmuproxy::grpc::BooleanAttribute* ScalarVariable::release_boolean_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.boolean_attribute)
  if (has_boolean_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::BooleanAttribute* temp = attribute_.boolean_attribute_;
    attribute_.boolean_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::BooleanAttribute& ScalarVariable::boolean_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.boolean_attribute)
  return has_boolean_attribute()
      ? *attribute_.boolean_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::BooleanAttribute*>(&::fmuproxy::grpc::_BooleanAttribute_default_instance_);
}
inline ::fmuproxy::grpc::BooleanAttribute* ScalarVariable::mutable_boolean_attribute() {
  if (!has_boolean_attribute()) {
    clear_attribute();
    set_has_boolean_attribute();
    attribute_.boolean_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::BooleanAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.boolean_attribute)
  return attribute_.boolean_attribute_;
}

// .fmuproxy.grpc.EnumerationAttribute enumeration_attribute = 14;
inline bool ScalarVariable::has_enumeration_attribute() const {
  return attribute_case() == kEnumerationAttribute;
}
inline void ScalarVariable::set_has_enumeration_attribute() {
  _oneof_case_[0] = kEnumerationAttribute;
}
inline void ScalarVariable::clear_enumeration_attribute() {
  if (has_enumeration_attribute()) {
    delete attribute_.enumeration_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::EnumerationAttribute& ScalarVariable::_internal_enumeration_attribute() const {
  return *attribute_.enumeration_attribute_;
}
inline ::fmuproxy::grpc::EnumerationAttribute* ScalarVariable::release_enumeration_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.enumeration_attribute)
  if (has_enumeration_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::EnumerationAttribute* temp = attribute_.enumeration_attribute_;
    attribute_.enumeration_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::EnumerationAttribute& ScalarVariable::enumeration_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.enumeration_attribute)
  return has_enumeration_attribute()
      ? *attribute_.enumeration_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::EnumerationAttribute*>(&::fmuproxy::grpc::_EnumerationAttribute_default_instance_);
}
inline ::fmuproxy::grpc::EnumerationAttribute* ScalarVariable::mutable_enumeration_attribute() {
  if (!has_enumeration_attribute()) {
    clear_attribute();
    set_has_enumeration_attribute();
    attribute_.enumeration_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::EnumerationAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.enumeration_attribute)
  return attribute_.enumeration_attribute_;
}

inline bool ScalarVariable::has_attribute() const {
  return attribute_case() != ATTRIBUTE_NOT_SET;
}
inline void ScalarVariable::clear_has_attribute() {
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}
inline ScalarVariable::AttributeCase ScalarVariable::attribute_case() const {
  return ScalarVariable::AttributeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DefaultExperiment

// double start_time = 1;
inline void DefaultExperiment::clear_start_time() {
  start_time_ = 0;
}
inline double DefaultExperiment::start_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.start_time)
  return start_time_;
}
inline void DefaultExperiment::set_start_time(double value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.start_time)
}

// double stop_time = 2;
inline void DefaultExperiment::clear_stop_time() {
  stop_time_ = 0;
}
inline double DefaultExperiment::stop_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.stop_time)
  return stop_time_;
}
inline void DefaultExperiment::set_stop_time(double value) {
  
  stop_time_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.stop_time)
}

// double tolerance = 3;
inline void DefaultExperiment::clear_tolerance() {
  tolerance_ = 0;
}
inline double DefaultExperiment::tolerance() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.tolerance)
  return tolerance_;
}
inline void DefaultExperiment::set_tolerance(double value) {
  
  tolerance_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.tolerance)
}

// double step_size = 4;
inline void DefaultExperiment::clear_step_size() {
  step_size_ = 0;
}
inline double DefaultExperiment::step_size() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.step_size)
  return step_size_;
}
inline void DefaultExperiment::set_step_size(double value) {
  
  step_size_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.step_size)
}

// -------------------------------------------------------------------

// Unknown

// uint32 index = 1;
inline void Unknown::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 Unknown::index() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Unknown.index)
  return index_;
}
inline void Unknown::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Unknown.index)
}

// repeated uint32 dependencies = 2;
inline int Unknown::dependencies_size() const {
  return dependencies_.size();
}
inline void Unknown::clear_dependencies() {
  dependencies_.Clear();
}
inline ::google::protobuf::uint32 Unknown::dependencies(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Unknown.dependencies)
  return dependencies_.Get(index);
}
inline void Unknown::set_dependencies(int index, ::google::protobuf::uint32 value) {
  dependencies_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Unknown.dependencies)
}
inline void Unknown::add_dependencies(::google::protobuf::uint32 value) {
  dependencies_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.Unknown.dependencies)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Unknown::dependencies() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.Unknown.dependencies)
  return dependencies_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Unknown::mutable_dependencies() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.Unknown.dependencies)
  return &dependencies_;
}

// .fmuproxy.grpc.DependenciesKind dependencies_kind = 3;
inline void Unknown::clear_dependencies_kind() {
  dependencies_kind_ = 0;
}
inline ::fmuproxy::grpc::DependenciesKind Unknown::dependencies_kind() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Unknown.dependencies_kind)
  return static_cast< ::fmuproxy::grpc::DependenciesKind >(dependencies_kind_);
}
inline void Unknown::set_dependencies_kind(::fmuproxy::grpc::DependenciesKind value) {
  
  dependencies_kind_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Unknown.dependencies_kind)
}

// -------------------------------------------------------------------

// ModelStructure

// repeated .fmuproxy.grpc.Unknown outputs = 1;
inline int ModelStructure::outputs_size() const {
  return outputs_.size();
}
inline void ModelStructure::clear_outputs() {
  outputs_.Clear();
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
ModelStructure::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelStructure.outputs)
  return &outputs_;
}
inline const ::fmuproxy::grpc::Unknown& ModelStructure::outputs(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_.Get(index);
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::add_outputs() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
ModelStructure::outputs() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_;
}

// repeated .fmuproxy.grpc.Unknown derivatives = 2;
inline int ModelStructure::derivatives_size() const {
  return derivatives_.size();
}
inline void ModelStructure::clear_derivatives() {
  derivatives_.Clear();
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::mutable_derivatives(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
ModelStructure::mutable_derivatives() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelStructure.derivatives)
  return &derivatives_;
}
inline const ::fmuproxy::grpc::Unknown& ModelStructure::derivatives(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_.Get(index);
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::add_derivatives() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
ModelStructure::derivatives() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_;
}

// repeated .fmuproxy.grpc.Unknown initial_unknowns = 3;
inline int ModelStructure::initial_unknowns_size() const {
  return initial_unknowns_.size();
}
inline void ModelStructure::clear_initial_unknowns() {
  initial_unknowns_.Clear();
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::mutable_initial_unknowns(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
ModelStructure::mutable_initial_unknowns() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return &initial_unknowns_;
}
inline const ::fmuproxy::grpc::Unknown& ModelStructure::initial_unknowns(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_.Get(index);
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::add_initial_unknowns() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
ModelStructure::initial_unknowns() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_;
}

// -------------------------------------------------------------------

// StatusResponse

// .fmuproxy.grpc.Status status = 1;
inline void StatusResponse::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status StatusResponse::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StatusResponse.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void StatusResponse::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StatusResponse.status)
}

// -------------------------------------------------------------------

// InitRequest

// uint32 fmu_id = 1;
inline void InitRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 InitRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.InitRequest.fmu_id)
  return fmu_id_;
}
inline void InitRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.InitRequest.fmu_id)
}

// double start = 2;
inline void InitRequest::clear_start() {
  start_ = 0;
}
inline double InitRequest::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.InitRequest.start)
  return start_;
}
inline void InitRequest::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.InitRequest.start)
}

// double stop = 3;
inline void InitRequest::clear_stop() {
  stop_ = 0;
}
inline double InitRequest::stop() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.InitRequest.stop)
  return stop_;
}
inline void InitRequest::set_stop(double value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.InitRequest.stop)
}

// -------------------------------------------------------------------

// StepRequest

// uint32 fmu_id = 1;
inline void StepRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 StepRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepRequest.fmu_id)
  return fmu_id_;
}
inline void StepRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepRequest.fmu_id)
}

// double step_size = 2;
inline void StepRequest::clear_step_size() {
  step_size_ = 0;
}
inline double StepRequest::step_size() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepRequest.step_size)
  return step_size_;
}
inline void StepRequest::set_step_size(double value) {
  
  step_size_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepRequest.step_size)
}

// -------------------------------------------------------------------

// StepResult

// .fmuproxy.grpc.Status status = 1;
inline void StepResult::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status StepResult::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepResult.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void StepResult::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepResult.status)
}

// double simulation_time = 2;
inline void StepResult::clear_simulation_time() {
  simulation_time_ = 0;
}
inline double StepResult::simulation_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepResult.simulation_time)
  return simulation_time_;
}
inline void StepResult::set_simulation_time(double value) {
  
  simulation_time_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepResult.simulation_time)
}

// -------------------------------------------------------------------

// UInt

// uint32 value = 1;
inline void UInt::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 UInt::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.UInt.value)
  return value_;
}
inline void UInt::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.UInt.value)
}

// -------------------------------------------------------------------

// Int

// int32 value = 1;
inline void Int::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 Int::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Int.value)
  return value_;
}
inline void Int::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Int.value)
}

// -------------------------------------------------------------------

// IntegerRead

// int32 value = 1;
inline void IntegerRead::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 IntegerRead::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerRead.value)
  return value_;
}
inline void IntegerRead::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerRead.value)
}

// .fmuproxy.grpc.Status status = 2;
inline void IntegerRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status IntegerRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void IntegerRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerRead.status)
}

// -------------------------------------------------------------------

// BulkIntegerRead

// repeated int32 values = 1;
inline int BulkIntegerRead::values_size() const {
  return values_.size();
}
inline void BulkIntegerRead::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 BulkIntegerRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkIntegerRead.values)
  return values_.Get(index);
}
inline void BulkIntegerRead::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkIntegerRead.values)
}
inline void BulkIntegerRead::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkIntegerRead.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BulkIntegerRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkIntegerRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BulkIntegerRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkIntegerRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void BulkIntegerRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status BulkIntegerRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkIntegerRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void BulkIntegerRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkIntegerRead.status)
}

// -------------------------------------------------------------------

// Real

// double value = 1;
inline void Real::clear_value() {
  value_ = 0;
}
inline double Real::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Real.value)
  return value_;
}
inline void Real::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Real.value)
}

// -------------------------------------------------------------------

// RealRead

// double value = 1;
inline void RealRead::clear_value() {
  value_ = 0;
}
inline double RealRead::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealRead.value)
  return value_;
}
inline void RealRead::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealRead.value)
}

// .fmuproxy.grpc.Status status = 2;
inline void RealRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status RealRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void RealRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealRead.status)
}

// -------------------------------------------------------------------

// BulkRealRead

// repeated double values = 1;
inline int BulkRealRead::values_size() const {
  return values_.size();
}
inline void BulkRealRead::clear_values() {
  values_.Clear();
}
inline double BulkRealRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkRealRead.values)
  return values_.Get(index);
}
inline void BulkRealRead::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkRealRead.values)
}
inline void BulkRealRead::add_values(double value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkRealRead.values)
}
inline const ::google::protobuf::RepeatedField< double >&
BulkRealRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkRealRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< double >*
BulkRealRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkRealRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void BulkRealRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status BulkRealRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkRealRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void BulkRealRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkRealRead.status)
}

// -------------------------------------------------------------------

// Str

// string value = 1;
inline void Str::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Str::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Str.value)
  return value_.GetNoArena();
}
inline void Str::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Str.value)
}
#if LANG_CXX11
inline void Str::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.Str.value)
}
#endif
inline void Str::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.Str.value)
}
inline void Str::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.Str.value)
}
inline ::std::string* Str::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.Str.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Str::release_value() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.Str.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Str::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.Str.value)
}

// -------------------------------------------------------------------

// StringRead

// string value = 1;
inline void StringRead::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringRead::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StringRead.value)
  return value_.GetNoArena();
}
inline void StringRead::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StringRead.value)
}
#if LANG_CXX11
inline void StringRead::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.StringRead.value)
}
#endif
inline void StringRead::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.StringRead.value)
}
inline void StringRead::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.StringRead.value)
}
inline ::std::string* StringRead::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.StringRead.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringRead::release_value() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.StringRead.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringRead::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.StringRead.value)
}

// .fmuproxy.grpc.Status status = 2;
inline void StringRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status StringRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StringRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void StringRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StringRead.status)
}

// -------------------------------------------------------------------

// BulkStringRead

// repeated string values = 1;
inline int BulkStringRead::values_size() const {
  return values_.size();
}
inline void BulkStringRead::clear_values() {
  values_.Clear();
}
inline const ::std::string& BulkStringRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkStringRead.values)
  return values_.Get(index);
}
inline ::std::string* BulkStringRead::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.BulkStringRead.values)
  return values_.Mutable(index);
}
inline void BulkStringRead::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkStringRead.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BulkStringRead::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkStringRead.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BulkStringRead::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.BulkStringRead.values)
}
inline void BulkStringRead::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.BulkStringRead.values)
}
inline ::std::string* BulkStringRead::add_values() {
  // @@protoc_insertion_point(field_add_mutable:fmuproxy.grpc.BulkStringRead.values)
  return values_.Add();
}
inline void BulkStringRead::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkStringRead.values)
}
#if LANG_CXX11
inline void BulkStringRead::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkStringRead.values)
}
#endif
inline void BulkStringRead::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fmuproxy.grpc.BulkStringRead.values)
}
inline void BulkStringRead::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fmuproxy.grpc.BulkStringRead.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BulkStringRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkStringRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BulkStringRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkStringRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void BulkStringRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status BulkStringRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkStringRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void BulkStringRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkStringRead.status)
}

// -------------------------------------------------------------------

// Bool

// bool value = 1;
inline void Bool::clear_value() {
  value_ = false;
}
inline bool Bool::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Bool.value)
  return value_;
}
inline void Bool::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Bool.value)
}

// -------------------------------------------------------------------

// BooleanRead

// bool value = 1;
inline void BooleanRead::clear_value() {
  value_ = false;
}
inline bool BooleanRead::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BooleanRead.value)
  return value_;
}
inline void BooleanRead::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BooleanRead.value)
}

// .fmuproxy.grpc.Status status = 2;
inline void BooleanRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status BooleanRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BooleanRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void BooleanRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BooleanRead.status)
}

// -------------------------------------------------------------------

// BulkBooleanRead

// repeated bool values = 1;
inline int BulkBooleanRead::values_size() const {
  return values_.size();
}
inline void BulkBooleanRead::clear_values() {
  values_.Clear();
}
inline bool BulkBooleanRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkBooleanRead.values)
  return values_.Get(index);
}
inline void BulkBooleanRead::set_values(int index, bool value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkBooleanRead.values)
}
inline void BulkBooleanRead::add_values(bool value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkBooleanRead.values)
}
inline const ::google::protobuf::RepeatedField< bool >&
BulkBooleanRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkBooleanRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< bool >*
BulkBooleanRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkBooleanRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void BulkBooleanRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status BulkBooleanRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkBooleanRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void BulkBooleanRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkBooleanRead.status)
}

// -------------------------------------------------------------------

// ReadRequest

// uint32 fmu_id = 1;
inline void ReadRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 ReadRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ReadRequest.fmu_id)
  return fmu_id_;
}
inline void ReadRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ReadRequest.fmu_id)
}

// uint32 value_reference = 2;
inline void ReadRequest::clear_value_reference() {
  value_reference_ = 0u;
}
inline ::google::protobuf::uint32 ReadRequest::value_reference() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ReadRequest.value_reference)
  return value_reference_;
}
inline void ReadRequest::set_value_reference(::google::protobuf::uint32 value) {
  
  value_reference_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ReadRequest.value_reference)
}

// -------------------------------------------------------------------

// BulkReadRequest

// uint32 fmu_id = 1;
inline void BulkReadRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 BulkReadRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkReadRequest.fmu_id)
  return fmu_id_;
}
inline void BulkReadRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkReadRequest.fmu_id)
}

// repeated uint32 value_references = 2;
inline int BulkReadRequest::value_references_size() const {
  return value_references_.size();
}
inline void BulkReadRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint32 BulkReadRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkReadRequest.value_references)
  return value_references_.Get(index);
}
inline void BulkReadRequest::set_value_references(int index, ::google::protobuf::uint32 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkReadRequest.value_references)
}
inline void BulkReadRequest::add_value_references(::google::protobuf::uint32 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkReadRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BulkReadRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkReadRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BulkReadRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkReadRequest.value_references)
  return &value_references_;
}

// -------------------------------------------------------------------

// WriteIntegerRequest

// uint32 fmu_id = 1;
inline void WriteIntegerRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 WriteIntegerRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteIntegerRequest.fmu_id)
  return fmu_id_;
}
inline void WriteIntegerRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteIntegerRequest.fmu_id)
}

// uint32 value_reference = 2;
inline void WriteIntegerRequest::clear_value_reference() {
  value_reference_ = 0u;
}
inline ::google::protobuf::uint32 WriteIntegerRequest::value_reference() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteIntegerRequest.value_reference)
  return value_reference_;
}
inline void WriteIntegerRequest::set_value_reference(::google::protobuf::uint32 value) {
  
  value_reference_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteIntegerRequest.value_reference)
}

// int32 value = 3;
inline void WriteIntegerRequest::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 WriteIntegerRequest::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteIntegerRequest.value)
  return value_;
}
inline void WriteIntegerRequest::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteIntegerRequest.value)
}

// -------------------------------------------------------------------

// BulkWriteIntegerRequest

// uint32 fmu_id = 1;
inline void BulkWriteIntegerRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 BulkWriteIntegerRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteIntegerRequest.fmu_id)
  return fmu_id_;
}
inline void BulkWriteIntegerRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteIntegerRequest.fmu_id)
}

// repeated uint32 value_references = 2;
inline int BulkWriteIntegerRequest::value_references_size() const {
  return value_references_.size();
}
inline void BulkWriteIntegerRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint32 BulkWriteIntegerRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteIntegerRequest.value_references)
  return value_references_.Get(index);
}
inline void BulkWriteIntegerRequest::set_value_references(int index, ::google::protobuf::uint32 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteIntegerRequest.value_references)
}
inline void BulkWriteIntegerRequest::add_value_references(::google::protobuf::uint32 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteIntegerRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BulkWriteIntegerRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteIntegerRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BulkWriteIntegerRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteIntegerRequest.value_references)
  return &value_references_;
}

// repeated int32 values = 3;
inline int BulkWriteIntegerRequest::values_size() const {
  return values_.size();
}
inline void BulkWriteIntegerRequest::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 BulkWriteIntegerRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteIntegerRequest.values)
  return values_.Get(index);
}
inline void BulkWriteIntegerRequest::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteIntegerRequest.values)
}
inline void BulkWriteIntegerRequest::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteIntegerRequest.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BulkWriteIntegerRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteIntegerRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BulkWriteIntegerRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteIntegerRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// WriteRealRequest

// uint32 fmu_id = 1;
inline void WriteRealRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 WriteRealRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteRealRequest.fmu_id)
  return fmu_id_;
}
inline void WriteRealRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteRealRequest.fmu_id)
}

// uint32 value_reference = 2;
inline void WriteRealRequest::clear_value_reference() {
  value_reference_ = 0u;
}
inline ::google::protobuf::uint32 WriteRealRequest::value_reference() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteRealRequest.value_reference)
  return value_reference_;
}
inline void WriteRealRequest::set_value_reference(::google::protobuf::uint32 value) {
  
  value_reference_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteRealRequest.value_reference)
}

// double value = 3;
inline void WriteRealRequest::clear_value() {
  value_ = 0;
}
inline double WriteRealRequest::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteRealRequest.value)
  return value_;
}
inline void WriteRealRequest::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteRealRequest.value)
}

// -------------------------------------------------------------------

// BulkWriteRealRequest

// uint32 fmu_id = 1;
inline void BulkWriteRealRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 BulkWriteRealRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteRealRequest.fmu_id)
  return fmu_id_;
}
inline void BulkWriteRealRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteRealRequest.fmu_id)
}

// repeated uint32 value_references = 2;
inline int BulkWriteRealRequest::value_references_size() const {
  return value_references_.size();
}
inline void BulkWriteRealRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint32 BulkWriteRealRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteRealRequest.value_references)
  return value_references_.Get(index);
}
inline void BulkWriteRealRequest::set_value_references(int index, ::google::protobuf::uint32 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteRealRequest.value_references)
}
inline void BulkWriteRealRequest::add_value_references(::google::protobuf::uint32 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteRealRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BulkWriteRealRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteRealRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BulkWriteRealRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteRealRequest.value_references)
  return &value_references_;
}

// repeated double values = 3;
inline int BulkWriteRealRequest::values_size() const {
  return values_.size();
}
inline void BulkWriteRealRequest::clear_values() {
  values_.Clear();
}
inline double BulkWriteRealRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteRealRequest.values)
  return values_.Get(index);
}
inline void BulkWriteRealRequest::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteRealRequest.values)
}
inline void BulkWriteRealRequest::add_values(double value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteRealRequest.values)
}
inline const ::google::protobuf::RepeatedField< double >&
BulkWriteRealRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteRealRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< double >*
BulkWriteRealRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteRealRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// WriteStringRequest

// uint32 fmu_id = 1;
inline void WriteStringRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 WriteStringRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteStringRequest.fmu_id)
  return fmu_id_;
}
inline void WriteStringRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteStringRequest.fmu_id)
}

// uint32 value_reference = 2;
inline void WriteStringRequest::clear_value_reference() {
  value_reference_ = 0u;
}
inline ::google::protobuf::uint32 WriteStringRequest::value_reference() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteStringRequest.value_reference)
  return value_reference_;
}
inline void WriteStringRequest::set_value_reference(::google::protobuf::uint32 value) {
  
  value_reference_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteStringRequest.value_reference)
}

// string value = 3;
inline void WriteStringRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteStringRequest::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteStringRequest.value)
  return value_.GetNoArena();
}
inline void WriteStringRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteStringRequest.value)
}
#if LANG_CXX11
inline void WriteStringRequest::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.WriteStringRequest.value)
}
#endif
inline void WriteStringRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.WriteStringRequest.value)
}
inline void WriteStringRequest::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.WriteStringRequest.value)
}
inline ::std::string* WriteStringRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.WriteStringRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteStringRequest::release_value() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.WriteStringRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteStringRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.WriteStringRequest.value)
}

// -------------------------------------------------------------------

// BulkWriteStringRequest

// uint32 fmu_id = 1;
inline void BulkWriteStringRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 BulkWriteStringRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteStringRequest.fmu_id)
  return fmu_id_;
}
inline void BulkWriteStringRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteStringRequest.fmu_id)
}

// repeated uint32 value_references = 2;
inline int BulkWriteStringRequest::value_references_size() const {
  return value_references_.size();
}
inline void BulkWriteStringRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint32 BulkWriteStringRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteStringRequest.value_references)
  return value_references_.Get(index);
}
inline void BulkWriteStringRequest::set_value_references(int index, ::google::protobuf::uint32 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteStringRequest.value_references)
}
inline void BulkWriteStringRequest::add_value_references(::google::protobuf::uint32 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteStringRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BulkWriteStringRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteStringRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BulkWriteStringRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteStringRequest.value_references)
  return &value_references_;
}

// repeated string values = 3;
inline int BulkWriteStringRequest::values_size() const {
  return values_.size();
}
inline void BulkWriteStringRequest::clear_values() {
  values_.Clear();
}
inline const ::std::string& BulkWriteStringRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteStringRequest.values)
  return values_.Get(index);
}
inline ::std::string* BulkWriteStringRequest::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.BulkWriteStringRequest.values)
  return values_.Mutable(index);
}
inline void BulkWriteStringRequest::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteStringRequest.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BulkWriteStringRequest::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteStringRequest.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BulkWriteStringRequest::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.BulkWriteStringRequest.values)
}
inline void BulkWriteStringRequest::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.BulkWriteStringRequest.values)
}
inline ::std::string* BulkWriteStringRequest::add_values() {
  // @@protoc_insertion_point(field_add_mutable:fmuproxy.grpc.BulkWriteStringRequest.values)
  return values_.Add();
}
inline void BulkWriteStringRequest::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteStringRequest.values)
}
#if LANG_CXX11
inline void BulkWriteStringRequest::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteStringRequest.values)
}
#endif
inline void BulkWriteStringRequest::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fmuproxy.grpc.BulkWriteStringRequest.values)
}
inline void BulkWriteStringRequest::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fmuproxy.grpc.BulkWriteStringRequest.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BulkWriteStringRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteStringRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BulkWriteStringRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteStringRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// WriteBooleanRequest

// uint32 fmu_id = 1;
inline void WriteBooleanRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 WriteBooleanRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteBooleanRequest.fmu_id)
  return fmu_id_;
}
inline void WriteBooleanRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteBooleanRequest.fmu_id)
}

// uint32 value_reference = 2;
inline void WriteBooleanRequest::clear_value_reference() {
  value_reference_ = 0u;
}
inline ::google::protobuf::uint32 WriteBooleanRequest::value_reference() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteBooleanRequest.value_reference)
  return value_reference_;
}
inline void WriteBooleanRequest::set_value_reference(::google::protobuf::uint32 value) {
  
  value_reference_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteBooleanRequest.value_reference)
}

// bool value = 3;
inline void WriteBooleanRequest::clear_value() {
  value_ = false;
}
inline bool WriteBooleanRequest::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteBooleanRequest.value)
  return value_;
}
inline void WriteBooleanRequest::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteBooleanRequest.value)
}

// -------------------------------------------------------------------

// BulkWriteBooleanRequest

// uint32 fmu_id = 1;
inline void BulkWriteBooleanRequest::clear_fmu_id() {
  fmu_id_ = 0u;
}
inline ::google::protobuf::uint32 BulkWriteBooleanRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteBooleanRequest.fmu_id)
  return fmu_id_;
}
inline void BulkWriteBooleanRequest::set_fmu_id(::google::protobuf::uint32 value) {
  
  fmu_id_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteBooleanRequest.fmu_id)
}

// repeated uint32 value_references = 2;
inline int BulkWriteBooleanRequest::value_references_size() const {
  return value_references_.size();
}
inline void BulkWriteBooleanRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint32 BulkWriteBooleanRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteBooleanRequest.value_references)
  return value_references_.Get(index);
}
inline void BulkWriteBooleanRequest::set_value_references(int index, ::google::protobuf::uint32 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteBooleanRequest.value_references)
}
inline void BulkWriteBooleanRequest::add_value_references(::google::protobuf::uint32 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteBooleanRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BulkWriteBooleanRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteBooleanRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BulkWriteBooleanRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteBooleanRequest.value_references)
  return &value_references_;
}

// repeated bool values = 3;
inline int BulkWriteBooleanRequest::values_size() const {
  return values_.size();
}
inline void BulkWriteBooleanRequest::clear_values() {
  values_.Clear();
}
inline bool BulkWriteBooleanRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BulkWriteBooleanRequest.values)
  return values_.Get(index);
}
inline void BulkWriteBooleanRequest::set_values(int index, bool value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BulkWriteBooleanRequest.values)
}
inline void BulkWriteBooleanRequest::add_values(bool value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BulkWriteBooleanRequest.values)
}
inline const ::google::protobuf::RepeatedField< bool >&
BulkWriteBooleanRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BulkWriteBooleanRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< bool >*
BulkWriteBooleanRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BulkWriteBooleanRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// Solver

// string name = 1;
inline void Solver::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Solver::name() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Solver.name)
  return name_.GetNoArena();
}
inline void Solver::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Solver.name)
}
#if LANG_CXX11
inline void Solver::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.Solver.name)
}
#endif
inline void Solver::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.Solver.name)
}
inline void Solver::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.Solver.name)
}
inline ::std::string* Solver::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.Solver.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Solver::release_name() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.Solver.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Solver::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.Solver.name)
}

// string settings = 2;
inline void Solver::clear_settings() {
  settings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Solver::settings() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Solver.settings)
  return settings_.GetNoArena();
}
inline void Solver::set_settings(const ::std::string& value) {
  
  settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Solver.settings)
}
#if LANG_CXX11
inline void Solver::set_settings(::std::string&& value) {
  
  settings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.Solver.settings)
}
#endif
inline void Solver::set_settings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.Solver.settings)
}
inline void Solver::set_settings(const char* value, size_t size) {
  
  settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.Solver.settings)
}
inline ::std::string* Solver::mutable_settings() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.Solver.settings)
  return settings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Solver::release_settings() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.Solver.settings)
  
  return settings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Solver::set_allocated_settings(::std::string* settings) {
  if (settings != NULL) {
    
  } else {
    
  }
  settings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), settings);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.Solver.settings)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc
}  // namespace fmuproxy

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fmuproxy::grpc::Causality> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fmuproxy::grpc::Causality>() {
  return ::fmuproxy::grpc::Causality_descriptor();
}
template <> struct is_proto_enum< ::fmuproxy::grpc::Variability> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fmuproxy::grpc::Variability>() {
  return ::fmuproxy::grpc::Variability_descriptor();
}
template <> struct is_proto_enum< ::fmuproxy::grpc::Initial> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fmuproxy::grpc::Initial>() {
  return ::fmuproxy::grpc::Initial_descriptor();
}
template <> struct is_proto_enum< ::fmuproxy::grpc::Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fmuproxy::grpc::Status>() {
  return ::fmuproxy::grpc::Status_descriptor();
}
template <> struct is_proto_enum< ::fmuproxy::grpc::DependenciesKind> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fmuproxy::grpc::DependenciesKind>() {
  return ::fmuproxy::grpc::DependenciesKind_descriptor();
}
template <> struct is_proto_enum< ::fmuproxy::grpc::VariableNamingConvention> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fmuproxy::grpc::VariableNamingConvention>() {
  return ::fmuproxy::grpc::VariableNamingConvention_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_definitions_2eproto
