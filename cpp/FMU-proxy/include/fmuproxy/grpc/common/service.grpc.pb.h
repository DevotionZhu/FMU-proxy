// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: service.proto
// Original file comments:
//
// The MIT License
//
// Copyright 2017-2019 Norwegian University of Technology (NTNU)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
#ifndef GRPC_service_2eproto__INCLUDED
#define GRPC_service_2eproto__INCLUDED

#include "service.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc_impl {
class CompletionQueue;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc_impl

namespace grpc {
namespace experimental {
template <typename RequestT, typename ResponseT>
class MessageAllocator;
}  // namespace experimental
}  // namespace grpc

namespace fmuproxy {
namespace grpc {

class FmuService final {
 public:
  static constexpr char const* service_full_name() {
    return "fmuproxy.grpc.FmuService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status LoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::fmuproxy::grpc::FmuId* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>> AsyncLoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>>(AsyncLoadFromUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>> PrepareAsyncLoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>>(PrepareAsyncLoadFromUrlRaw(context, request, cq));
    }
    virtual ::grpc::Status LoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::fmuproxy::grpc::FmuId* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>> AsyncLoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>>(AsyncLoadFromFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>> PrepareAsyncLoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>>(PrepareAsyncLoadFromFileRaw(context, request, cq));
    }
    virtual ::grpc::Status GetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::fmuproxy::grpc::ModelDescription* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::ModelDescription>> AsyncGetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::ModelDescription>>(AsyncGetModelDescriptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::ModelDescription>> PrepareAsyncGetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::ModelDescription>>(PrepareAsyncGetModelDescriptionRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::fmuproxy::grpc::InstanceId* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::InstanceId>> AsyncCreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::InstanceId>>(AsyncCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::InstanceId>> PrepareAsyncCreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::InstanceId>>(PrepareAsyncCreateInstanceRaw(context, request, cq));
    }
    virtual ::grpc::Status SetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncSetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncSetupExperimentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncSetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncSetupExperimentRaw(context, request, cq));
    }
    virtual ::grpc::Status EnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncEnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncEnterInitializationModeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncEnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncEnterInitializationModeRaw(context, request, cq));
    }
    virtual ::grpc::Status ExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncExitInitializationModeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncExitInitializationModeRaw(context, request, cq));
    }
    virtual ::grpc::Status Step(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::fmuproxy::grpc::StepResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StepResponse>> AsyncStep(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StepResponse>>(AsyncStepRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StepResponse>> PrepareAsyncStep(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StepResponse>>(PrepareAsyncStepRaw(context, request, cq));
    }
    virtual ::grpc::Status Reset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncReset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncResetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncReset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncResetRaw(context, request, cq));
    }
    virtual ::grpc::Status Terminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncTerminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncTerminateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncTerminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncTerminateRaw(context, request, cq));
    }
    virtual ::grpc::Status FreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::fmuproxy::grpc::Void* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::Void>> AsyncFreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::Void>>(AsyncFreeInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::Void>> PrepareAsyncFreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::Void>>(PrepareAsyncFreeInstanceRaw(context, request, cq));
    }
    virtual ::grpc::Status ReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::IntegerRead* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::IntegerRead>> AsyncReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::IntegerRead>>(AsyncReadIntegerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::IntegerRead>> PrepareAsyncReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::IntegerRead>>(PrepareAsyncReadIntegerRaw(context, request, cq));
    }
    virtual ::grpc::Status ReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::RealRead* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::RealRead>> AsyncReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::RealRead>>(AsyncReadRealRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::RealRead>> PrepareAsyncReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::RealRead>>(PrepareAsyncReadRealRaw(context, request, cq));
    }
    virtual ::grpc::Status ReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::StringRead* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StringRead>> AsyncReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StringRead>>(AsyncReadStringRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StringRead>> PrepareAsyncReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StringRead>>(PrepareAsyncReadStringRaw(context, request, cq));
    }
    virtual ::grpc::Status ReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::BooleanRead* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::BooleanRead>> AsyncReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::BooleanRead>>(AsyncReadBooleanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::BooleanRead>> PrepareAsyncReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::BooleanRead>>(PrepareAsyncReadBooleanRaw(context, request, cq));
    }
    virtual ::grpc::Status WriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncWriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteIntegerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteIntegerRaw(context, request, cq));
    }
    virtual ::grpc::Status WriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncWriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteRealRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteRealRaw(context, request, cq));
    }
    virtual ::grpc::Status WriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncWriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteStringRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteStringRaw(context, request, cq));
    }
    virtual ::grpc::Status WriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::fmuproxy::grpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> AsyncWriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteBooleanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteBooleanRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>> AsyncGetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>>(AsyncGetDirectionalDerivativeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>> PrepareAsyncGetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>>(PrepareAsyncGetDirectionalDerivativeRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      virtual void LoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoadFromUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void LoadFromUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void LoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoadFromFile(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void LoadFromFile(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void GetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest* request, ::fmuproxy::grpc::ModelDescription* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetModelDescription(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::ModelDescription* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest* request, ::fmuproxy::grpc::ModelDescription* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void GetModelDescription(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::ModelDescription* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void CreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest* request, ::fmuproxy::grpc::InstanceId* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::InstanceId* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest* request, ::fmuproxy::grpc::InstanceId* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void CreateInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::InstanceId* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void SetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetupExperiment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void SetupExperiment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void EnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EnterInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void EnterInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExitInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ExitInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void Step(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest* request, ::fmuproxy::grpc::StepResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Step(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StepResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Step(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest* request, ::fmuproxy::grpc::StepResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void Step(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StepResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void Reset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Reset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Reset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void Reset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void Terminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Terminate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Terminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void Terminate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void FreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest* request, ::fmuproxy::grpc::Void* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FreeInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::Void* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest* request, ::fmuproxy::grpc::Void* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void FreeInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::Void* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::IntegerRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::IntegerRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::IntegerRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::IntegerRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::RealRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::RealRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::RealRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::RealRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::StringRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StringRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::StringRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StringRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::BooleanRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::BooleanRead* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::BooleanRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void ReadBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::BooleanRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void WriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void WriteBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void GetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDirectionalDerivative(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void GetDirectionalDerivative(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>* AsyncLoadFromUrlRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>* PrepareAsyncLoadFromUrlRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>* AsyncLoadFromFileRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::FmuId>* PrepareAsyncLoadFromFileRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::ModelDescription>* AsyncGetModelDescriptionRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::ModelDescription>* PrepareAsyncGetModelDescriptionRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::InstanceId>* AsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::InstanceId>* PrepareAsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncSetupExperimentRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncSetupExperimentRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncEnterInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncEnterInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncExitInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncExitInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StepResponse>* AsyncStepRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StepResponse>* PrepareAsyncStepRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncResetRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncResetRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncTerminateRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncTerminateRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::Void>* AsyncFreeInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::Void>* PrepareAsyncFreeInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::IntegerRead>* AsyncReadIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::IntegerRead>* PrepareAsyncReadIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::RealRead>* AsyncReadRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::RealRead>* PrepareAsyncReadRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StringRead>* AsyncReadStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StringRead>* PrepareAsyncReadStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::BooleanRead>* AsyncReadBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::BooleanRead>* PrepareAsyncReadBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncWriteIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncWriteRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncWriteStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* AsyncWriteBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>* AsyncGetDirectionalDerivativeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>* PrepareAsyncGetDirectionalDerivativeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status LoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::fmuproxy::grpc::FmuId* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>> AsyncLoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>>(AsyncLoadFromUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>> PrepareAsyncLoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>>(PrepareAsyncLoadFromUrlRaw(context, request, cq));
    }
    ::grpc::Status LoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::fmuproxy::grpc::FmuId* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>> AsyncLoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>>(AsyncLoadFromFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>> PrepareAsyncLoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>>(PrepareAsyncLoadFromFileRaw(context, request, cq));
    }
    ::grpc::Status GetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::fmuproxy::grpc::ModelDescription* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::ModelDescription>> AsyncGetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::ModelDescription>>(AsyncGetModelDescriptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::ModelDescription>> PrepareAsyncGetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::ModelDescription>>(PrepareAsyncGetModelDescriptionRaw(context, request, cq));
    }
    ::grpc::Status CreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::fmuproxy::grpc::InstanceId* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::InstanceId>> AsyncCreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::InstanceId>>(AsyncCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::InstanceId>> PrepareAsyncCreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::InstanceId>>(PrepareAsyncCreateInstanceRaw(context, request, cq));
    }
    ::grpc::Status SetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncSetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncSetupExperimentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncSetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncSetupExperimentRaw(context, request, cq));
    }
    ::grpc::Status EnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncEnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncEnterInitializationModeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncEnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncEnterInitializationModeRaw(context, request, cq));
    }
    ::grpc::Status ExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncExitInitializationModeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncExitInitializationModeRaw(context, request, cq));
    }
    ::grpc::Status Step(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::fmuproxy::grpc::StepResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StepResponse>> AsyncStep(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StepResponse>>(AsyncStepRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StepResponse>> PrepareAsyncStep(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StepResponse>>(PrepareAsyncStepRaw(context, request, cq));
    }
    ::grpc::Status Reset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncReset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncResetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncReset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncResetRaw(context, request, cq));
    }
    ::grpc::Status Terminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncTerminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncTerminateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncTerminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncTerminateRaw(context, request, cq));
    }
    ::grpc::Status FreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::fmuproxy::grpc::Void* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::Void>> AsyncFreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::Void>>(AsyncFreeInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::Void>> PrepareAsyncFreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::Void>>(PrepareAsyncFreeInstanceRaw(context, request, cq));
    }
    ::grpc::Status ReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::IntegerRead* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::IntegerRead>> AsyncReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::IntegerRead>>(AsyncReadIntegerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::IntegerRead>> PrepareAsyncReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::IntegerRead>>(PrepareAsyncReadIntegerRaw(context, request, cq));
    }
    ::grpc::Status ReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::RealRead* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::RealRead>> AsyncReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::RealRead>>(AsyncReadRealRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::RealRead>> PrepareAsyncReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::RealRead>>(PrepareAsyncReadRealRaw(context, request, cq));
    }
    ::grpc::Status ReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::StringRead* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StringRead>> AsyncReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StringRead>>(AsyncReadStringRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StringRead>> PrepareAsyncReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StringRead>>(PrepareAsyncReadStringRaw(context, request, cq));
    }
    ::grpc::Status ReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::fmuproxy::grpc::BooleanRead* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::BooleanRead>> AsyncReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::BooleanRead>>(AsyncReadBooleanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::BooleanRead>> PrepareAsyncReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::BooleanRead>>(PrepareAsyncReadBooleanRaw(context, request, cq));
    }
    ::grpc::Status WriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncWriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteIntegerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteIntegerRaw(context, request, cq));
    }
    ::grpc::Status WriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncWriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteRealRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteRealRaw(context, request, cq));
    }
    ::grpc::Status WriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncWriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteStringRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteStringRaw(context, request, cq));
    }
    ::grpc::Status WriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::fmuproxy::grpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> AsyncWriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(AsyncWriteBooleanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>> PrepareAsyncWriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>>(PrepareAsyncWriteBooleanRaw(context, request, cq));
    }
    ::grpc::Status GetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>> AsyncGetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>>(AsyncGetDirectionalDerivativeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>> PrepareAsyncGetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>>(PrepareAsyncGetDirectionalDerivativeRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void LoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) override;
      void LoadFromUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) override;
      void LoadFromUrl(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void LoadFromUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void LoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) override;
      void LoadFromFile(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, std::function<void(::grpc::Status)>) override;
      void LoadFromFile(::grpc::ClientContext* context, const ::fmuproxy::grpc::File* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void LoadFromFile(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::FmuId* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void GetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest* request, ::fmuproxy::grpc::ModelDescription* response, std::function<void(::grpc::Status)>) override;
      void GetModelDescription(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::ModelDescription* response, std::function<void(::grpc::Status)>) override;
      void GetModelDescription(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest* request, ::fmuproxy::grpc::ModelDescription* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void GetModelDescription(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::ModelDescription* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void CreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest* request, ::fmuproxy::grpc::InstanceId* response, std::function<void(::grpc::Status)>) override;
      void CreateInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::InstanceId* response, std::function<void(::grpc::Status)>) override;
      void CreateInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest* request, ::fmuproxy::grpc::InstanceId* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void CreateInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::InstanceId* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void SetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void SetupExperiment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void SetupExperiment(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void SetupExperiment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void EnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void EnterInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void EnterInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void EnterInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void ExitInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void ExitInitializationMode(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ExitInitializationMode(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void Step(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest* request, ::fmuproxy::grpc::StepResponse* response, std::function<void(::grpc::Status)>) override;
      void Step(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StepResponse* response, std::function<void(::grpc::Status)>) override;
      void Step(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest* request, ::fmuproxy::grpc::StepResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void Step(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StepResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void Reset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void Reset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void Reset(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void Reset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void Terminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void Terminate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void Terminate(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void Terminate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void FreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest* request, ::fmuproxy::grpc::Void* response, std::function<void(::grpc::Status)>) override;
      void FreeInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::Void* response, std::function<void(::grpc::Status)>) override;
      void FreeInstance(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest* request, ::fmuproxy::grpc::Void* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void FreeInstance(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::Void* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::IntegerRead* response, std::function<void(::grpc::Status)>) override;
      void ReadInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::IntegerRead* response, std::function<void(::grpc::Status)>) override;
      void ReadInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::IntegerRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::IntegerRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::RealRead* response, std::function<void(::grpc::Status)>) override;
      void ReadReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::RealRead* response, std::function<void(::grpc::Status)>) override;
      void ReadReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::RealRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::RealRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::StringRead* response, std::function<void(::grpc::Status)>) override;
      void ReadString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StringRead* response, std::function<void(::grpc::Status)>) override;
      void ReadString(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::StringRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StringRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::BooleanRead* response, std::function<void(::grpc::Status)>) override;
      void ReadBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::BooleanRead* response, std::function<void(::grpc::Status)>) override;
      void ReadBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::BooleanRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void ReadBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::BooleanRead* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteInteger(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteInteger(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteReal(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteReal(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteString(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteString(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void WriteBoolean(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void WriteBoolean(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::StatusResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void GetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDirectionalDerivative(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDirectionalDerivative(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void GetDirectionalDerivative(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>* AsyncLoadFromUrlRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>* PrepareAsyncLoadFromUrlRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::Url& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>* AsyncLoadFromFileRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::FmuId>* PrepareAsyncLoadFromFileRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::File& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::ModelDescription>* AsyncGetModelDescriptionRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::ModelDescription>* PrepareAsyncGetModelDescriptionRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::InstanceId>* AsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::InstanceId>* PrepareAsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncSetupExperimentRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncSetupExperimentRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::SetupExperimentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncEnterInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncEnterInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncExitInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncExitInitializationModeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StepResponse>* AsyncStepRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StepResponse>* PrepareAsyncStepRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::StepRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncResetRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncResetRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ResetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncTerminateRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncTerminateRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::TerminateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::Void>* AsyncFreeInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::Void>* PrepareAsyncFreeInstanceRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::FreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::IntegerRead>* AsyncReadIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::IntegerRead>* PrepareAsyncReadIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::RealRead>* AsyncReadRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::RealRead>* PrepareAsyncReadRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StringRead>* AsyncReadStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StringRead>* PrepareAsyncReadStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::BooleanRead>* AsyncReadBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::BooleanRead>* PrepareAsyncReadBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::ReadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncWriteIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteIntegerRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteIntegerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncWriteRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteRealRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteRealRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncWriteStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteStringRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteStringRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* AsyncWriteBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::StatusResponse>* PrepareAsyncWriteBooleanRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::WriteBooleanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>* AsyncGetDirectionalDerivativeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>* PrepareAsyncGetDirectionalDerivativeRaw(::grpc::ClientContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_LoadFromUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_LoadFromFile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetModelDescription_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_SetupExperiment_;
    const ::grpc::internal::RpcMethod rpcmethod_EnterInitializationMode_;
    const ::grpc::internal::RpcMethod rpcmethod_ExitInitializationMode_;
    const ::grpc::internal::RpcMethod rpcmethod_Step_;
    const ::grpc::internal::RpcMethod rpcmethod_Reset_;
    const ::grpc::internal::RpcMethod rpcmethod_Terminate_;
    const ::grpc::internal::RpcMethod rpcmethod_FreeInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadInteger_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadReal_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadString_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadBoolean_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteInteger_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteReal_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteString_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteBoolean_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDirectionalDerivative_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status LoadFromUrl(::grpc::ServerContext* context, const ::fmuproxy::grpc::Url* request, ::fmuproxy::grpc::FmuId* response);
    virtual ::grpc::Status LoadFromFile(::grpc::ServerContext* context, const ::fmuproxy::grpc::File* request, ::fmuproxy::grpc::FmuId* response);
    virtual ::grpc::Status GetModelDescription(::grpc::ServerContext* context, const ::fmuproxy::grpc::GetModelDescriptionRequest* request, ::fmuproxy::grpc::ModelDescription* response);
    virtual ::grpc::Status CreateInstance(::grpc::ServerContext* context, const ::fmuproxy::grpc::CreateInstanceRequest* request, ::fmuproxy::grpc::InstanceId* response);
    virtual ::grpc::Status SetupExperiment(::grpc::ServerContext* context, const ::fmuproxy::grpc::SetupExperimentRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status EnterInitializationMode(::grpc::ServerContext* context, const ::fmuproxy::grpc::EnterInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status ExitInitializationMode(::grpc::ServerContext* context, const ::fmuproxy::grpc::ExitInitializationModeRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status Step(::grpc::ServerContext* context, const ::fmuproxy::grpc::StepRequest* request, ::fmuproxy::grpc::StepResponse* response);
    virtual ::grpc::Status Reset(::grpc::ServerContext* context, const ::fmuproxy::grpc::ResetRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status Terminate(::grpc::ServerContext* context, const ::fmuproxy::grpc::TerminateRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status FreeInstance(::grpc::ServerContext* context, const ::fmuproxy::grpc::FreeRequest* request, ::fmuproxy::grpc::Void* response);
    virtual ::grpc::Status ReadInteger(::grpc::ServerContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::IntegerRead* response);
    virtual ::grpc::Status ReadReal(::grpc::ServerContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::RealRead* response);
    virtual ::grpc::Status ReadString(::grpc::ServerContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::StringRead* response);
    virtual ::grpc::Status ReadBoolean(::grpc::ServerContext* context, const ::fmuproxy::grpc::ReadRequest* request, ::fmuproxy::grpc::BooleanRead* response);
    virtual ::grpc::Status WriteInteger(::grpc::ServerContext* context, const ::fmuproxy::grpc::WriteIntegerRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status WriteReal(::grpc::ServerContext* context, const ::fmuproxy::grpc::WriteRealRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status WriteString(::grpc::ServerContext* context, const ::fmuproxy::grpc::WriteStringRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status WriteBoolean(::grpc::ServerContext* context, const ::fmuproxy::grpc::WriteBooleanRequest* request, ::fmuproxy::grpc::StatusResponse* response);
    virtual ::grpc::Status GetDirectionalDerivative(::grpc::ServerContext* context, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* request, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_LoadFromUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LoadFromUrl() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_LoadFromUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromUrl(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::Url* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadFromUrl(::grpc::ServerContext* context, ::fmuproxy::grpc::Url* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::FmuId>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LoadFromFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LoadFromFile() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_LoadFromFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromFile(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::File* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadFromFile(::grpc::ServerContext* context, ::fmuproxy::grpc::File* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::FmuId>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetModelDescription : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetModelDescription() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetModelDescription() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelDescription(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetModelDescriptionRequest* /*request*/, ::fmuproxy::grpc::ModelDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetModelDescription(::grpc::ServerContext* context, ::fmuproxy::grpc::GetModelDescriptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::ModelDescription>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateInstance() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::CreateInstanceRequest* /*request*/, ::fmuproxy::grpc::InstanceId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInstance(::grpc::ServerContext* context, ::fmuproxy::grpc::CreateInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::InstanceId>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetupExperiment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetupExperiment() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetupExperiment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupExperiment(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::SetupExperimentRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetupExperiment(::grpc::ServerContext* context, ::fmuproxy::grpc::SetupExperimentRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnterInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EnterInitializationMode() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_EnterInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::EnterInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnterInitializationMode(::grpc::ServerContext* context, ::fmuproxy::grpc::EnterInitializationModeRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExitInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExitInitializationMode() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ExitInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ExitInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExitInitializationMode(::grpc::ServerContext* context, ::fmuproxy::grpc::ExitInitializationModeRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Step : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Step() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_Step() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Step(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::StepRequest* /*request*/, ::fmuproxy::grpc::StepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStep(::grpc::ServerContext* context, ::fmuproxy::grpc::StepRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StepResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Reset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Reset() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_Reset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reset(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ResetRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReset(::grpc::ServerContext* context, ::fmuproxy::grpc::ResetRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Terminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Terminate() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_Terminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Terminate(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::TerminateRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminate(::grpc::ServerContext* context, ::fmuproxy::grpc::TerminateRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FreeInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FreeInstance() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_FreeInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FreeInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::FreeRequest* /*request*/, ::fmuproxy::grpc::Void* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFreeInstance(::grpc::ServerContext* context, ::fmuproxy::grpc::FreeRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::Void>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadInteger() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ReadInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::IntegerRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadInteger(::grpc::ServerContext* context, ::fmuproxy::grpc::ReadRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::IntegerRead>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadReal() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ReadReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::RealRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadReal(::grpc::ServerContext* context, ::fmuproxy::grpc::ReadRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::RealRead>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadString() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ReadString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::StringRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadString(::grpc::ServerContext* context, ::fmuproxy::grpc::ReadRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StringRead>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadBoolean() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_ReadBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::BooleanRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadBoolean(::grpc::ServerContext* context, ::fmuproxy::grpc::ReadRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::BooleanRead>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteInteger() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_WriteInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteIntegerRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteInteger(::grpc::ServerContext* context, ::fmuproxy::grpc::WriteIntegerRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteReal() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_WriteReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteRealRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteReal(::grpc::ServerContext* context, ::fmuproxy::grpc::WriteRealRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteString() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_WriteString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteStringRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteString(::grpc::ServerContext* context, ::fmuproxy::grpc::WriteStringRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteBoolean() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_WriteBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteBooleanRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteBoolean(::grpc::ServerContext* context, ::fmuproxy::grpc::WriteBooleanRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDirectionalDerivative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDirectionalDerivative() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetDirectionalDerivative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* /*request*/, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDirectionalDerivative(::grpc::ServerContext* context, ::fmuproxy::grpc::GetDirectionalDerivativeRequest* request, ::grpc::ServerAsyncResponseWriter< ::fmuproxy::grpc::GetDirectionalDerivativeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_LoadFromUrl<WithAsyncMethod_LoadFromFile<WithAsyncMethod_GetModelDescription<WithAsyncMethod_CreateInstance<WithAsyncMethod_SetupExperiment<WithAsyncMethod_EnterInitializationMode<WithAsyncMethod_ExitInitializationMode<WithAsyncMethod_Step<WithAsyncMethod_Reset<WithAsyncMethod_Terminate<WithAsyncMethod_FreeInstance<WithAsyncMethod_ReadInteger<WithAsyncMethod_ReadReal<WithAsyncMethod_ReadString<WithAsyncMethod_ReadBoolean<WithAsyncMethod_WriteInteger<WithAsyncMethod_WriteReal<WithAsyncMethod_WriteString<WithAsyncMethod_WriteBoolean<WithAsyncMethod_GetDirectionalDerivative<Service > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_LoadFromUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_LoadFromUrl() {
      ::grpc::Service::experimental().MarkMethodCallback(0,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::Url, ::fmuproxy::grpc::FmuId>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::Url* request,
                 ::fmuproxy::grpc::FmuId* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->LoadFromUrl(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_LoadFromUrl(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::Url, ::fmuproxy::grpc::FmuId>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::Url, ::fmuproxy::grpc::FmuId>*>(
          ::grpc::Service::experimental().GetHandler(0))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_LoadFromUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromUrl(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::Url* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void LoadFromUrl(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::Url* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_LoadFromFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_LoadFromFile() {
      ::grpc::Service::experimental().MarkMethodCallback(1,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::File, ::fmuproxy::grpc::FmuId>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::File* request,
                 ::fmuproxy::grpc::FmuId* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->LoadFromFile(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_LoadFromFile(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::File, ::fmuproxy::grpc::FmuId>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::File, ::fmuproxy::grpc::FmuId>*>(
          ::grpc::Service::experimental().GetHandler(1))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_LoadFromFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromFile(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::File* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void LoadFromFile(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::File* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetModelDescription : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetModelDescription() {
      ::grpc::Service::experimental().MarkMethodCallback(2,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::GetModelDescriptionRequest, ::fmuproxy::grpc::ModelDescription>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::GetModelDescriptionRequest* request,
                 ::fmuproxy::grpc::ModelDescription* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->GetModelDescription(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_GetModelDescription(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::GetModelDescriptionRequest, ::fmuproxy::grpc::ModelDescription>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::GetModelDescriptionRequest, ::fmuproxy::grpc::ModelDescription>*>(
          ::grpc::Service::experimental().GetHandler(2))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetModelDescription() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelDescription(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetModelDescriptionRequest* /*request*/, ::fmuproxy::grpc::ModelDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetModelDescription(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetModelDescriptionRequest* /*request*/, ::fmuproxy::grpc::ModelDescription* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateInstance() {
      ::grpc::Service::experimental().MarkMethodCallback(3,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::CreateInstanceRequest, ::fmuproxy::grpc::InstanceId>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::CreateInstanceRequest* request,
                 ::fmuproxy::grpc::InstanceId* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->CreateInstance(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_CreateInstance(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::CreateInstanceRequest, ::fmuproxy::grpc::InstanceId>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::CreateInstanceRequest, ::fmuproxy::grpc::InstanceId>*>(
          ::grpc::Service::experimental().GetHandler(3))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::CreateInstanceRequest* /*request*/, ::fmuproxy::grpc::InstanceId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::CreateInstanceRequest* /*request*/, ::fmuproxy::grpc::InstanceId* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetupExperiment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SetupExperiment() {
      ::grpc::Service::experimental().MarkMethodCallback(4,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::SetupExperimentRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::SetupExperimentRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->SetupExperiment(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_SetupExperiment(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::SetupExperimentRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::SetupExperimentRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(4))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SetupExperiment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupExperiment(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::SetupExperimentRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetupExperiment(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::SetupExperimentRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_EnterInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_EnterInitializationMode() {
      ::grpc::Service::experimental().MarkMethodCallback(5,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::EnterInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::EnterInitializationModeRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->EnterInitializationMode(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_EnterInitializationMode(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::EnterInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::EnterInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(5))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_EnterInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::EnterInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::EnterInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ExitInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ExitInitializationMode() {
      ::grpc::Service::experimental().MarkMethodCallback(6,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ExitInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::ExitInitializationModeRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->ExitInitializationMode(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_ExitInitializationMode(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::ExitInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ExitInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(6))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ExitInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ExitInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ExitInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Step : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Step() {
      ::grpc::Service::experimental().MarkMethodCallback(7,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::StepRequest, ::fmuproxy::grpc::StepResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::StepRequest* request,
                 ::fmuproxy::grpc::StepResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->Step(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_Step(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::StepRequest, ::fmuproxy::grpc::StepResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::StepRequest, ::fmuproxy::grpc::StepResponse>*>(
          ::grpc::Service::experimental().GetHandler(7))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Step() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Step(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::StepRequest* /*request*/, ::fmuproxy::grpc::StepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void Step(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::StepRequest* /*request*/, ::fmuproxy::grpc::StepResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Reset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Reset() {
      ::grpc::Service::experimental().MarkMethodCallback(8,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ResetRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::ResetRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->Reset(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_Reset(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::ResetRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ResetRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(8))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Reset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reset(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ResetRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void Reset(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ResetRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Terminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Terminate() {
      ::grpc::Service::experimental().MarkMethodCallback(9,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::TerminateRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::TerminateRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->Terminate(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_Terminate(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::TerminateRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::TerminateRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(9))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Terminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Terminate(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::TerminateRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void Terminate(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::TerminateRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_FreeInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_FreeInstance() {
      ::grpc::Service::experimental().MarkMethodCallback(10,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::FreeRequest, ::fmuproxy::grpc::Void>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::FreeRequest* request,
                 ::fmuproxy::grpc::Void* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->FreeInstance(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_FreeInstance(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::FreeRequest, ::fmuproxy::grpc::Void>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::FreeRequest, ::fmuproxy::grpc::Void>*>(
          ::grpc::Service::experimental().GetHandler(10))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_FreeInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FreeInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::FreeRequest* /*request*/, ::fmuproxy::grpc::Void* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void FreeInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::FreeRequest* /*request*/, ::fmuproxy::grpc::Void* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReadInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReadInteger() {
      ::grpc::Service::experimental().MarkMethodCallback(11,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::IntegerRead>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::ReadRequest* request,
                 ::fmuproxy::grpc::IntegerRead* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->ReadInteger(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_ReadInteger(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::IntegerRead>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::IntegerRead>*>(
          ::grpc::Service::experimental().GetHandler(11))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReadInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::IntegerRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::IntegerRead* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReadReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReadReal() {
      ::grpc::Service::experimental().MarkMethodCallback(12,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::RealRead>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::ReadRequest* request,
                 ::fmuproxy::grpc::RealRead* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->ReadReal(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_ReadReal(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::RealRead>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::RealRead>*>(
          ::grpc::Service::experimental().GetHandler(12))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReadReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::RealRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::RealRead* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReadString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReadString() {
      ::grpc::Service::experimental().MarkMethodCallback(13,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::StringRead>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::ReadRequest* request,
                 ::fmuproxy::grpc::StringRead* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->ReadString(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_ReadString(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::StringRead>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::StringRead>*>(
          ::grpc::Service::experimental().GetHandler(13))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReadString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::StringRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::StringRead* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReadBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReadBoolean() {
      ::grpc::Service::experimental().MarkMethodCallback(14,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::BooleanRead>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::ReadRequest* request,
                 ::fmuproxy::grpc::BooleanRead* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->ReadBoolean(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_ReadBoolean(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::BooleanRead>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::BooleanRead>*>(
          ::grpc::Service::experimental().GetHandler(14))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReadBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::BooleanRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::BooleanRead* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WriteInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WriteInteger() {
      ::grpc::Service::experimental().MarkMethodCallback(15,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteIntegerRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::WriteIntegerRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->WriteInteger(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_WriteInteger(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::WriteIntegerRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteIntegerRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(15))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WriteInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteIntegerRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteIntegerRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WriteReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WriteReal() {
      ::grpc::Service::experimental().MarkMethodCallback(16,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteRealRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::WriteRealRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->WriteReal(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_WriteReal(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::WriteRealRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteRealRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(16))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WriteReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteRealRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteRealRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WriteString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WriteString() {
      ::grpc::Service::experimental().MarkMethodCallback(17,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteStringRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::WriteStringRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->WriteString(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_WriteString(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::WriteStringRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteStringRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(17))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WriteString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteStringRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteStringRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WriteBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WriteBoolean() {
      ::grpc::Service::experimental().MarkMethodCallback(18,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteBooleanRequest, ::fmuproxy::grpc::StatusResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::WriteBooleanRequest* request,
                 ::fmuproxy::grpc::StatusResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->WriteBoolean(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_WriteBoolean(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::WriteBooleanRequest, ::fmuproxy::grpc::StatusResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::WriteBooleanRequest, ::fmuproxy::grpc::StatusResponse>*>(
          ::grpc::Service::experimental().GetHandler(18))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WriteBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteBooleanRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteBooleanRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDirectionalDerivative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDirectionalDerivative() {
      ::grpc::Service::experimental().MarkMethodCallback(19,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::GetDirectionalDerivativeRequest, ::fmuproxy::grpc::GetDirectionalDerivativeResponse>(
          [this](::grpc::ServerContext* context,
                 const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* request,
                 ::fmuproxy::grpc::GetDirectionalDerivativeResponse* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->GetDirectionalDerivative(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_GetDirectionalDerivative(
        ::grpc::experimental::MessageAllocator< ::fmuproxy::grpc::GetDirectionalDerivativeRequest, ::fmuproxy::grpc::GetDirectionalDerivativeResponse>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::fmuproxy::grpc::GetDirectionalDerivativeRequest, ::fmuproxy::grpc::GetDirectionalDerivativeResponse>*>(
          ::grpc::Service::experimental().GetHandler(19))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetDirectionalDerivative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* /*request*/, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* /*request*/, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  typedef ExperimentalWithCallbackMethod_LoadFromUrl<ExperimentalWithCallbackMethod_LoadFromFile<ExperimentalWithCallbackMethod_GetModelDescription<ExperimentalWithCallbackMethod_CreateInstance<ExperimentalWithCallbackMethod_SetupExperiment<ExperimentalWithCallbackMethod_EnterInitializationMode<ExperimentalWithCallbackMethod_ExitInitializationMode<ExperimentalWithCallbackMethod_Step<ExperimentalWithCallbackMethod_Reset<ExperimentalWithCallbackMethod_Terminate<ExperimentalWithCallbackMethod_FreeInstance<ExperimentalWithCallbackMethod_ReadInteger<ExperimentalWithCallbackMethod_ReadReal<ExperimentalWithCallbackMethod_ReadString<ExperimentalWithCallbackMethod_ReadBoolean<ExperimentalWithCallbackMethod_WriteInteger<ExperimentalWithCallbackMethod_WriteReal<ExperimentalWithCallbackMethod_WriteString<ExperimentalWithCallbackMethod_WriteBoolean<ExperimentalWithCallbackMethod_GetDirectionalDerivative<Service > > > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_LoadFromUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LoadFromUrl() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_LoadFromUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromUrl(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::Url* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LoadFromFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LoadFromFile() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_LoadFromFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromFile(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::File* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetModelDescription : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetModelDescription() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetModelDescription() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelDescription(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetModelDescriptionRequest* /*request*/, ::fmuproxy::grpc::ModelDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateInstance() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::CreateInstanceRequest* /*request*/, ::fmuproxy::grpc::InstanceId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetupExperiment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetupExperiment() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetupExperiment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupExperiment(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::SetupExperimentRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnterInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EnterInitializationMode() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_EnterInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::EnterInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExitInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExitInitializationMode() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ExitInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ExitInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Step : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Step() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_Step() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Step(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::StepRequest* /*request*/, ::fmuproxy::grpc::StepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Reset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Reset() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_Reset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reset(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ResetRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Terminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Terminate() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_Terminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Terminate(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::TerminateRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FreeInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FreeInstance() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_FreeInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FreeInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::FreeRequest* /*request*/, ::fmuproxy::grpc::Void* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadInteger() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ReadInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::IntegerRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadReal() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ReadReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::RealRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadString() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ReadString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::StringRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadBoolean() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_ReadBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::BooleanRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteInteger() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_WriteInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteIntegerRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteReal() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_WriteReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteRealRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteString() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_WriteString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteStringRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteBoolean() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_WriteBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteBooleanRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDirectionalDerivative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDirectionalDerivative() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetDirectionalDerivative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* /*request*/, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_LoadFromUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LoadFromUrl() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_LoadFromUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromUrl(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::Url* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadFromUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LoadFromFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LoadFromFile() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_LoadFromFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromFile(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::File* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadFromFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetModelDescription : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetModelDescription() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetModelDescription() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelDescription(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetModelDescriptionRequest* /*request*/, ::fmuproxy::grpc::ModelDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetModelDescription(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateInstance() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::CreateInstanceRequest* /*request*/, ::fmuproxy::grpc::InstanceId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetupExperiment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetupExperiment() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetupExperiment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupExperiment(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::SetupExperimentRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetupExperiment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EnterInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EnterInitializationMode() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_EnterInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::EnterInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnterInitializationMode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExitInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExitInitializationMode() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ExitInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ExitInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExitInitializationMode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Step : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Step() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_Step() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Step(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::StepRequest* /*request*/, ::fmuproxy::grpc::StepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStep(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Reset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Reset() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_Reset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reset(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ResetRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Terminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Terminate() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_Terminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Terminate(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::TerminateRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FreeInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FreeInstance() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_FreeInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FreeInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::FreeRequest* /*request*/, ::fmuproxy::grpc::Void* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFreeInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadInteger() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_ReadInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::IntegerRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadInteger(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadReal() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ReadReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::RealRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadReal(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadString() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_ReadString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::StringRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadString(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadBoolean() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_ReadBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::BooleanRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadBoolean(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteInteger() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_WriteInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteIntegerRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteInteger(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteReal() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_WriteReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteRealRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteReal(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteString() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_WriteString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteStringRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteString(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteBoolean() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_WriteBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteBooleanRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteBoolean(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDirectionalDerivative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDirectionalDerivative() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetDirectionalDerivative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* /*request*/, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDirectionalDerivative(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_LoadFromUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_LoadFromUrl() {
      ::grpc::Service::experimental().MarkMethodRawCallback(0,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->LoadFromUrl(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_LoadFromUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromUrl(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::Url* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void LoadFromUrl(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_LoadFromFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_LoadFromFile() {
      ::grpc::Service::experimental().MarkMethodRawCallback(1,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->LoadFromFile(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_LoadFromFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadFromFile(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::File* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void LoadFromFile(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetModelDescription : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetModelDescription() {
      ::grpc::Service::experimental().MarkMethodRawCallback(2,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->GetModelDescription(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_GetModelDescription() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelDescription(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetModelDescriptionRequest* /*request*/, ::fmuproxy::grpc::ModelDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetModelDescription(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateInstance() {
      ::grpc::Service::experimental().MarkMethodRawCallback(3,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateInstance(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::CreateInstanceRequest* /*request*/, ::fmuproxy::grpc::InstanceId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateInstance(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetupExperiment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SetupExperiment() {
      ::grpc::Service::experimental().MarkMethodRawCallback(4,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->SetupExperiment(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_SetupExperiment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupExperiment(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::SetupExperimentRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void SetupExperiment(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_EnterInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_EnterInitializationMode() {
      ::grpc::Service::experimental().MarkMethodRawCallback(5,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->EnterInitializationMode(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_EnterInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::EnterInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ExitInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ExitInitializationMode() {
      ::grpc::Service::experimental().MarkMethodRawCallback(6,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->ExitInitializationMode(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_ExitInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ExitInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Step : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Step() {
      ::grpc::Service::experimental().MarkMethodRawCallback(7,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->Step(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_Step() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Step(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::StepRequest* /*request*/, ::fmuproxy::grpc::StepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void Step(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Reset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Reset() {
      ::grpc::Service::experimental().MarkMethodRawCallback(8,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->Reset(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_Reset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Reset(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ResetRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void Reset(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Terminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Terminate() {
      ::grpc::Service::experimental().MarkMethodRawCallback(9,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->Terminate(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_Terminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Terminate(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::TerminateRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void Terminate(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_FreeInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_FreeInstance() {
      ::grpc::Service::experimental().MarkMethodRawCallback(10,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->FreeInstance(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_FreeInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FreeInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::FreeRequest* /*request*/, ::fmuproxy::grpc::Void* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void FreeInstance(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReadInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReadInteger() {
      ::grpc::Service::experimental().MarkMethodRawCallback(11,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->ReadInteger(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_ReadInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::IntegerRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadInteger(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReadReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReadReal() {
      ::grpc::Service::experimental().MarkMethodRawCallback(12,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->ReadReal(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_ReadReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::RealRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadReal(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReadString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReadString() {
      ::grpc::Service::experimental().MarkMethodRawCallback(13,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->ReadString(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_ReadString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::StringRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadString(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReadBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReadBoolean() {
      ::grpc::Service::experimental().MarkMethodRawCallback(14,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->ReadBoolean(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_ReadBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::BooleanRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void ReadBoolean(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WriteInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WriteInteger() {
      ::grpc::Service::experimental().MarkMethodRawCallback(15,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->WriteInteger(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_WriteInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteIntegerRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteInteger(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WriteReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WriteReal() {
      ::grpc::Service::experimental().MarkMethodRawCallback(16,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->WriteReal(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_WriteReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteRealRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteReal(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WriteString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WriteString() {
      ::grpc::Service::experimental().MarkMethodRawCallback(17,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->WriteString(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_WriteString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteStringRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteString(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WriteBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WriteBoolean() {
      ::grpc::Service::experimental().MarkMethodRawCallback(18,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->WriteBoolean(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_WriteBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteBooleanRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void WriteBoolean(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDirectionalDerivative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDirectionalDerivative() {
      ::grpc::Service::experimental().MarkMethodRawCallback(19,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->GetDirectionalDerivative(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDirectionalDerivative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* /*request*/, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LoadFromUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LoadFromUrl() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::Url, ::fmuproxy::grpc::FmuId>(std::bind(&WithStreamedUnaryMethod_LoadFromUrl<BaseClass>::StreamedLoadFromUrl, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_LoadFromUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LoadFromUrl(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::Url* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoadFromUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::Url,::fmuproxy::grpc::FmuId>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LoadFromFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LoadFromFile() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::File, ::fmuproxy::grpc::FmuId>(std::bind(&WithStreamedUnaryMethod_LoadFromFile<BaseClass>::StreamedLoadFromFile, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_LoadFromFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LoadFromFile(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::File* /*request*/, ::fmuproxy::grpc::FmuId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoadFromFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::File,::fmuproxy::grpc::FmuId>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetModelDescription : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetModelDescription() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::GetModelDescriptionRequest, ::fmuproxy::grpc::ModelDescription>(std::bind(&WithStreamedUnaryMethod_GetModelDescription<BaseClass>::StreamedGetModelDescription, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetModelDescription() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetModelDescription(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetModelDescriptionRequest* /*request*/, ::fmuproxy::grpc::ModelDescription* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetModelDescription(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::GetModelDescriptionRequest,::fmuproxy::grpc::ModelDescription>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateInstance() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::CreateInstanceRequest, ::fmuproxy::grpc::InstanceId>(std::bind(&WithStreamedUnaryMethod_CreateInstance<BaseClass>::StreamedCreateInstance, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::CreateInstanceRequest* /*request*/, ::fmuproxy::grpc::InstanceId* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::CreateInstanceRequest,::fmuproxy::grpc::InstanceId>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetupExperiment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetupExperiment() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::SetupExperimentRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_SetupExperiment<BaseClass>::StreamedSetupExperiment, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetupExperiment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetupExperiment(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::SetupExperimentRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetupExperiment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::SetupExperimentRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnterInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EnterInitializationMode() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::EnterInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_EnterInitializationMode<BaseClass>::StreamedEnterInitializationMode, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EnterInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnterInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::EnterInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnterInitializationMode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::EnterInitializationModeRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExitInitializationMode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExitInitializationMode() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::ExitInitializationModeRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_ExitInitializationMode<BaseClass>::StreamedExitInitializationMode, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ExitInitializationMode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExitInitializationMode(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ExitInitializationModeRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExitInitializationMode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::ExitInitializationModeRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Step : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Step() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::StepRequest, ::fmuproxy::grpc::StepResponse>(std::bind(&WithStreamedUnaryMethod_Step<BaseClass>::StreamedStep, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Step() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Step(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::StepRequest* /*request*/, ::fmuproxy::grpc::StepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStep(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::StepRequest,::fmuproxy::grpc::StepResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Reset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Reset() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::ResetRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_Reset<BaseClass>::StreamedReset, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Reset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Reset(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ResetRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::ResetRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Terminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Terminate() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::TerminateRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_Terminate<BaseClass>::StreamedTerminate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Terminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Terminate(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::TerminateRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTerminate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::TerminateRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FreeInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FreeInstance() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::FreeRequest, ::fmuproxy::grpc::Void>(std::bind(&WithStreamedUnaryMethod_FreeInstance<BaseClass>::StreamedFreeInstance, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_FreeInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FreeInstance(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::FreeRequest* /*request*/, ::fmuproxy::grpc::Void* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFreeInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::FreeRequest,::fmuproxy::grpc::Void>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadInteger() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::IntegerRead>(std::bind(&WithStreamedUnaryMethod_ReadInteger<BaseClass>::StreamedReadInteger, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReadInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::IntegerRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadInteger(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::ReadRequest,::fmuproxy::grpc::IntegerRead>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadReal() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::RealRead>(std::bind(&WithStreamedUnaryMethod_ReadReal<BaseClass>::StreamedReadReal, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReadReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::RealRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadReal(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::ReadRequest,::fmuproxy::grpc::RealRead>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadString() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::StringRead>(std::bind(&WithStreamedUnaryMethod_ReadString<BaseClass>::StreamedReadString, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReadString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::StringRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadString(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::ReadRequest,::fmuproxy::grpc::StringRead>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadBoolean() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::ReadRequest, ::fmuproxy::grpc::BooleanRead>(std::bind(&WithStreamedUnaryMethod_ReadBoolean<BaseClass>::StreamedReadBoolean, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReadBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::ReadRequest* /*request*/, ::fmuproxy::grpc::BooleanRead* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadBoolean(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::ReadRequest,::fmuproxy::grpc::BooleanRead>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteInteger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteInteger() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::WriteIntegerRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_WriteInteger<BaseClass>::StreamedWriteInteger, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_WriteInteger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteInteger(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteIntegerRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteInteger(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::WriteIntegerRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteReal : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteReal() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::WriteRealRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_WriteReal<BaseClass>::StreamedWriteReal, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_WriteReal() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteReal(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteRealRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteReal(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::WriteRealRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteString : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteString() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::WriteStringRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_WriteString<BaseClass>::StreamedWriteString, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_WriteString() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteString(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteStringRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteString(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::WriteStringRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteBoolean() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::WriteBooleanRequest, ::fmuproxy::grpc::StatusResponse>(std::bind(&WithStreamedUnaryMethod_WriteBoolean<BaseClass>::StreamedWriteBoolean, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_WriteBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteBoolean(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::WriteBooleanRequest* /*request*/, ::fmuproxy::grpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteBoolean(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::WriteBooleanRequest,::fmuproxy::grpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDirectionalDerivative : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDirectionalDerivative() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler< ::fmuproxy::grpc::GetDirectionalDerivativeRequest, ::fmuproxy::grpc::GetDirectionalDerivativeResponse>(std::bind(&WithStreamedUnaryMethod_GetDirectionalDerivative<BaseClass>::StreamedGetDirectionalDerivative, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDirectionalDerivative() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDirectionalDerivative(::grpc::ServerContext* /*context*/, const ::fmuproxy::grpc::GetDirectionalDerivativeRequest* /*request*/, ::fmuproxy::grpc::GetDirectionalDerivativeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDirectionalDerivative(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fmuproxy::grpc::GetDirectionalDerivativeRequest,::fmuproxy::grpc::GetDirectionalDerivativeResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_LoadFromUrl<WithStreamedUnaryMethod_LoadFromFile<WithStreamedUnaryMethod_GetModelDescription<WithStreamedUnaryMethod_CreateInstance<WithStreamedUnaryMethod_SetupExperiment<WithStreamedUnaryMethod_EnterInitializationMode<WithStreamedUnaryMethod_ExitInitializationMode<WithStreamedUnaryMethod_Step<WithStreamedUnaryMethod_Reset<WithStreamedUnaryMethod_Terminate<WithStreamedUnaryMethod_FreeInstance<WithStreamedUnaryMethod_ReadInteger<WithStreamedUnaryMethod_ReadReal<WithStreamedUnaryMethod_ReadString<WithStreamedUnaryMethod_ReadBoolean<WithStreamedUnaryMethod_WriteInteger<WithStreamedUnaryMethod_WriteReal<WithStreamedUnaryMethod_WriteString<WithStreamedUnaryMethod_WriteBoolean<WithStreamedUnaryMethod_GetDirectionalDerivative<Service > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_LoadFromUrl<WithStreamedUnaryMethod_LoadFromFile<WithStreamedUnaryMethod_GetModelDescription<WithStreamedUnaryMethod_CreateInstance<WithStreamedUnaryMethod_SetupExperiment<WithStreamedUnaryMethod_EnterInitializationMode<WithStreamedUnaryMethod_ExitInitializationMode<WithStreamedUnaryMethod_Step<WithStreamedUnaryMethod_Reset<WithStreamedUnaryMethod_Terminate<WithStreamedUnaryMethod_FreeInstance<WithStreamedUnaryMethod_ReadInteger<WithStreamedUnaryMethod_ReadReal<WithStreamedUnaryMethod_ReadString<WithStreamedUnaryMethod_ReadBoolean<WithStreamedUnaryMethod_WriteInteger<WithStreamedUnaryMethod_WriteReal<WithStreamedUnaryMethod_WriteString<WithStreamedUnaryMethod_WriteBoolean<WithStreamedUnaryMethod_GetDirectionalDerivative<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace grpc
}  // namespace fmuproxy


#endif  // GRPC_service_2eproto__INCLUDED
