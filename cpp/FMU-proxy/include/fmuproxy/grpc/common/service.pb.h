// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#ifndef PROTOBUF_INCLUDED_service_2eproto
#define PROTOBUF_INCLUDED_service_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto 

namespace protobuf_service_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[51];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_2eproto
namespace fmuproxy {
namespace grpc {
class Bool;
class BoolDefaultTypeInternal;
extern BoolDefaultTypeInternal _Bool_default_instance_;
class BooleanAttribute;
class BooleanAttributeDefaultTypeInternal;
extern BooleanAttributeDefaultTypeInternal _BooleanAttribute_default_instance_;
class BooleanRead;
class BooleanReadDefaultTypeInternal;
extern BooleanReadDefaultTypeInternal _BooleanRead_default_instance_;
class CanCreateInstanceFromCSRequest;
class CanCreateInstanceFromCSRequestDefaultTypeInternal;
extern CanCreateInstanceFromCSRequestDefaultTypeInternal _CanCreateInstanceFromCSRequest_default_instance_;
class CanCreateInstanceFromMERequest;
class CanCreateInstanceFromMERequestDefaultTypeInternal;
extern CanCreateInstanceFromMERequestDefaultTypeInternal _CanCreateInstanceFromMERequest_default_instance_;
class CoSimulationAttributes;
class CoSimulationAttributesDefaultTypeInternal;
extern CoSimulationAttributesDefaultTypeInternal _CoSimulationAttributes_default_instance_;
class CreateInstanceFromCSRequest;
class CreateInstanceFromCSRequestDefaultTypeInternal;
extern CreateInstanceFromCSRequestDefaultTypeInternal _CreateInstanceFromCSRequest_default_instance_;
class CreateInstanceFromMERequest;
class CreateInstanceFromMERequestDefaultTypeInternal;
extern CreateInstanceFromMERequestDefaultTypeInternal _CreateInstanceFromMERequest_default_instance_;
class DeSerializeFMUstateRequest;
class DeSerializeFMUstateRequestDefaultTypeInternal;
extern DeSerializeFMUstateRequestDefaultTypeInternal _DeSerializeFMUstateRequest_default_instance_;
class DeSerializeFMUstateResponse;
class DeSerializeFMUstateResponseDefaultTypeInternal;
extern DeSerializeFMUstateResponseDefaultTypeInternal _DeSerializeFMUstateResponse_default_instance_;
class DefaultExperiment;
class DefaultExperimentDefaultTypeInternal;
extern DefaultExperimentDefaultTypeInternal _DefaultExperiment_default_instance_;
class EnterInitializationModeRequest;
class EnterInitializationModeRequestDefaultTypeInternal;
extern EnterInitializationModeRequestDefaultTypeInternal _EnterInitializationModeRequest_default_instance_;
class EnumerationAttribute;
class EnumerationAttributeDefaultTypeInternal;
extern EnumerationAttributeDefaultTypeInternal _EnumerationAttribute_default_instance_;
class ExitInitializationModeRequest;
class ExitInitializationModeRequestDefaultTypeInternal;
extern ExitInitializationModeRequestDefaultTypeInternal _ExitInitializationModeRequest_default_instance_;
class FmuId;
class FmuIdDefaultTypeInternal;
extern FmuIdDefaultTypeInternal _FmuId_default_instance_;
class FreeFMUstateRequest;
class FreeFMUstateRequestDefaultTypeInternal;
extern FreeFMUstateRequestDefaultTypeInternal _FreeFMUstateRequest_default_instance_;
class GetCoSimulationAttributesRequest;
class GetCoSimulationAttributesRequestDefaultTypeInternal;
extern GetCoSimulationAttributesRequestDefaultTypeInternal _GetCoSimulationAttributesRequest_default_instance_;
class GetDirectionalDerivativeRequest;
class GetDirectionalDerivativeRequestDefaultTypeInternal;
extern GetDirectionalDerivativeRequestDefaultTypeInternal _GetDirectionalDerivativeRequest_default_instance_;
class GetDirectionalDerivativeResponse;
class GetDirectionalDerivativeResponseDefaultTypeInternal;
extern GetDirectionalDerivativeResponseDefaultTypeInternal _GetDirectionalDerivativeResponse_default_instance_;
class GetFMUstateRequest;
class GetFMUstateRequestDefaultTypeInternal;
extern GetFMUstateRequestDefaultTypeInternal _GetFMUstateRequest_default_instance_;
class GetFMUstateResponse;
class GetFMUstateResponseDefaultTypeInternal;
extern GetFMUstateResponseDefaultTypeInternal _GetFMUstateResponse_default_instance_;
class GetModelDescriptionRequest;
class GetModelDescriptionRequestDefaultTypeInternal;
extern GetModelDescriptionRequestDefaultTypeInternal _GetModelDescriptionRequest_default_instance_;
class InstanceId;
class InstanceIdDefaultTypeInternal;
extern InstanceIdDefaultTypeInternal _InstanceId_default_instance_;
class IntegerAttribute;
class IntegerAttributeDefaultTypeInternal;
extern IntegerAttributeDefaultTypeInternal _IntegerAttribute_default_instance_;
class IntegerRead;
class IntegerReadDefaultTypeInternal;
extern IntegerReadDefaultTypeInternal _IntegerRead_default_instance_;
class ModelDescription;
class ModelDescriptionDefaultTypeInternal;
extern ModelDescriptionDefaultTypeInternal _ModelDescription_default_instance_;
class ModelDescriptionXml;
class ModelDescriptionXmlDefaultTypeInternal;
extern ModelDescriptionXmlDefaultTypeInternal _ModelDescriptionXml_default_instance_;
class ModelStructure;
class ModelStructureDefaultTypeInternal;
extern ModelStructureDefaultTypeInternal _ModelStructure_default_instance_;
class ReadRequest;
class ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
class RealAttribute;
class RealAttributeDefaultTypeInternal;
extern RealAttributeDefaultTypeInternal _RealAttribute_default_instance_;
class RealRead;
class RealReadDefaultTypeInternal;
extern RealReadDefaultTypeInternal _RealRead_default_instance_;
class ResetRequest;
class ResetRequestDefaultTypeInternal;
extern ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
class ScalarVariable;
class ScalarVariableDefaultTypeInternal;
extern ScalarVariableDefaultTypeInternal _ScalarVariable_default_instance_;
class SerializeFMUstateRequest;
class SerializeFMUstateRequestDefaultTypeInternal;
extern SerializeFMUstateRequestDefaultTypeInternal _SerializeFMUstateRequest_default_instance_;
class SerializeFMUstateResponse;
class SerializeFMUstateResponseDefaultTypeInternal;
extern SerializeFMUstateResponseDefaultTypeInternal _SerializeFMUstateResponse_default_instance_;
class SetFMUstateRequest;
class SetFMUstateRequestDefaultTypeInternal;
extern SetFMUstateRequestDefaultTypeInternal _SetFMUstateRequest_default_instance_;
class SetupExperimentRequest;
class SetupExperimentRequestDefaultTypeInternal;
extern SetupExperimentRequestDefaultTypeInternal _SetupExperimentRequest_default_instance_;
class Solver;
class SolverDefaultTypeInternal;
extern SolverDefaultTypeInternal _Solver_default_instance_;
class StatusResponse;
class StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
class StepRequest;
class StepRequestDefaultTypeInternal;
extern StepRequestDefaultTypeInternal _StepRequest_default_instance_;
class StepResponse;
class StepResponseDefaultTypeInternal;
extern StepResponseDefaultTypeInternal _StepResponse_default_instance_;
class StringAttribute;
class StringAttributeDefaultTypeInternal;
extern StringAttributeDefaultTypeInternal _StringAttribute_default_instance_;
class StringRead;
class StringReadDefaultTypeInternal;
extern StringReadDefaultTypeInternal _StringRead_default_instance_;
class TerminateRequest;
class TerminateRequestDefaultTypeInternal;
extern TerminateRequestDefaultTypeInternal _TerminateRequest_default_instance_;
class Unknown;
class UnknownDefaultTypeInternal;
extern UnknownDefaultTypeInternal _Unknown_default_instance_;
class Url;
class UrlDefaultTypeInternal;
extern UrlDefaultTypeInternal _Url_default_instance_;
class Void;
class VoidDefaultTypeInternal;
extern VoidDefaultTypeInternal _Void_default_instance_;
class WriteBooleanRequest;
class WriteBooleanRequestDefaultTypeInternal;
extern WriteBooleanRequestDefaultTypeInternal _WriteBooleanRequest_default_instance_;
class WriteIntegerRequest;
class WriteIntegerRequestDefaultTypeInternal;
extern WriteIntegerRequestDefaultTypeInternal _WriteIntegerRequest_default_instance_;
class WriteRealRequest;
class WriteRealRequestDefaultTypeInternal;
extern WriteRealRequestDefaultTypeInternal _WriteRealRequest_default_instance_;
class WriteStringRequest;
class WriteStringRequestDefaultTypeInternal;
extern WriteStringRequestDefaultTypeInternal _WriteStringRequest_default_instance_;
}  // namespace grpc
}  // namespace fmuproxy
namespace google {
namespace protobuf {
template<> ::fmuproxy::grpc::Bool* Arena::CreateMaybeMessage<::fmuproxy::grpc::Bool>(Arena*);
template<> ::fmuproxy::grpc::BooleanAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::BooleanAttribute>(Arena*);
template<> ::fmuproxy::grpc::BooleanRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::BooleanRead>(Arena*);
template<> ::fmuproxy::grpc::CanCreateInstanceFromCSRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::CanCreateInstanceFromCSRequest>(Arena*);
template<> ::fmuproxy::grpc::CanCreateInstanceFromMERequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::CanCreateInstanceFromMERequest>(Arena*);
template<> ::fmuproxy::grpc::CoSimulationAttributes* Arena::CreateMaybeMessage<::fmuproxy::grpc::CoSimulationAttributes>(Arena*);
template<> ::fmuproxy::grpc::CreateInstanceFromCSRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::CreateInstanceFromCSRequest>(Arena*);
template<> ::fmuproxy::grpc::CreateInstanceFromMERequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::CreateInstanceFromMERequest>(Arena*);
template<> ::fmuproxy::grpc::DeSerializeFMUstateRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::DeSerializeFMUstateRequest>(Arena*);
template<> ::fmuproxy::grpc::DeSerializeFMUstateResponse* Arena::CreateMaybeMessage<::fmuproxy::grpc::DeSerializeFMUstateResponse>(Arena*);
template<> ::fmuproxy::grpc::DefaultExperiment* Arena::CreateMaybeMessage<::fmuproxy::grpc::DefaultExperiment>(Arena*);
template<> ::fmuproxy::grpc::EnterInitializationModeRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::EnterInitializationModeRequest>(Arena*);
template<> ::fmuproxy::grpc::EnumerationAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::EnumerationAttribute>(Arena*);
template<> ::fmuproxy::grpc::ExitInitializationModeRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::ExitInitializationModeRequest>(Arena*);
template<> ::fmuproxy::grpc::FmuId* Arena::CreateMaybeMessage<::fmuproxy::grpc::FmuId>(Arena*);
template<> ::fmuproxy::grpc::FreeFMUstateRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::FreeFMUstateRequest>(Arena*);
template<> ::fmuproxy::grpc::GetCoSimulationAttributesRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::GetCoSimulationAttributesRequest>(Arena*);
template<> ::fmuproxy::grpc::GetDirectionalDerivativeRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::GetDirectionalDerivativeRequest>(Arena*);
template<> ::fmuproxy::grpc::GetDirectionalDerivativeResponse* Arena::CreateMaybeMessage<::fmuproxy::grpc::GetDirectionalDerivativeResponse>(Arena*);
template<> ::fmuproxy::grpc::GetFMUstateRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::GetFMUstateRequest>(Arena*);
template<> ::fmuproxy::grpc::GetFMUstateResponse* Arena::CreateMaybeMessage<::fmuproxy::grpc::GetFMUstateResponse>(Arena*);
template<> ::fmuproxy::grpc::GetModelDescriptionRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::GetModelDescriptionRequest>(Arena*);
template<> ::fmuproxy::grpc::InstanceId* Arena::CreateMaybeMessage<::fmuproxy::grpc::InstanceId>(Arena*);
template<> ::fmuproxy::grpc::IntegerAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::IntegerAttribute>(Arena*);
template<> ::fmuproxy::grpc::IntegerRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::IntegerRead>(Arena*);
template<> ::fmuproxy::grpc::ModelDescription* Arena::CreateMaybeMessage<::fmuproxy::grpc::ModelDescription>(Arena*);
template<> ::fmuproxy::grpc::ModelDescriptionXml* Arena::CreateMaybeMessage<::fmuproxy::grpc::ModelDescriptionXml>(Arena*);
template<> ::fmuproxy::grpc::ModelStructure* Arena::CreateMaybeMessage<::fmuproxy::grpc::ModelStructure>(Arena*);
template<> ::fmuproxy::grpc::ReadRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::ReadRequest>(Arena*);
template<> ::fmuproxy::grpc::RealAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::RealAttribute>(Arena*);
template<> ::fmuproxy::grpc::RealRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::RealRead>(Arena*);
template<> ::fmuproxy::grpc::ResetRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::ResetRequest>(Arena*);
template<> ::fmuproxy::grpc::ScalarVariable* Arena::CreateMaybeMessage<::fmuproxy::grpc::ScalarVariable>(Arena*);
template<> ::fmuproxy::grpc::SerializeFMUstateRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::SerializeFMUstateRequest>(Arena*);
template<> ::fmuproxy::grpc::SerializeFMUstateResponse* Arena::CreateMaybeMessage<::fmuproxy::grpc::SerializeFMUstateResponse>(Arena*);
template<> ::fmuproxy::grpc::SetFMUstateRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::SetFMUstateRequest>(Arena*);
template<> ::fmuproxy::grpc::SetupExperimentRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::SetupExperimentRequest>(Arena*);
template<> ::fmuproxy::grpc::Solver* Arena::CreateMaybeMessage<::fmuproxy::grpc::Solver>(Arena*);
template<> ::fmuproxy::grpc::StatusResponse* Arena::CreateMaybeMessage<::fmuproxy::grpc::StatusResponse>(Arena*);
template<> ::fmuproxy::grpc::StepRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::StepRequest>(Arena*);
template<> ::fmuproxy::grpc::StepResponse* Arena::CreateMaybeMessage<::fmuproxy::grpc::StepResponse>(Arena*);
template<> ::fmuproxy::grpc::StringAttribute* Arena::CreateMaybeMessage<::fmuproxy::grpc::StringAttribute>(Arena*);
template<> ::fmuproxy::grpc::StringRead* Arena::CreateMaybeMessage<::fmuproxy::grpc::StringRead>(Arena*);
template<> ::fmuproxy::grpc::TerminateRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::TerminateRequest>(Arena*);
template<> ::fmuproxy::grpc::Unknown* Arena::CreateMaybeMessage<::fmuproxy::grpc::Unknown>(Arena*);
template<> ::fmuproxy::grpc::Url* Arena::CreateMaybeMessage<::fmuproxy::grpc::Url>(Arena*);
template<> ::fmuproxy::grpc::Void* Arena::CreateMaybeMessage<::fmuproxy::grpc::Void>(Arena*);
template<> ::fmuproxy::grpc::WriteBooleanRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteBooleanRequest>(Arena*);
template<> ::fmuproxy::grpc::WriteIntegerRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteIntegerRequest>(Arena*);
template<> ::fmuproxy::grpc::WriteRealRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteRealRequest>(Arena*);
template<> ::fmuproxy::grpc::WriteStringRequest* Arena::CreateMaybeMessage<::fmuproxy::grpc::WriteStringRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace fmuproxy {
namespace grpc {

enum Status {
  OK_STATUS = 0,
  WARNING_STATUS = 1,
  DISCARD_STATUS = 2,
  ERROR_STATUS = 3,
  FATAL_STATUS = 4,
  PENDING_STATUS = 5,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Status_IsValid(int value);
const Status Status_MIN = OK_STATUS;
const Status Status_MAX = PENDING_STATUS;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
// ===================================================================

class ModelDescription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ModelDescription) */ {
 public:
  ModelDescription();
  virtual ~ModelDescription();

  ModelDescription(const ModelDescription& from);

  inline ModelDescription& operator=(const ModelDescription& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModelDescription(ModelDescription&& from) noexcept
    : ModelDescription() {
    *this = ::std::move(from);
  }

  inline ModelDescription& operator=(ModelDescription&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelDescription& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelDescription* internal_default_instance() {
    return reinterpret_cast<const ModelDescription*>(
               &_ModelDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ModelDescription* other);
  friend void swap(ModelDescription& a, ModelDescription& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModelDescription* New() const final {
    return CreateMaybeMessage<ModelDescription>(NULL);
  }

  ModelDescription* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ModelDescription>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ModelDescription& from);
  void MergeFrom(const ModelDescription& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fmuproxy.grpc.ScalarVariable model_variables = 13;
  int model_variables_size() const;
  void clear_model_variables();
  static const int kModelVariablesFieldNumber = 13;
  ::fmuproxy::grpc::ScalarVariable* mutable_model_variables(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >*
      mutable_model_variables();
  const ::fmuproxy::grpc::ScalarVariable& model_variables(int index) const;
  ::fmuproxy::grpc::ScalarVariable* add_model_variables();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >&
      model_variables() const;

  // string fmi_version = 1;
  void clear_fmi_version();
  static const int kFmiVersionFieldNumber = 1;
  const ::std::string& fmi_version() const;
  void set_fmi_version(const ::std::string& value);
  #if LANG_CXX11
  void set_fmi_version(::std::string&& value);
  #endif
  void set_fmi_version(const char* value);
  void set_fmi_version(const char* value, size_t size);
  ::std::string* mutable_fmi_version();
  ::std::string* release_fmi_version();
  void set_allocated_fmi_version(::std::string* fmi_version);

  // string guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // string model_name = 3;
  void clear_model_name();
  static const int kModelNameFieldNumber = 3;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // string license = 4;
  void clear_license();
  static const int kLicenseFieldNumber = 4;
  const ::std::string& license() const;
  void set_license(const ::std::string& value);
  #if LANG_CXX11
  void set_license(::std::string&& value);
  #endif
  void set_license(const char* value);
  void set_license(const char* value, size_t size);
  ::std::string* mutable_license();
  ::std::string* release_license();
  void set_allocated_license(::std::string* license);

  // string copyright = 5;
  void clear_copyright();
  static const int kCopyrightFieldNumber = 5;
  const ::std::string& copyright() const;
  void set_copyright(const ::std::string& value);
  #if LANG_CXX11
  void set_copyright(::std::string&& value);
  #endif
  void set_copyright(const char* value);
  void set_copyright(const char* value, size_t size);
  ::std::string* mutable_copyright();
  ::std::string* release_copyright();
  void set_allocated_copyright(::std::string* copyright);

  // string author = 6;
  void clear_author();
  static const int kAuthorFieldNumber = 6;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // string version = 7;
  void clear_version();
  static const int kVersionFieldNumber = 7;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string description = 8;
  void clear_description();
  static const int kDescriptionFieldNumber = 8;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string generation_tool = 9;
  void clear_generation_tool();
  static const int kGenerationToolFieldNumber = 9;
  const ::std::string& generation_tool() const;
  void set_generation_tool(const ::std::string& value);
  #if LANG_CXX11
  void set_generation_tool(::std::string&& value);
  #endif
  void set_generation_tool(const char* value);
  void set_generation_tool(const char* value, size_t size);
  ::std::string* mutable_generation_tool();
  ::std::string* release_generation_tool();
  void set_allocated_generation_tool(::std::string* generation_tool);

  // string generation_date_and_time = 10;
  void clear_generation_date_and_time();
  static const int kGenerationDateAndTimeFieldNumber = 10;
  const ::std::string& generation_date_and_time() const;
  void set_generation_date_and_time(const ::std::string& value);
  #if LANG_CXX11
  void set_generation_date_and_time(::std::string&& value);
  #endif
  void set_generation_date_and_time(const char* value);
  void set_generation_date_and_time(const char* value, size_t size);
  ::std::string* mutable_generation_date_and_time();
  ::std::string* release_generation_date_and_time();
  void set_allocated_generation_date_and_time(::std::string* generation_date_and_time);

  // string variable_naming_convention = 12;
  void clear_variable_naming_convention();
  static const int kVariableNamingConventionFieldNumber = 12;
  const ::std::string& variable_naming_convention() const;
  void set_variable_naming_convention(const ::std::string& value);
  #if LANG_CXX11
  void set_variable_naming_convention(::std::string&& value);
  #endif
  void set_variable_naming_convention(const char* value);
  void set_variable_naming_convention(const char* value, size_t size);
  ::std::string* mutable_variable_naming_convention();
  ::std::string* release_variable_naming_convention();
  void set_allocated_variable_naming_convention(::std::string* variable_naming_convention);

  // .fmuproxy.grpc.DefaultExperiment default_experiment = 11;
  bool has_default_experiment() const;
  void clear_default_experiment();
  static const int kDefaultExperimentFieldNumber = 11;
  private:
  const ::fmuproxy::grpc::DefaultExperiment& _internal_default_experiment() const;
  public:
  const ::fmuproxy::grpc::DefaultExperiment& default_experiment() const;
  ::fmuproxy::grpc::DefaultExperiment* release_default_experiment();
  ::fmuproxy::grpc::DefaultExperiment* mutable_default_experiment();
  void set_allocated_default_experiment(::fmuproxy::grpc::DefaultExperiment* default_experiment);

  // .fmuproxy.grpc.ModelStructure model_structure = 14;
  bool has_model_structure() const;
  void clear_model_structure();
  static const int kModelStructureFieldNumber = 14;
  private:
  const ::fmuproxy::grpc::ModelStructure& _internal_model_structure() const;
  public:
  const ::fmuproxy::grpc::ModelStructure& model_structure() const;
  ::fmuproxy::grpc::ModelStructure* release_model_structure();
  ::fmuproxy::grpc::ModelStructure* mutable_model_structure();
  void set_allocated_model_structure(::fmuproxy::grpc::ModelStructure* model_structure);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ModelDescription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable > model_variables_;
  ::google::protobuf::internal::ArenaStringPtr fmi_version_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::internal::ArenaStringPtr license_;
  ::google::protobuf::internal::ArenaStringPtr copyright_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr generation_tool_;
  ::google::protobuf::internal::ArenaStringPtr generation_date_and_time_;
  ::google::protobuf::internal::ArenaStringPtr variable_naming_convention_;
  ::fmuproxy::grpc::DefaultExperiment* default_experiment_;
  ::fmuproxy::grpc::ModelStructure* model_structure_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoSimulationAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.CoSimulationAttributes) */ {
 public:
  CoSimulationAttributes();
  virtual ~CoSimulationAttributes();

  CoSimulationAttributes(const CoSimulationAttributes& from);

  inline CoSimulationAttributes& operator=(const CoSimulationAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoSimulationAttributes(CoSimulationAttributes&& from) noexcept
    : CoSimulationAttributes() {
    *this = ::std::move(from);
  }

  inline CoSimulationAttributes& operator=(CoSimulationAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoSimulationAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoSimulationAttributes* internal_default_instance() {
    return reinterpret_cast<const CoSimulationAttributes*>(
               &_CoSimulationAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CoSimulationAttributes* other);
  friend void swap(CoSimulationAttributes& a, CoSimulationAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoSimulationAttributes* New() const final {
    return CreateMaybeMessage<CoSimulationAttributes>(NULL);
  }

  CoSimulationAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CoSimulationAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CoSimulationAttributes& from);
  void MergeFrom(const CoSimulationAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoSimulationAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string model_identifier = 1;
  void clear_model_identifier();
  static const int kModelIdentifierFieldNumber = 1;
  const ::std::string& model_identifier() const;
  void set_model_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_model_identifier(::std::string&& value);
  #endif
  void set_model_identifier(const char* value);
  void set_model_identifier(const char* value, size_t size);
  ::std::string* mutable_model_identifier();
  ::std::string* release_model_identifier();
  void set_allocated_model_identifier(::std::string* model_identifier);

  // bool can_get_and_set_FMUstate = 2;
  void clear_can_get_and_set_fmustate();
  static const int kCanGetAndSetFMUstateFieldNumber = 2;
  bool can_get_and_set_fmustate() const;
  void set_can_get_and_set_fmustate(bool value);

  // bool can_serialize_FMUstate = 3;
  void clear_can_serialize_fmustate();
  static const int kCanSerializeFMUstateFieldNumber = 3;
  bool can_serialize_fmustate() const;
  void set_can_serialize_fmustate(bool value);

  // bool provides_directional_derivative = 4;
  void clear_provides_directional_derivative();
  static const int kProvidesDirectionalDerivativeFieldNumber = 4;
  bool provides_directional_derivative() const;
  void set_provides_directional_derivative(bool value);

  // bool can_handle_variable_communication_step_size = 5;
  void clear_can_handle_variable_communication_step_size();
  static const int kCanHandleVariableCommunicationStepSizeFieldNumber = 5;
  bool can_handle_variable_communication_step_size() const;
  void set_can_handle_variable_communication_step_size(bool value);

  // bool can_interpolate_inputs = 6;
  void clear_can_interpolate_inputs();
  static const int kCanInterpolateInputsFieldNumber = 6;
  bool can_interpolate_inputs() const;
  void set_can_interpolate_inputs(bool value);

  // uint32 max_output_derivative_order = 7;
  void clear_max_output_derivative_order();
  static const int kMaxOutputDerivativeOrderFieldNumber = 7;
  ::google::protobuf::uint32 max_output_derivative_order() const;
  void set_max_output_derivative_order(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.CoSimulationAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr model_identifier_;
  bool can_get_and_set_fmustate_;
  bool can_serialize_fmustate_;
  bool provides_directional_derivative_;
  bool can_handle_variable_communication_step_size_;
  bool can_interpolate_inputs_;
  ::google::protobuf::uint32 max_output_derivative_order_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntegerAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.IntegerAttribute) */ {
 public:
  IntegerAttribute();
  virtual ~IntegerAttribute();

  IntegerAttribute(const IntegerAttribute& from);

  inline IntegerAttribute& operator=(const IntegerAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntegerAttribute(IntegerAttribute&& from) noexcept
    : IntegerAttribute() {
    *this = ::std::move(from);
  }

  inline IntegerAttribute& operator=(IntegerAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntegerAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntegerAttribute* internal_default_instance() {
    return reinterpret_cast<const IntegerAttribute*>(
               &_IntegerAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IntegerAttribute* other);
  friend void swap(IntegerAttribute& a, IntegerAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntegerAttribute* New() const final {
    return CreateMaybeMessage<IntegerAttribute>(NULL);
  }

  IntegerAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntegerAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntegerAttribute& from);
  void MergeFrom(const IntegerAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntegerAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string quantity = 4;
  void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  const ::std::string& quantity() const;
  void set_quantity(const ::std::string& value);
  #if LANG_CXX11
  void set_quantity(::std::string&& value);
  #endif
  void set_quantity(const char* value);
  void set_quantity(const char* value, size_t size);
  ::std::string* mutable_quantity();
  ::std::string* release_quantity();
  void set_allocated_quantity(::std::string* quantity);

  // int32 min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  ::google::protobuf::int32 min() const;
  void set_min(::google::protobuf::int32 value);

  // int32 max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  ::google::protobuf::int32 max() const;
  void set_max(::google::protobuf::int32 value);

  // int32 start = 3;
  void clear_start();
  static const int kStartFieldNumber = 3;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.IntegerAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr quantity_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 max_;
  ::google::protobuf::int32 start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RealAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.RealAttribute) */ {
 public:
  RealAttribute();
  virtual ~RealAttribute();

  RealAttribute(const RealAttribute& from);

  inline RealAttribute& operator=(const RealAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RealAttribute(RealAttribute&& from) noexcept
    : RealAttribute() {
    *this = ::std::move(from);
  }

  inline RealAttribute& operator=(RealAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RealAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RealAttribute* internal_default_instance() {
    return reinterpret_cast<const RealAttribute*>(
               &_RealAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RealAttribute* other);
  friend void swap(RealAttribute& a, RealAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RealAttribute* New() const final {
    return CreateMaybeMessage<RealAttribute>(NULL);
  }

  RealAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RealAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RealAttribute& from);
  void MergeFrom(const RealAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string quantity = 4;
  void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  const ::std::string& quantity() const;
  void set_quantity(const ::std::string& value);
  #if LANG_CXX11
  void set_quantity(::std::string&& value);
  #endif
  void set_quantity(const char* value);
  void set_quantity(const char* value, size_t size);
  ::std::string* mutable_quantity();
  ::std::string* release_quantity();
  void set_allocated_quantity(::std::string* quantity);

  // double min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  double min() const;
  void set_min(double value);

  // double max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  double max() const;
  void set_max(double value);

  // double start = 3;
  void clear_start();
  static const int kStartFieldNumber = 3;
  double start() const;
  void set_start(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.RealAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr quantity_;
  double min_;
  double max_;
  double start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StringAttribute) */ {
 public:
  StringAttribute();
  virtual ~StringAttribute();

  StringAttribute(const StringAttribute& from);

  inline StringAttribute& operator=(const StringAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringAttribute(StringAttribute&& from) noexcept
    : StringAttribute() {
    *this = ::std::move(from);
  }

  inline StringAttribute& operator=(StringAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringAttribute* internal_default_instance() {
    return reinterpret_cast<const StringAttribute*>(
               &_StringAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StringAttribute* other);
  friend void swap(StringAttribute& a, StringAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringAttribute* New() const final {
    return CreateMaybeMessage<StringAttribute>(NULL);
  }

  StringAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringAttribute& from);
  void MergeFrom(const StringAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  const ::std::string& start() const;
  void set_start(const ::std::string& value);
  #if LANG_CXX11
  void set_start(::std::string&& value);
  #endif
  void set_start(const char* value);
  void set_start(const char* value, size_t size);
  ::std::string* mutable_start();
  ::std::string* release_start();
  void set_allocated_start(::std::string* start);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StringAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BooleanAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BooleanAttribute) */ {
 public:
  BooleanAttribute();
  virtual ~BooleanAttribute();

  BooleanAttribute(const BooleanAttribute& from);

  inline BooleanAttribute& operator=(const BooleanAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BooleanAttribute(BooleanAttribute&& from) noexcept
    : BooleanAttribute() {
    *this = ::std::move(from);
  }

  inline BooleanAttribute& operator=(BooleanAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BooleanAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BooleanAttribute* internal_default_instance() {
    return reinterpret_cast<const BooleanAttribute*>(
               &_BooleanAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(BooleanAttribute* other);
  friend void swap(BooleanAttribute& a, BooleanAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BooleanAttribute* New() const final {
    return CreateMaybeMessage<BooleanAttribute>(NULL);
  }

  BooleanAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BooleanAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BooleanAttribute& from);
  void MergeFrom(const BooleanAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BooleanAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  bool start() const;
  void set_start(bool value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BooleanAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnumerationAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.EnumerationAttribute) */ {
 public:
  EnumerationAttribute();
  virtual ~EnumerationAttribute();

  EnumerationAttribute(const EnumerationAttribute& from);

  inline EnumerationAttribute& operator=(const EnumerationAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnumerationAttribute(EnumerationAttribute&& from) noexcept
    : EnumerationAttribute() {
    *this = ::std::move(from);
  }

  inline EnumerationAttribute& operator=(EnumerationAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnumerationAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnumerationAttribute* internal_default_instance() {
    return reinterpret_cast<const EnumerationAttribute*>(
               &_EnumerationAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(EnumerationAttribute* other);
  friend void swap(EnumerationAttribute& a, EnumerationAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnumerationAttribute* New() const final {
    return CreateMaybeMessage<EnumerationAttribute>(NULL);
  }

  EnumerationAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnumerationAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnumerationAttribute& from);
  void MergeFrom(const EnumerationAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnumerationAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string quantity = 4;
  void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  const ::std::string& quantity() const;
  void set_quantity(const ::std::string& value);
  #if LANG_CXX11
  void set_quantity(::std::string&& value);
  #endif
  void set_quantity(const char* value);
  void set_quantity(const char* value, size_t size);
  ::std::string* mutable_quantity();
  ::std::string* release_quantity();
  void set_allocated_quantity(::std::string* quantity);

  // int32 min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  ::google::protobuf::int32 min() const;
  void set_min(::google::protobuf::int32 value);

  // int32 max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  ::google::protobuf::int32 max() const;
  void set_max(::google::protobuf::int32 value);

  // int32 start = 3;
  void clear_start();
  static const int kStartFieldNumber = 3;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.EnumerationAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr quantity_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 max_;
  ::google::protobuf::int32 start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScalarVariable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ScalarVariable) */ {
 public:
  ScalarVariable();
  virtual ~ScalarVariable();

  ScalarVariable(const ScalarVariable& from);

  inline ScalarVariable& operator=(const ScalarVariable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScalarVariable(ScalarVariable&& from) noexcept
    : ScalarVariable() {
    *this = ::std::move(from);
  }

  inline ScalarVariable& operator=(ScalarVariable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScalarVariable& default_instance();

  enum AttributeCase {
    kIntegerAttribute = 10,
    kRealAttribute = 11,
    kStringAttribute = 12,
    kBooleanAttribute = 13,
    kEnumerationAttribute = 14,
    ATTRIBUTE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarVariable* internal_default_instance() {
    return reinterpret_cast<const ScalarVariable*>(
               &_ScalarVariable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ScalarVariable* other);
  friend void swap(ScalarVariable& a, ScalarVariable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScalarVariable* New() const final {
    return CreateMaybeMessage<ScalarVariable>(NULL);
  }

  ScalarVariable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScalarVariable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScalarVariable& from);
  void MergeFrom(const ScalarVariable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarVariable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string initial = 4;
  void clear_initial();
  static const int kInitialFieldNumber = 4;
  const ::std::string& initial() const;
  void set_initial(const ::std::string& value);
  #if LANG_CXX11
  void set_initial(::std::string&& value);
  #endif
  void set_initial(const char* value);
  void set_initial(const char* value, size_t size);
  ::std::string* mutable_initial();
  ::std::string* release_initial();
  void set_allocated_initial(::std::string* initial);

  // string causality = 5;
  void clear_causality();
  static const int kCausalityFieldNumber = 5;
  const ::std::string& causality() const;
  void set_causality(const ::std::string& value);
  #if LANG_CXX11
  void set_causality(::std::string&& value);
  #endif
  void set_causality(const char* value);
  void set_causality(const char* value, size_t size);
  ::std::string* mutable_causality();
  ::std::string* release_causality();
  void set_allocated_causality(::std::string* causality);

  // string variability = 6;
  void clear_variability();
  static const int kVariabilityFieldNumber = 6;
  const ::std::string& variability() const;
  void set_variability(const ::std::string& value);
  #if LANG_CXX11
  void set_variability(::std::string&& value);
  #endif
  void set_variability(const char* value);
  void set_variability(const char* value, size_t size);
  ::std::string* mutable_variability();
  ::std::string* release_variability();
  void set_allocated_variability(::std::string* variability);

  // uint64 value_reference = 1;
  void clear_value_reference();
  static const int kValueReferenceFieldNumber = 1;
  ::google::protobuf::uint64 value_reference() const;
  void set_value_reference(::google::protobuf::uint64 value);

  // .fmuproxy.grpc.IntegerAttribute integer_attribute = 10;
  bool has_integer_attribute() const;
  void clear_integer_attribute();
  static const int kIntegerAttributeFieldNumber = 10;
  private:
  const ::fmuproxy::grpc::IntegerAttribute& _internal_integer_attribute() const;
  public:
  const ::fmuproxy::grpc::IntegerAttribute& integer_attribute() const;
  ::fmuproxy::grpc::IntegerAttribute* release_integer_attribute();
  ::fmuproxy::grpc::IntegerAttribute* mutable_integer_attribute();
  void set_allocated_integer_attribute(::fmuproxy::grpc::IntegerAttribute* integer_attribute);

  // .fmuproxy.grpc.RealAttribute real_attribute = 11;
  bool has_real_attribute() const;
  void clear_real_attribute();
  static const int kRealAttributeFieldNumber = 11;
  private:
  const ::fmuproxy::grpc::RealAttribute& _internal_real_attribute() const;
  public:
  const ::fmuproxy::grpc::RealAttribute& real_attribute() const;
  ::fmuproxy::grpc::RealAttribute* release_real_attribute();
  ::fmuproxy::grpc::RealAttribute* mutable_real_attribute();
  void set_allocated_real_attribute(::fmuproxy::grpc::RealAttribute* real_attribute);

  // .fmuproxy.grpc.StringAttribute string_attribute = 12;
  bool has_string_attribute() const;
  void clear_string_attribute();
  static const int kStringAttributeFieldNumber = 12;
  private:
  const ::fmuproxy::grpc::StringAttribute& _internal_string_attribute() const;
  public:
  const ::fmuproxy::grpc::StringAttribute& string_attribute() const;
  ::fmuproxy::grpc::StringAttribute* release_string_attribute();
  ::fmuproxy::grpc::StringAttribute* mutable_string_attribute();
  void set_allocated_string_attribute(::fmuproxy::grpc::StringAttribute* string_attribute);

  // .fmuproxy.grpc.BooleanAttribute boolean_attribute = 13;
  bool has_boolean_attribute() const;
  void clear_boolean_attribute();
  static const int kBooleanAttributeFieldNumber = 13;
  private:
  const ::fmuproxy::grpc::BooleanAttribute& _internal_boolean_attribute() const;
  public:
  const ::fmuproxy::grpc::BooleanAttribute& boolean_attribute() const;
  ::fmuproxy::grpc::BooleanAttribute* release_boolean_attribute();
  ::fmuproxy::grpc::BooleanAttribute* mutable_boolean_attribute();
  void set_allocated_boolean_attribute(::fmuproxy::grpc::BooleanAttribute* boolean_attribute);

  // .fmuproxy.grpc.EnumerationAttribute enumeration_attribute = 14;
  bool has_enumeration_attribute() const;
  void clear_enumeration_attribute();
  static const int kEnumerationAttributeFieldNumber = 14;
  private:
  const ::fmuproxy::grpc::EnumerationAttribute& _internal_enumeration_attribute() const;
  public:
  const ::fmuproxy::grpc::EnumerationAttribute& enumeration_attribute() const;
  ::fmuproxy::grpc::EnumerationAttribute* release_enumeration_attribute();
  ::fmuproxy::grpc::EnumerationAttribute* mutable_enumeration_attribute();
  void set_allocated_enumeration_attribute(::fmuproxy::grpc::EnumerationAttribute* enumeration_attribute);

  void clear_attribute();
  AttributeCase attribute_case() const;
  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ScalarVariable)
 private:
  void set_has_integer_attribute();
  void set_has_real_attribute();
  void set_has_string_attribute();
  void set_has_boolean_attribute();
  void set_has_enumeration_attribute();

  inline bool has_attribute() const;
  inline void clear_has_attribute();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr initial_;
  ::google::protobuf::internal::ArenaStringPtr causality_;
  ::google::protobuf::internal::ArenaStringPtr variability_;
  ::google::protobuf::uint64 value_reference_;
  union AttributeUnion {
    AttributeUnion() {}
    ::fmuproxy::grpc::IntegerAttribute* integer_attribute_;
    ::fmuproxy::grpc::RealAttribute* real_attribute_;
    ::fmuproxy::grpc::StringAttribute* string_attribute_;
    ::fmuproxy::grpc::BooleanAttribute* boolean_attribute_;
    ::fmuproxy::grpc::EnumerationAttribute* enumeration_attribute_;
  } attribute_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DefaultExperiment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.DefaultExperiment) */ {
 public:
  DefaultExperiment();
  virtual ~DefaultExperiment();

  DefaultExperiment(const DefaultExperiment& from);

  inline DefaultExperiment& operator=(const DefaultExperiment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DefaultExperiment(DefaultExperiment&& from) noexcept
    : DefaultExperiment() {
    *this = ::std::move(from);
  }

  inline DefaultExperiment& operator=(DefaultExperiment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DefaultExperiment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DefaultExperiment* internal_default_instance() {
    return reinterpret_cast<const DefaultExperiment*>(
               &_DefaultExperiment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DefaultExperiment* other);
  friend void swap(DefaultExperiment& a, DefaultExperiment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DefaultExperiment* New() const final {
    return CreateMaybeMessage<DefaultExperiment>(NULL);
  }

  DefaultExperiment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DefaultExperiment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DefaultExperiment& from);
  void MergeFrom(const DefaultExperiment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DefaultExperiment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start_time = 1;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  double start_time() const;
  void set_start_time(double value);

  // double stop_time = 2;
  void clear_stop_time();
  static const int kStopTimeFieldNumber = 2;
  double stop_time() const;
  void set_stop_time(double value);

  // double tolerance = 3;
  void clear_tolerance();
  static const int kToleranceFieldNumber = 3;
  double tolerance() const;
  void set_tolerance(double value);

  // double step_size = 4;
  void clear_step_size();
  static const int kStepSizeFieldNumber = 4;
  double step_size() const;
  void set_step_size(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.DefaultExperiment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_time_;
  double stop_time_;
  double tolerance_;
  double step_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Unknown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Unknown) */ {
 public:
  Unknown();
  virtual ~Unknown();

  Unknown(const Unknown& from);

  inline Unknown& operator=(const Unknown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unknown(Unknown&& from) noexcept
    : Unknown() {
    *this = ::std::move(from);
  }

  inline Unknown& operator=(Unknown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Unknown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unknown* internal_default_instance() {
    return reinterpret_cast<const Unknown*>(
               &_Unknown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Unknown* other);
  friend void swap(Unknown& a, Unknown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unknown* New() const final {
    return CreateMaybeMessage<Unknown>(NULL);
  }

  Unknown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unknown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Unknown& from);
  void MergeFrom(const Unknown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Unknown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 dependencies = 2;
  int dependencies_size() const;
  void clear_dependencies();
  static const int kDependenciesFieldNumber = 2;
  ::google::protobuf::uint32 dependencies(int index) const;
  void set_dependencies(int index, ::google::protobuf::uint32 value);
  void add_dependencies(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dependencies() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dependencies();

  // repeated string dependencies_kind = 3;
  int dependencies_kind_size() const;
  void clear_dependencies_kind();
  static const int kDependenciesKindFieldNumber = 3;
  const ::std::string& dependencies_kind(int index) const;
  ::std::string* mutable_dependencies_kind(int index);
  void set_dependencies_kind(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_dependencies_kind(int index, ::std::string&& value);
  #endif
  void set_dependencies_kind(int index, const char* value);
  void set_dependencies_kind(int index, const char* value, size_t size);
  ::std::string* add_dependencies_kind();
  void add_dependencies_kind(const ::std::string& value);
  #if LANG_CXX11
  void add_dependencies_kind(::std::string&& value);
  #endif
  void add_dependencies_kind(const char* value);
  void add_dependencies_kind(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dependencies_kind() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dependencies_kind();

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Unknown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dependencies_;
  mutable int _dependencies_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dependencies_kind_;
  ::google::protobuf::uint32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModelStructure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ModelStructure) */ {
 public:
  ModelStructure();
  virtual ~ModelStructure();

  ModelStructure(const ModelStructure& from);

  inline ModelStructure& operator=(const ModelStructure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModelStructure(ModelStructure&& from) noexcept
    : ModelStructure() {
    *this = ::std::move(from);
  }

  inline ModelStructure& operator=(ModelStructure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelStructure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelStructure* internal_default_instance() {
    return reinterpret_cast<const ModelStructure*>(
               &_ModelStructure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ModelStructure* other);
  friend void swap(ModelStructure& a, ModelStructure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModelStructure* New() const final {
    return CreateMaybeMessage<ModelStructure>(NULL);
  }

  ModelStructure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ModelStructure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ModelStructure& from);
  void MergeFrom(const ModelStructure& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelStructure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fmuproxy.grpc.Unknown outputs = 1;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 1;
  ::fmuproxy::grpc::Unknown* mutable_outputs(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
      mutable_outputs();
  const ::fmuproxy::grpc::Unknown& outputs(int index) const;
  ::fmuproxy::grpc::Unknown* add_outputs();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
      outputs() const;

  // repeated .fmuproxy.grpc.Unknown derivatives = 2;
  int derivatives_size() const;
  void clear_derivatives();
  static const int kDerivativesFieldNumber = 2;
  ::fmuproxy::grpc::Unknown* mutable_derivatives(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
      mutable_derivatives();
  const ::fmuproxy::grpc::Unknown& derivatives(int index) const;
  ::fmuproxy::grpc::Unknown* add_derivatives();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
      derivatives() const;

  // repeated .fmuproxy.grpc.Unknown initial_unknowns = 3;
  int initial_unknowns_size() const;
  void clear_initial_unknowns();
  static const int kInitialUnknownsFieldNumber = 3;
  ::fmuproxy::grpc::Unknown* mutable_initial_unknowns(int index);
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
      mutable_initial_unknowns();
  const ::fmuproxy::grpc::Unknown& initial_unknowns(int index) const;
  ::fmuproxy::grpc::Unknown* add_initial_unknowns();
  const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
      initial_unknowns() const;

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ModelStructure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown > outputs_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown > derivatives_;
  ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown > initial_unknowns_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FmuId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.FmuId) */ {
 public:
  FmuId();
  virtual ~FmuId();

  FmuId(const FmuId& from);

  inline FmuId& operator=(const FmuId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FmuId(FmuId&& from) noexcept
    : FmuId() {
    *this = ::std::move(from);
  }

  inline FmuId& operator=(FmuId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FmuId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FmuId* internal_default_instance() {
    return reinterpret_cast<const FmuId*>(
               &_FmuId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(FmuId* other);
  friend void swap(FmuId& a, FmuId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FmuId* New() const final {
    return CreateMaybeMessage<FmuId>(NULL);
  }

  FmuId* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FmuId>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FmuId& from);
  void MergeFrom(const FmuId& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FmuId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.FmuId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstanceId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.InstanceId) */ {
 public:
  InstanceId();
  virtual ~InstanceId();

  InstanceId(const InstanceId& from);

  inline InstanceId& operator=(const InstanceId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstanceId(InstanceId&& from) noexcept
    : InstanceId() {
    *this = ::std::move(from);
  }

  inline InstanceId& operator=(InstanceId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstanceId* internal_default_instance() {
    return reinterpret_cast<const InstanceId*>(
               &_InstanceId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(InstanceId* other);
  friend void swap(InstanceId& a, InstanceId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstanceId* New() const final {
    return CreateMaybeMessage<InstanceId>(NULL);
  }

  InstanceId* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstanceId>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstanceId& from);
  void MergeFrom(const InstanceId& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstanceId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.InstanceId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModelDescriptionXml : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ModelDescriptionXml) */ {
 public:
  ModelDescriptionXml();
  virtual ~ModelDescriptionXml();

  ModelDescriptionXml(const ModelDescriptionXml& from);

  inline ModelDescriptionXml& operator=(const ModelDescriptionXml& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModelDescriptionXml(ModelDescriptionXml&& from) noexcept
    : ModelDescriptionXml() {
    *this = ::std::move(from);
  }

  inline ModelDescriptionXml& operator=(ModelDescriptionXml&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelDescriptionXml& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelDescriptionXml* internal_default_instance() {
    return reinterpret_cast<const ModelDescriptionXml*>(
               &_ModelDescriptionXml_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ModelDescriptionXml* other);
  friend void swap(ModelDescriptionXml& a, ModelDescriptionXml& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModelDescriptionXml* New() const final {
    return CreateMaybeMessage<ModelDescriptionXml>(NULL);
  }

  ModelDescriptionXml* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ModelDescriptionXml>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ModelDescriptionXml& from);
  void MergeFrom(const ModelDescriptionXml& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelDescriptionXml* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string xml = 1;
  void clear_xml();
  static const int kXmlFieldNumber = 1;
  const ::std::string& xml() const;
  void set_xml(const ::std::string& value);
  #if LANG_CXX11
  void set_xml(::std::string&& value);
  #endif
  void set_xml(const char* value);
  void set_xml(const char* value, size_t size);
  ::std::string* mutable_xml();
  ::std::string* release_xml();
  void set_allocated_xml(::std::string* xml);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ModelDescriptionXml)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr xml_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StatusResponse) */ {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusResponse(StatusResponse&& from) noexcept
    : StatusResponse() {
    *this = ::std::move(from);
  }

  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
               &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(StatusResponse* other);
  friend void swap(StatusResponse& a, StatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusResponse* New() const final {
    return CreateMaybeMessage<StatusResponse>(NULL);
  }

  StatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .fmuproxy.grpc.Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StatusResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StepResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StepResponse) */ {
 public:
  StepResponse();
  virtual ~StepResponse();

  StepResponse(const StepResponse& from);

  inline StepResponse& operator=(const StepResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StepResponse(StepResponse&& from) noexcept
    : StepResponse() {
    *this = ::std::move(from);
  }

  inline StepResponse& operator=(StepResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StepResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepResponse* internal_default_instance() {
    return reinterpret_cast<const StepResponse*>(
               &_StepResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(StepResponse* other);
  friend void swap(StepResponse& a, StepResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StepResponse* New() const final {
    return CreateMaybeMessage<StepResponse>(NULL);
  }

  StepResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StepResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StepResponse& from);
  void MergeFrom(const StepResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double simulation_time = 2;
  void clear_simulation_time();
  static const int kSimulationTimeFieldNumber = 2;
  double simulation_time() const;
  void set_simulation_time(double value);

  // .fmuproxy.grpc.Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StepResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double simulation_time_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateInstanceFromCSRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.CreateInstanceFromCSRequest) */ {
 public:
  CreateInstanceFromCSRequest();
  virtual ~CreateInstanceFromCSRequest();

  CreateInstanceFromCSRequest(const CreateInstanceFromCSRequest& from);

  inline CreateInstanceFromCSRequest& operator=(const CreateInstanceFromCSRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateInstanceFromCSRequest(CreateInstanceFromCSRequest&& from) noexcept
    : CreateInstanceFromCSRequest() {
    *this = ::std::move(from);
  }

  inline CreateInstanceFromCSRequest& operator=(CreateInstanceFromCSRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateInstanceFromCSRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateInstanceFromCSRequest* internal_default_instance() {
    return reinterpret_cast<const CreateInstanceFromCSRequest*>(
               &_CreateInstanceFromCSRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CreateInstanceFromCSRequest* other);
  friend void swap(CreateInstanceFromCSRequest& a, CreateInstanceFromCSRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateInstanceFromCSRequest* New() const final {
    return CreateMaybeMessage<CreateInstanceFromCSRequest>(NULL);
  }

  CreateInstanceFromCSRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateInstanceFromCSRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateInstanceFromCSRequest& from);
  void MergeFrom(const CreateInstanceFromCSRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateInstanceFromCSRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  const ::std::string& fmu_id() const;
  void set_fmu_id(const ::std::string& value);
  #if LANG_CXX11
  void set_fmu_id(::std::string&& value);
  #endif
  void set_fmu_id(const char* value);
  void set_fmu_id(const char* value, size_t size);
  ::std::string* mutable_fmu_id();
  ::std::string* release_fmu_id();
  void set_allocated_fmu_id(::std::string* fmu_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.CreateInstanceFromCSRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateInstanceFromMERequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.CreateInstanceFromMERequest) */ {
 public:
  CreateInstanceFromMERequest();
  virtual ~CreateInstanceFromMERequest();

  CreateInstanceFromMERequest(const CreateInstanceFromMERequest& from);

  inline CreateInstanceFromMERequest& operator=(const CreateInstanceFromMERequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateInstanceFromMERequest(CreateInstanceFromMERequest&& from) noexcept
    : CreateInstanceFromMERequest() {
    *this = ::std::move(from);
  }

  inline CreateInstanceFromMERequest& operator=(CreateInstanceFromMERequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateInstanceFromMERequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateInstanceFromMERequest* internal_default_instance() {
    return reinterpret_cast<const CreateInstanceFromMERequest*>(
               &_CreateInstanceFromMERequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CreateInstanceFromMERequest* other);
  friend void swap(CreateInstanceFromMERequest& a, CreateInstanceFromMERequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateInstanceFromMERequest* New() const final {
    return CreateMaybeMessage<CreateInstanceFromMERequest>(NULL);
  }

  CreateInstanceFromMERequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateInstanceFromMERequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateInstanceFromMERequest& from);
  void MergeFrom(const CreateInstanceFromMERequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateInstanceFromMERequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  const ::std::string& fmu_id() const;
  void set_fmu_id(const ::std::string& value);
  #if LANG_CXX11
  void set_fmu_id(::std::string&& value);
  #endif
  void set_fmu_id(const char* value);
  void set_fmu_id(const char* value, size_t size);
  ::std::string* mutable_fmu_id();
  ::std::string* release_fmu_id();
  void set_allocated_fmu_id(::std::string* fmu_id);

  // .fmuproxy.grpc.Solver solver = 2;
  bool has_solver() const;
  void clear_solver();
  static const int kSolverFieldNumber = 2;
  private:
  const ::fmuproxy::grpc::Solver& _internal_solver() const;
  public:
  const ::fmuproxy::grpc::Solver& solver() const;
  ::fmuproxy::grpc::Solver* release_solver();
  ::fmuproxy::grpc::Solver* mutable_solver();
  void set_allocated_solver(::fmuproxy::grpc::Solver* solver);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.CreateInstanceFromMERequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fmu_id_;
  ::fmuproxy::grpc::Solver* solver_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetModelDescriptionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.GetModelDescriptionRequest) */ {
 public:
  GetModelDescriptionRequest();
  virtual ~GetModelDescriptionRequest();

  GetModelDescriptionRequest(const GetModelDescriptionRequest& from);

  inline GetModelDescriptionRequest& operator=(const GetModelDescriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetModelDescriptionRequest(GetModelDescriptionRequest&& from) noexcept
    : GetModelDescriptionRequest() {
    *this = ::std::move(from);
  }

  inline GetModelDescriptionRequest& operator=(GetModelDescriptionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModelDescriptionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetModelDescriptionRequest* internal_default_instance() {
    return reinterpret_cast<const GetModelDescriptionRequest*>(
               &_GetModelDescriptionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(GetModelDescriptionRequest* other);
  friend void swap(GetModelDescriptionRequest& a, GetModelDescriptionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetModelDescriptionRequest* New() const final {
    return CreateMaybeMessage<GetModelDescriptionRequest>(NULL);
  }

  GetModelDescriptionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetModelDescriptionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetModelDescriptionRequest& from);
  void MergeFrom(const GetModelDescriptionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetModelDescriptionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  const ::std::string& fmu_id() const;
  void set_fmu_id(const ::std::string& value);
  #if LANG_CXX11
  void set_fmu_id(::std::string&& value);
  #endif
  void set_fmu_id(const char* value);
  void set_fmu_id(const char* value, size_t size);
  ::std::string* mutable_fmu_id();
  ::std::string* release_fmu_id();
  void set_allocated_fmu_id(::std::string* fmu_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.GetModelDescriptionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCoSimulationAttributesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.GetCoSimulationAttributesRequest) */ {
 public:
  GetCoSimulationAttributesRequest();
  virtual ~GetCoSimulationAttributesRequest();

  GetCoSimulationAttributesRequest(const GetCoSimulationAttributesRequest& from);

  inline GetCoSimulationAttributesRequest& operator=(const GetCoSimulationAttributesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCoSimulationAttributesRequest(GetCoSimulationAttributesRequest&& from) noexcept
    : GetCoSimulationAttributesRequest() {
    *this = ::std::move(from);
  }

  inline GetCoSimulationAttributesRequest& operator=(GetCoSimulationAttributesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCoSimulationAttributesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCoSimulationAttributesRequest* internal_default_instance() {
    return reinterpret_cast<const GetCoSimulationAttributesRequest*>(
               &_GetCoSimulationAttributesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(GetCoSimulationAttributesRequest* other);
  friend void swap(GetCoSimulationAttributesRequest& a, GetCoSimulationAttributesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCoSimulationAttributesRequest* New() const final {
    return CreateMaybeMessage<GetCoSimulationAttributesRequest>(NULL);
  }

  GetCoSimulationAttributesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCoSimulationAttributesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCoSimulationAttributesRequest& from);
  void MergeFrom(const GetCoSimulationAttributesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCoSimulationAttributesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.GetCoSimulationAttributesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetupExperimentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.SetupExperimentRequest) */ {
 public:
  SetupExperimentRequest();
  virtual ~SetupExperimentRequest();

  SetupExperimentRequest(const SetupExperimentRequest& from);

  inline SetupExperimentRequest& operator=(const SetupExperimentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetupExperimentRequest(SetupExperimentRequest&& from) noexcept
    : SetupExperimentRequest() {
    *this = ::std::move(from);
  }

  inline SetupExperimentRequest& operator=(SetupExperimentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupExperimentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupExperimentRequest* internal_default_instance() {
    return reinterpret_cast<const SetupExperimentRequest*>(
               &_SetupExperimentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(SetupExperimentRequest* other);
  friend void swap(SetupExperimentRequest& a, SetupExperimentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetupExperimentRequest* New() const final {
    return CreateMaybeMessage<SetupExperimentRequest>(NULL);
  }

  SetupExperimentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetupExperimentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetupExperimentRequest& from);
  void MergeFrom(const SetupExperimentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupExperimentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // double start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  double start() const;
  void set_start(double value);

  // double stop = 3;
  void clear_stop();
  static const int kStopFieldNumber = 3;
  double stop() const;
  void set_stop(double value);

  // double tolerance = 4;
  void clear_tolerance();
  static const int kToleranceFieldNumber = 4;
  double tolerance() const;
  void set_tolerance(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.SetupExperimentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  double start_;
  double stop_;
  double tolerance_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterInitializationModeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.EnterInitializationModeRequest) */ {
 public:
  EnterInitializationModeRequest();
  virtual ~EnterInitializationModeRequest();

  EnterInitializationModeRequest(const EnterInitializationModeRequest& from);

  inline EnterInitializationModeRequest& operator=(const EnterInitializationModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterInitializationModeRequest(EnterInitializationModeRequest&& from) noexcept
    : EnterInitializationModeRequest() {
    *this = ::std::move(from);
  }

  inline EnterInitializationModeRequest& operator=(EnterInitializationModeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterInitializationModeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterInitializationModeRequest* internal_default_instance() {
    return reinterpret_cast<const EnterInitializationModeRequest*>(
               &_EnterInitializationModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(EnterInitializationModeRequest* other);
  friend void swap(EnterInitializationModeRequest& a, EnterInitializationModeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterInitializationModeRequest* New() const final {
    return CreateMaybeMessage<EnterInitializationModeRequest>(NULL);
  }

  EnterInitializationModeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnterInitializationModeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnterInitializationModeRequest& from);
  void MergeFrom(const EnterInitializationModeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnterInitializationModeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.EnterInitializationModeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitInitializationModeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ExitInitializationModeRequest) */ {
 public:
  ExitInitializationModeRequest();
  virtual ~ExitInitializationModeRequest();

  ExitInitializationModeRequest(const ExitInitializationModeRequest& from);

  inline ExitInitializationModeRequest& operator=(const ExitInitializationModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitInitializationModeRequest(ExitInitializationModeRequest&& from) noexcept
    : ExitInitializationModeRequest() {
    *this = ::std::move(from);
  }

  inline ExitInitializationModeRequest& operator=(ExitInitializationModeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitInitializationModeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitInitializationModeRequest* internal_default_instance() {
    return reinterpret_cast<const ExitInitializationModeRequest*>(
               &_ExitInitializationModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(ExitInitializationModeRequest* other);
  friend void swap(ExitInitializationModeRequest& a, ExitInitializationModeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitInitializationModeRequest* New() const final {
    return CreateMaybeMessage<ExitInitializationModeRequest>(NULL);
  }

  ExitInitializationModeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExitInitializationModeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExitInitializationModeRequest& from);
  void MergeFrom(const ExitInitializationModeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExitInitializationModeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ExitInitializationModeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StepRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StepRequest) */ {
 public:
  StepRequest();
  virtual ~StepRequest();

  StepRequest(const StepRequest& from);

  inline StepRequest& operator=(const StepRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StepRequest(StepRequest&& from) noexcept
    : StepRequest() {
    *this = ::std::move(from);
  }

  inline StepRequest& operator=(StepRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StepRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepRequest* internal_default_instance() {
    return reinterpret_cast<const StepRequest*>(
               &_StepRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(StepRequest* other);
  friend void swap(StepRequest& a, StepRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StepRequest* New() const final {
    return CreateMaybeMessage<StepRequest>(NULL);
  }

  StepRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StepRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StepRequest& from);
  void MergeFrom(const StepRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // double step_size = 2;
  void clear_step_size();
  static const int kStepSizeFieldNumber = 2;
  double step_size() const;
  void set_step_size(double value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StepRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  double step_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ResetRequest) */ {
 public:
  ResetRequest();
  virtual ~ResetRequest();

  ResetRequest(const ResetRequest& from);

  inline ResetRequest& operator=(const ResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetRequest(ResetRequest&& from) noexcept
    : ResetRequest() {
    *this = ::std::move(from);
  }

  inline ResetRequest& operator=(ResetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetRequest* internal_default_instance() {
    return reinterpret_cast<const ResetRequest*>(
               &_ResetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(ResetRequest* other);
  friend void swap(ResetRequest& a, ResetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetRequest* New() const final {
    return CreateMaybeMessage<ResetRequest>(NULL);
  }

  ResetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResetRequest& from);
  void MergeFrom(const ResetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ResetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TerminateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.TerminateRequest) */ {
 public:
  TerminateRequest();
  virtual ~TerminateRequest();

  TerminateRequest(const TerminateRequest& from);

  inline TerminateRequest& operator=(const TerminateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminateRequest(TerminateRequest&& from) noexcept
    : TerminateRequest() {
    *this = ::std::move(from);
  }

  inline TerminateRequest& operator=(TerminateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminateRequest* internal_default_instance() {
    return reinterpret_cast<const TerminateRequest*>(
               &_TerminateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(TerminateRequest* other);
  friend void swap(TerminateRequest& a, TerminateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminateRequest* New() const final {
    return CreateMaybeMessage<TerminateRequest>(NULL);
  }

  TerminateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TerminateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TerminateRequest& from);
  void MergeFrom(const TerminateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TerminateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.TerminateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.ReadRequest) */ {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadRequest(ReadRequest&& from) noexcept
    : ReadRequest() {
    *this = ::std::move(from);
  }

  inline ReadRequest& operator=(ReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadRequest* internal_default_instance() {
    return reinterpret_cast<const ReadRequest*>(
               &_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(ReadRequest* other);
  friend void swap(ReadRequest& a, ReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const final {
    return CreateMaybeMessage<ReadRequest>(NULL);
  }

  ReadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint64 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint64 value);
  void add_value_references(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_value_references();

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.ReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteIntegerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteIntegerRequest) */ {
 public:
  WriteIntegerRequest();
  virtual ~WriteIntegerRequest();

  WriteIntegerRequest(const WriteIntegerRequest& from);

  inline WriteIntegerRequest& operator=(const WriteIntegerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteIntegerRequest(WriteIntegerRequest&& from) noexcept
    : WriteIntegerRequest() {
    *this = ::std::move(from);
  }

  inline WriteIntegerRequest& operator=(WriteIntegerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteIntegerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteIntegerRequest* internal_default_instance() {
    return reinterpret_cast<const WriteIntegerRequest*>(
               &_WriteIntegerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(WriteIntegerRequest* other);
  friend void swap(WriteIntegerRequest& a, WriteIntegerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteIntegerRequest* New() const final {
    return CreateMaybeMessage<WriteIntegerRequest>(NULL);
  }

  WriteIntegerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteIntegerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteIntegerRequest& from);
  void MergeFrom(const WriteIntegerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteIntegerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint64 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint64 value);
  void add_value_references(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_value_references();

  // repeated int32 values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteIntegerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteRealRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteRealRequest) */ {
 public:
  WriteRealRequest();
  virtual ~WriteRealRequest();

  WriteRealRequest(const WriteRealRequest& from);

  inline WriteRealRequest& operator=(const WriteRealRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteRealRequest(WriteRealRequest&& from) noexcept
    : WriteRealRequest() {
    *this = ::std::move(from);
  }

  inline WriteRealRequest& operator=(WriteRealRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRealRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteRealRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRealRequest*>(
               &_WriteRealRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(WriteRealRequest* other);
  friend void swap(WriteRealRequest& a, WriteRealRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteRealRequest* New() const final {
    return CreateMaybeMessage<WriteRealRequest>(NULL);
  }

  WriteRealRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteRealRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteRealRequest& from);
  void MergeFrom(const WriteRealRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteRealRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint64 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint64 value);
  void add_value_references(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_value_references();

  // repeated double values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values();

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteRealRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteStringRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteStringRequest) */ {
 public:
  WriteStringRequest();
  virtual ~WriteStringRequest();

  WriteStringRequest(const WriteStringRequest& from);

  inline WriteStringRequest& operator=(const WriteStringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteStringRequest(WriteStringRequest&& from) noexcept
    : WriteStringRequest() {
    *this = ::std::move(from);
  }

  inline WriteStringRequest& operator=(WriteStringRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteStringRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteStringRequest* internal_default_instance() {
    return reinterpret_cast<const WriteStringRequest*>(
               &_WriteStringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(WriteStringRequest* other);
  friend void swap(WriteStringRequest& a, WriteStringRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteStringRequest* New() const final {
    return CreateMaybeMessage<WriteStringRequest>(NULL);
  }

  WriteStringRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteStringRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteStringRequest& from);
  void MergeFrom(const WriteStringRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteStringRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint64 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint64 value);
  void add_value_references(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_value_references();

  // repeated string values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteStringRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteBooleanRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.WriteBooleanRequest) */ {
 public:
  WriteBooleanRequest();
  virtual ~WriteBooleanRequest();

  WriteBooleanRequest(const WriteBooleanRequest& from);

  inline WriteBooleanRequest& operator=(const WriteBooleanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteBooleanRequest(WriteBooleanRequest&& from) noexcept
    : WriteBooleanRequest() {
    *this = ::std::move(from);
  }

  inline WriteBooleanRequest& operator=(WriteBooleanRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteBooleanRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteBooleanRequest* internal_default_instance() {
    return reinterpret_cast<const WriteBooleanRequest*>(
               &_WriteBooleanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(WriteBooleanRequest* other);
  friend void swap(WriteBooleanRequest& a, WriteBooleanRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteBooleanRequest* New() const final {
    return CreateMaybeMessage<WriteBooleanRequest>(NULL);
  }

  WriteBooleanRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteBooleanRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteBooleanRequest& from);
  void MergeFrom(const WriteBooleanRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteBooleanRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 value_references = 2;
  int value_references_size() const;
  void clear_value_references();
  static const int kValueReferencesFieldNumber = 2;
  ::google::protobuf::uint64 value_references(int index) const;
  void set_value_references(int index, ::google::protobuf::uint64 value);
  void add_value_references(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      value_references() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_value_references();

  // repeated bool values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  bool values(int index) const;
  void set_values(int index, bool value);
  void add_values(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      values() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_values();

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.WriteBooleanRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > value_references_;
  mutable int _value_references_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntegerRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.IntegerRead) */ {
 public:
  IntegerRead();
  virtual ~IntegerRead();

  IntegerRead(const IntegerRead& from);

  inline IntegerRead& operator=(const IntegerRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntegerRead(IntegerRead&& from) noexcept
    : IntegerRead() {
    *this = ::std::move(from);
  }

  inline IntegerRead& operator=(IntegerRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntegerRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntegerRead* internal_default_instance() {
    return reinterpret_cast<const IntegerRead*>(
               &_IntegerRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(IntegerRead* other);
  friend void swap(IntegerRead& a, IntegerRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntegerRead* New() const final {
    return CreateMaybeMessage<IntegerRead>(NULL);
  }

  IntegerRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntegerRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntegerRead& from);
  void MergeFrom(const IntegerRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntegerRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.IntegerRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RealRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.RealRead) */ {
 public:
  RealRead();
  virtual ~RealRead();

  RealRead(const RealRead& from);

  inline RealRead& operator=(const RealRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RealRead(RealRead&& from) noexcept
    : RealRead() {
    *this = ::std::move(from);
  }

  inline RealRead& operator=(RealRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RealRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RealRead* internal_default_instance() {
    return reinterpret_cast<const RealRead*>(
               &_RealRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(RealRead* other);
  friend void swap(RealRead& a, RealRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RealRead* New() const final {
    return CreateMaybeMessage<RealRead>(NULL);
  }

  RealRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RealRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RealRead& from);
  void MergeFrom(const RealRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.RealRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > values_;
  mutable int _values_cached_byte_size_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.StringRead) */ {
 public:
  StringRead();
  virtual ~StringRead();

  StringRead(const StringRead& from);

  inline StringRead& operator=(const StringRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringRead(StringRead&& from) noexcept
    : StringRead() {
    *this = ::std::move(from);
  }

  inline StringRead& operator=(StringRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringRead* internal_default_instance() {
    return reinterpret_cast<const StringRead*>(
               &_StringRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(StringRead* other);
  friend void swap(StringRead& a, StringRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringRead* New() const final {
    return CreateMaybeMessage<StringRead>(NULL);
  }

  StringRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringRead& from);
  void MergeFrom(const StringRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.StringRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BooleanRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.BooleanRead) */ {
 public:
  BooleanRead();
  virtual ~BooleanRead();

  BooleanRead(const BooleanRead& from);

  inline BooleanRead& operator=(const BooleanRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BooleanRead(BooleanRead&& from) noexcept
    : BooleanRead() {
    *this = ::std::move(from);
  }

  inline BooleanRead& operator=(BooleanRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BooleanRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BooleanRead* internal_default_instance() {
    return reinterpret_cast<const BooleanRead*>(
               &_BooleanRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(BooleanRead* other);
  friend void swap(BooleanRead& a, BooleanRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BooleanRead* New() const final {
    return CreateMaybeMessage<BooleanRead>(NULL);
  }

  BooleanRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BooleanRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BooleanRead& from);
  void MergeFrom(const BooleanRead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BooleanRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  bool values(int index) const;
  void set_values(int index, bool value);
  void add_values(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      values() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_values();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.BooleanRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > values_;
  mutable int _values_cached_byte_size_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Solver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Solver) */ {
 public:
  Solver();
  virtual ~Solver();

  Solver(const Solver& from);

  inline Solver& operator=(const Solver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Solver(Solver&& from) noexcept
    : Solver() {
    *this = ::std::move(from);
  }

  inline Solver& operator=(Solver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Solver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Solver* internal_default_instance() {
    return reinterpret_cast<const Solver*>(
               &_Solver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(Solver* other);
  friend void swap(Solver& a, Solver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Solver* New() const final {
    return CreateMaybeMessage<Solver>(NULL);
  }

  Solver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Solver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Solver& from);
  void MergeFrom(const Solver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Solver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string settings = 2;
  void clear_settings();
  static const int kSettingsFieldNumber = 2;
  const ::std::string& settings() const;
  void set_settings(const ::std::string& value);
  #if LANG_CXX11
  void set_settings(::std::string&& value);
  #endif
  void set_settings(const char* value);
  void set_settings(const char* value, size_t size);
  ::std::string* mutable_settings();
  ::std::string* release_settings();
  void set_allocated_settings(::std::string* settings);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Solver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Bool) */ {
 public:
  Bool();
  virtual ~Bool();

  Bool(const Bool& from);

  inline Bool& operator=(const Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bool(Bool&& from) noexcept
    : Bool() {
    *this = ::std::move(from);
  }

  inline Bool& operator=(Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bool* internal_default_instance() {
    return reinterpret_cast<const Bool*>(
               &_Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(Bool* other);
  friend void swap(Bool& a, Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bool* New() const final {
    return CreateMaybeMessage<Bool>(NULL);
  }

  Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bool& from);
  void MergeFrom(const Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFMUstateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.GetFMUstateRequest) */ {
 public:
  GetFMUstateRequest();
  virtual ~GetFMUstateRequest();

  GetFMUstateRequest(const GetFMUstateRequest& from);

  inline GetFMUstateRequest& operator=(const GetFMUstateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFMUstateRequest(GetFMUstateRequest&& from) noexcept
    : GetFMUstateRequest() {
    *this = ::std::move(from);
  }

  inline GetFMUstateRequest& operator=(GetFMUstateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFMUstateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFMUstateRequest* internal_default_instance() {
    return reinterpret_cast<const GetFMUstateRequest*>(
               &_GetFMUstateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(GetFMUstateRequest* other);
  friend void swap(GetFMUstateRequest& a, GetFMUstateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFMUstateRequest* New() const final {
    return CreateMaybeMessage<GetFMUstateRequest>(NULL);
  }

  GetFMUstateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFMUstateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFMUstateRequest& from);
  void MergeFrom(const GetFMUstateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFMUstateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.GetFMUstateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFMUstateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.GetFMUstateResponse) */ {
 public:
  GetFMUstateResponse();
  virtual ~GetFMUstateResponse();

  GetFMUstateResponse(const GetFMUstateResponse& from);

  inline GetFMUstateResponse& operator=(const GetFMUstateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFMUstateResponse(GetFMUstateResponse&& from) noexcept
    : GetFMUstateResponse() {
    *this = ::std::move(from);
  }

  inline GetFMUstateResponse& operator=(GetFMUstateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFMUstateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFMUstateResponse* internal_default_instance() {
    return reinterpret_cast<const GetFMUstateResponse*>(
               &_GetFMUstateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(GetFMUstateResponse* other);
  friend void swap(GetFMUstateResponse& a, GetFMUstateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFMUstateResponse* New() const final {
    return CreateMaybeMessage<GetFMUstateResponse>(NULL);
  }

  GetFMUstateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFMUstateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFMUstateResponse& from);
  void MergeFrom(const GetFMUstateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFMUstateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::int64 state() const;
  void set_state(::google::protobuf::int64 value);

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.GetFMUstateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 state_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFMUstateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.SetFMUstateRequest) */ {
 public:
  SetFMUstateRequest();
  virtual ~SetFMUstateRequest();

  SetFMUstateRequest(const SetFMUstateRequest& from);

  inline SetFMUstateRequest& operator=(const SetFMUstateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetFMUstateRequest(SetFMUstateRequest&& from) noexcept
    : SetFMUstateRequest() {
    *this = ::std::move(from);
  }

  inline SetFMUstateRequest& operator=(SetFMUstateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFMUstateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetFMUstateRequest* internal_default_instance() {
    return reinterpret_cast<const SetFMUstateRequest*>(
               &_SetFMUstateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(SetFMUstateRequest* other);
  friend void swap(SetFMUstateRequest& a, SetFMUstateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetFMUstateRequest* New() const final {
    return CreateMaybeMessage<SetFMUstateRequest>(NULL);
  }

  SetFMUstateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetFMUstateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetFMUstateRequest& from);
  void MergeFrom(const SetFMUstateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetFMUstateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // int64 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int64 state() const;
  void set_state(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.SetFMUstateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::int64 state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FreeFMUstateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.FreeFMUstateRequest) */ {
 public:
  FreeFMUstateRequest();
  virtual ~FreeFMUstateRequest();

  FreeFMUstateRequest(const FreeFMUstateRequest& from);

  inline FreeFMUstateRequest& operator=(const FreeFMUstateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FreeFMUstateRequest(FreeFMUstateRequest&& from) noexcept
    : FreeFMUstateRequest() {
    *this = ::std::move(from);
  }

  inline FreeFMUstateRequest& operator=(FreeFMUstateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FreeFMUstateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FreeFMUstateRequest* internal_default_instance() {
    return reinterpret_cast<const FreeFMUstateRequest*>(
               &_FreeFMUstateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(FreeFMUstateRequest* other);
  friend void swap(FreeFMUstateRequest& a, FreeFMUstateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FreeFMUstateRequest* New() const final {
    return CreateMaybeMessage<FreeFMUstateRequest>(NULL);
  }

  FreeFMUstateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FreeFMUstateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FreeFMUstateRequest& from);
  void MergeFrom(const FreeFMUstateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FreeFMUstateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // int64 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int64 state() const;
  void set_state(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.FreeFMUstateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::int64 state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializeFMUstateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.SerializeFMUstateRequest) */ {
 public:
  SerializeFMUstateRequest();
  virtual ~SerializeFMUstateRequest();

  SerializeFMUstateRequest(const SerializeFMUstateRequest& from);

  inline SerializeFMUstateRequest& operator=(const SerializeFMUstateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializeFMUstateRequest(SerializeFMUstateRequest&& from) noexcept
    : SerializeFMUstateRequest() {
    *this = ::std::move(from);
  }

  inline SerializeFMUstateRequest& operator=(SerializeFMUstateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializeFMUstateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializeFMUstateRequest* internal_default_instance() {
    return reinterpret_cast<const SerializeFMUstateRequest*>(
               &_SerializeFMUstateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(SerializeFMUstateRequest* other);
  friend void swap(SerializeFMUstateRequest& a, SerializeFMUstateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializeFMUstateRequest* New() const final {
    return CreateMaybeMessage<SerializeFMUstateRequest>(NULL);
  }

  SerializeFMUstateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializeFMUstateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializeFMUstateRequest& from);
  void MergeFrom(const SerializeFMUstateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializeFMUstateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // int64 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int64 state() const;
  void set_state(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.SerializeFMUstateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::int64 state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializeFMUstateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.SerializeFMUstateResponse) */ {
 public:
  SerializeFMUstateResponse();
  virtual ~SerializeFMUstateResponse();

  SerializeFMUstateResponse(const SerializeFMUstateResponse& from);

  inline SerializeFMUstateResponse& operator=(const SerializeFMUstateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializeFMUstateResponse(SerializeFMUstateResponse&& from) noexcept
    : SerializeFMUstateResponse() {
    *this = ::std::move(from);
  }

  inline SerializeFMUstateResponse& operator=(SerializeFMUstateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializeFMUstateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializeFMUstateResponse* internal_default_instance() {
    return reinterpret_cast<const SerializeFMUstateResponse*>(
               &_SerializeFMUstateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(SerializeFMUstateResponse* other);
  friend void swap(SerializeFMUstateResponse& a, SerializeFMUstateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializeFMUstateResponse* New() const final {
    return CreateMaybeMessage<SerializeFMUstateResponse>(NULL);
  }

  SerializeFMUstateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializeFMUstateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializeFMUstateResponse& from);
  void MergeFrom(const SerializeFMUstateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializeFMUstateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.SerializeFMUstateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeSerializeFMUstateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.DeSerializeFMUstateRequest) */ {
 public:
  DeSerializeFMUstateRequest();
  virtual ~DeSerializeFMUstateRequest();

  DeSerializeFMUstateRequest(const DeSerializeFMUstateRequest& from);

  inline DeSerializeFMUstateRequest& operator=(const DeSerializeFMUstateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeSerializeFMUstateRequest(DeSerializeFMUstateRequest&& from) noexcept
    : DeSerializeFMUstateRequest() {
    *this = ::std::move(from);
  }

  inline DeSerializeFMUstateRequest& operator=(DeSerializeFMUstateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeSerializeFMUstateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeSerializeFMUstateRequest* internal_default_instance() {
    return reinterpret_cast<const DeSerializeFMUstateRequest*>(
               &_DeSerializeFMUstateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(DeSerializeFMUstateRequest* other);
  friend void swap(DeSerializeFMUstateRequest& a, DeSerializeFMUstateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeSerializeFMUstateRequest* New() const final {
    return CreateMaybeMessage<DeSerializeFMUstateRequest>(NULL);
  }

  DeSerializeFMUstateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeSerializeFMUstateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeSerializeFMUstateRequest& from);
  void MergeFrom(const DeSerializeFMUstateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeSerializeFMUstateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // bytes state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.DeSerializeFMUstateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeSerializeFMUstateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.DeSerializeFMUstateResponse) */ {
 public:
  DeSerializeFMUstateResponse();
  virtual ~DeSerializeFMUstateResponse();

  DeSerializeFMUstateResponse(const DeSerializeFMUstateResponse& from);

  inline DeSerializeFMUstateResponse& operator=(const DeSerializeFMUstateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeSerializeFMUstateResponse(DeSerializeFMUstateResponse&& from) noexcept
    : DeSerializeFMUstateResponse() {
    *this = ::std::move(from);
  }

  inline DeSerializeFMUstateResponse& operator=(DeSerializeFMUstateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeSerializeFMUstateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeSerializeFMUstateResponse* internal_default_instance() {
    return reinterpret_cast<const DeSerializeFMUstateResponse*>(
               &_DeSerializeFMUstateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(DeSerializeFMUstateResponse* other);
  friend void swap(DeSerializeFMUstateResponse& a, DeSerializeFMUstateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeSerializeFMUstateResponse* New() const final {
    return CreateMaybeMessage<DeSerializeFMUstateResponse>(NULL);
  }

  DeSerializeFMUstateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeSerializeFMUstateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeSerializeFMUstateResponse& from);
  void MergeFrom(const DeSerializeFMUstateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeSerializeFMUstateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::int64 state() const;
  void set_state(::google::protobuf::int64 value);

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.DeSerializeFMUstateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 state_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CanCreateInstanceFromCSRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.CanCreateInstanceFromCSRequest) */ {
 public:
  CanCreateInstanceFromCSRequest();
  virtual ~CanCreateInstanceFromCSRequest();

  CanCreateInstanceFromCSRequest(const CanCreateInstanceFromCSRequest& from);

  inline CanCreateInstanceFromCSRequest& operator=(const CanCreateInstanceFromCSRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CanCreateInstanceFromCSRequest(CanCreateInstanceFromCSRequest&& from) noexcept
    : CanCreateInstanceFromCSRequest() {
    *this = ::std::move(from);
  }

  inline CanCreateInstanceFromCSRequest& operator=(CanCreateInstanceFromCSRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CanCreateInstanceFromCSRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanCreateInstanceFromCSRequest* internal_default_instance() {
    return reinterpret_cast<const CanCreateInstanceFromCSRequest*>(
               &_CanCreateInstanceFromCSRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CanCreateInstanceFromCSRequest* other);
  friend void swap(CanCreateInstanceFromCSRequest& a, CanCreateInstanceFromCSRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CanCreateInstanceFromCSRequest* New() const final {
    return CreateMaybeMessage<CanCreateInstanceFromCSRequest>(NULL);
  }

  CanCreateInstanceFromCSRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CanCreateInstanceFromCSRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CanCreateInstanceFromCSRequest& from);
  void MergeFrom(const CanCreateInstanceFromCSRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CanCreateInstanceFromCSRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  const ::std::string& fmu_id() const;
  void set_fmu_id(const ::std::string& value);
  #if LANG_CXX11
  void set_fmu_id(::std::string&& value);
  #endif
  void set_fmu_id(const char* value);
  void set_fmu_id(const char* value, size_t size);
  ::std::string* mutable_fmu_id();
  ::std::string* release_fmu_id();
  void set_allocated_fmu_id(::std::string* fmu_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.CanCreateInstanceFromCSRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CanCreateInstanceFromMERequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.CanCreateInstanceFromMERequest) */ {
 public:
  CanCreateInstanceFromMERequest();
  virtual ~CanCreateInstanceFromMERequest();

  CanCreateInstanceFromMERequest(const CanCreateInstanceFromMERequest& from);

  inline CanCreateInstanceFromMERequest& operator=(const CanCreateInstanceFromMERequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CanCreateInstanceFromMERequest(CanCreateInstanceFromMERequest&& from) noexcept
    : CanCreateInstanceFromMERequest() {
    *this = ::std::move(from);
  }

  inline CanCreateInstanceFromMERequest& operator=(CanCreateInstanceFromMERequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CanCreateInstanceFromMERequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanCreateInstanceFromMERequest* internal_default_instance() {
    return reinterpret_cast<const CanCreateInstanceFromMERequest*>(
               &_CanCreateInstanceFromMERequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CanCreateInstanceFromMERequest* other);
  friend void swap(CanCreateInstanceFromMERequest& a, CanCreateInstanceFromMERequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CanCreateInstanceFromMERequest* New() const final {
    return CreateMaybeMessage<CanCreateInstanceFromMERequest>(NULL);
  }

  CanCreateInstanceFromMERequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CanCreateInstanceFromMERequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CanCreateInstanceFromMERequest& from);
  void MergeFrom(const CanCreateInstanceFromMERequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CanCreateInstanceFromMERequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fmu_id = 1;
  void clear_fmu_id();
  static const int kFmuIdFieldNumber = 1;
  const ::std::string& fmu_id() const;
  void set_fmu_id(const ::std::string& value);
  #if LANG_CXX11
  void set_fmu_id(::std::string&& value);
  #endif
  void set_fmu_id(const char* value);
  void set_fmu_id(const char* value, size_t size);
  ::std::string* mutable_fmu_id();
  ::std::string* release_fmu_id();
  void set_allocated_fmu_id(::std::string* fmu_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.CanCreateInstanceFromMERequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fmu_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDirectionalDerivativeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.GetDirectionalDerivativeRequest) */ {
 public:
  GetDirectionalDerivativeRequest();
  virtual ~GetDirectionalDerivativeRequest();

  GetDirectionalDerivativeRequest(const GetDirectionalDerivativeRequest& from);

  inline GetDirectionalDerivativeRequest& operator=(const GetDirectionalDerivativeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDirectionalDerivativeRequest(GetDirectionalDerivativeRequest&& from) noexcept
    : GetDirectionalDerivativeRequest() {
    *this = ::std::move(from);
  }

  inline GetDirectionalDerivativeRequest& operator=(GetDirectionalDerivativeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDirectionalDerivativeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDirectionalDerivativeRequest* internal_default_instance() {
    return reinterpret_cast<const GetDirectionalDerivativeRequest*>(
               &_GetDirectionalDerivativeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(GetDirectionalDerivativeRequest* other);
  friend void swap(GetDirectionalDerivativeRequest& a, GetDirectionalDerivativeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDirectionalDerivativeRequest* New() const final {
    return CreateMaybeMessage<GetDirectionalDerivativeRequest>(NULL);
  }

  GetDirectionalDerivativeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDirectionalDerivativeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDirectionalDerivativeRequest& from);
  void MergeFrom(const GetDirectionalDerivativeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDirectionalDerivativeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 v_unknown_ref = 2;
  int v_unknown_ref_size() const;
  void clear_v_unknown_ref();
  static const int kVUnknownRefFieldNumber = 2;
  ::google::protobuf::uint64 v_unknown_ref(int index) const;
  void set_v_unknown_ref(int index, ::google::protobuf::uint64 value);
  void add_v_unknown_ref(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      v_unknown_ref() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_v_unknown_ref();

  // repeated uint64 v_known_ref = 3;
  int v_known_ref_size() const;
  void clear_v_known_ref();
  static const int kVKnownRefFieldNumber = 3;
  ::google::protobuf::uint64 v_known_ref(int index) const;
  void set_v_known_ref(int index, ::google::protobuf::uint64 value);
  void add_v_known_ref(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      v_known_ref() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_v_known_ref();

  // repeated double dv_known_ref = 4;
  int dv_known_ref_size() const;
  void clear_dv_known_ref();
  static const int kDvKnownRefFieldNumber = 4;
  double dv_known_ref(int index) const;
  void set_dv_known_ref(int index, double value);
  void add_dv_known_ref(double value);
  const ::google::protobuf::RepeatedField< double >&
      dv_known_ref() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_dv_known_ref();

  // string instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.GetDirectionalDerivativeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > v_unknown_ref_;
  mutable int _v_unknown_ref_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > v_known_ref_;
  mutable int _v_known_ref_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > dv_known_ref_;
  mutable int _dv_known_ref_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDirectionalDerivativeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.GetDirectionalDerivativeResponse) */ {
 public:
  GetDirectionalDerivativeResponse();
  virtual ~GetDirectionalDerivativeResponse();

  GetDirectionalDerivativeResponse(const GetDirectionalDerivativeResponse& from);

  inline GetDirectionalDerivativeResponse& operator=(const GetDirectionalDerivativeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDirectionalDerivativeResponse(GetDirectionalDerivativeResponse&& from) noexcept
    : GetDirectionalDerivativeResponse() {
    *this = ::std::move(from);
  }

  inline GetDirectionalDerivativeResponse& operator=(GetDirectionalDerivativeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDirectionalDerivativeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDirectionalDerivativeResponse* internal_default_instance() {
    return reinterpret_cast<const GetDirectionalDerivativeResponse*>(
               &_GetDirectionalDerivativeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(GetDirectionalDerivativeResponse* other);
  friend void swap(GetDirectionalDerivativeResponse& a, GetDirectionalDerivativeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDirectionalDerivativeResponse* New() const final {
    return CreateMaybeMessage<GetDirectionalDerivativeResponse>(NULL);
  }

  GetDirectionalDerivativeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDirectionalDerivativeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDirectionalDerivativeResponse& from);
  void MergeFrom(const GetDirectionalDerivativeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDirectionalDerivativeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double dv_unknown_ref = 1;
  int dv_unknown_ref_size() const;
  void clear_dv_unknown_ref();
  static const int kDvUnknownRefFieldNumber = 1;
  double dv_unknown_ref(int index) const;
  void set_dv_unknown_ref(int index, double value);
  void add_dv_unknown_ref(double value);
  const ::google::protobuf::RepeatedField< double >&
      dv_unknown_ref() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_dv_unknown_ref();

  // .fmuproxy.grpc.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fmuproxy::grpc::Status status() const;
  void set_status(::fmuproxy::grpc::Status value);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.GetDirectionalDerivativeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > dv_unknown_ref_;
  mutable int _dv_unknown_ref_cached_byte_size_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Void : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Void) */ {
 public:
  Void();
  virtual ~Void();

  Void(const Void& from);

  inline Void& operator=(const Void& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Void(Void&& from) noexcept
    : Void() {
    *this = ::std::move(from);
  }

  inline Void& operator=(Void&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Void& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Void* internal_default_instance() {
    return reinterpret_cast<const Void*>(
               &_Void_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(Void* other);
  friend void swap(Void& a, Void& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Void* New() const final {
    return CreateMaybeMessage<Void>(NULL);
  }

  Void* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Void>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Void& from);
  void MergeFrom(const Void& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Void* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Void)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Url : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fmuproxy.grpc.Url) */ {
 public:
  Url();
  virtual ~Url();

  Url(const Url& from);

  inline Url& operator=(const Url& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Url(Url&& from) noexcept
    : Url() {
    *this = ::std::move(from);
  }

  inline Url& operator=(Url&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Url& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Url* internal_default_instance() {
    return reinterpret_cast<const Url*>(
               &_Url_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(Url* other);
  friend void swap(Url& a, Url& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Url* New() const final {
    return CreateMaybeMessage<Url>(NULL);
  }

  Url* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Url>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Url& from);
  void MergeFrom(const Url& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Url* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:fmuproxy.grpc.Url)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModelDescription

// string fmi_version = 1;
inline void ModelDescription::clear_fmi_version() {
  fmi_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::fmi_version() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.fmi_version)
  return fmi_version_.GetNoArena();
}
inline void ModelDescription::set_fmi_version(const ::std::string& value) {
  
  fmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.fmi_version)
}
#if LANG_CXX11
inline void ModelDescription::set_fmi_version(::std::string&& value) {
  
  fmi_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.fmi_version)
}
#endif
inline void ModelDescription::set_fmi_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.fmi_version)
}
inline void ModelDescription::set_fmi_version(const char* value, size_t size) {
  
  fmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.fmi_version)
}
inline ::std::string* ModelDescription::mutable_fmi_version() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.fmi_version)
  return fmi_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_fmi_version() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.fmi_version)
  
  return fmi_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_fmi_version(::std::string* fmi_version) {
  if (fmi_version != NULL) {
    
  } else {
    
  }
  fmi_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmi_version);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.fmi_version)
}

// string guid = 2;
inline void ModelDescription::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::guid() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.guid)
  return guid_.GetNoArena();
}
inline void ModelDescription::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.guid)
}
#if LANG_CXX11
inline void ModelDescription::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.guid)
}
#endif
inline void ModelDescription::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.guid)
}
inline void ModelDescription::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.guid)
}
inline ::std::string* ModelDescription::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_guid() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.guid)
}

// string model_name = 3;
inline void ModelDescription::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::model_name() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.model_name)
  return model_name_.GetNoArena();
}
inline void ModelDescription::set_model_name(const ::std::string& value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.model_name)
}
#if LANG_CXX11
inline void ModelDescription::set_model_name(::std::string&& value) {
  
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.model_name)
}
#endif
inline void ModelDescription::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.model_name)
}
inline void ModelDescription::set_model_name(const char* value, size_t size) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.model_name)
}
inline ::std::string* ModelDescription::mutable_model_name() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_model_name() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.model_name)
  
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    
  } else {
    
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.model_name)
}

// string license = 4;
inline void ModelDescription::clear_license() {
  license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::license() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.license)
  return license_.GetNoArena();
}
inline void ModelDescription::set_license(const ::std::string& value) {
  
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.license)
}
#if LANG_CXX11
inline void ModelDescription::set_license(::std::string&& value) {
  
  license_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.license)
}
#endif
inline void ModelDescription::set_license(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.license)
}
inline void ModelDescription::set_license(const char* value, size_t size) {
  
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.license)
}
inline ::std::string* ModelDescription::mutable_license() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.license)
  return license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_license() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.license)
  
  return license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_license(::std::string* license) {
  if (license != NULL) {
    
  } else {
    
  }
  license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), license);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.license)
}

// string copyright = 5;
inline void ModelDescription::clear_copyright() {
  copyright_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::copyright() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.copyright)
  return copyright_.GetNoArena();
}
inline void ModelDescription::set_copyright(const ::std::string& value) {
  
  copyright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.copyright)
}
#if LANG_CXX11
inline void ModelDescription::set_copyright(::std::string&& value) {
  
  copyright_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.copyright)
}
#endif
inline void ModelDescription::set_copyright(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  copyright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.copyright)
}
inline void ModelDescription::set_copyright(const char* value, size_t size) {
  
  copyright_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.copyright)
}
inline ::std::string* ModelDescription::mutable_copyright() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.copyright)
  return copyright_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_copyright() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.copyright)
  
  return copyright_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_copyright(::std::string* copyright) {
  if (copyright != NULL) {
    
  } else {
    
  }
  copyright_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), copyright);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.copyright)
}

// string author = 6;
inline void ModelDescription::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::author() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.author)
  return author_.GetNoArena();
}
inline void ModelDescription::set_author(const ::std::string& value) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.author)
}
#if LANG_CXX11
inline void ModelDescription::set_author(::std::string&& value) {
  
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.author)
}
#endif
inline void ModelDescription::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.author)
}
inline void ModelDescription::set_author(const char* value, size_t size) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.author)
}
inline ::std::string* ModelDescription::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_author() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.author)
  
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.author)
}

// string version = 7;
inline void ModelDescription::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::version() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.version)
  return version_.GetNoArena();
}
inline void ModelDescription::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.version)
}
#if LANG_CXX11
inline void ModelDescription::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.version)
}
#endif
inline void ModelDescription::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.version)
}
inline void ModelDescription::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.version)
}
inline ::std::string* ModelDescription::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_version() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.version)
}

// string description = 8;
inline void ModelDescription::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::description() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.description)
  return description_.GetNoArena();
}
inline void ModelDescription::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.description)
}
#if LANG_CXX11
inline void ModelDescription::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.description)
}
#endif
inline void ModelDescription::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.description)
}
inline void ModelDescription::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.description)
}
inline ::std::string* ModelDescription::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_description() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.description)
}

// string generation_tool = 9;
inline void ModelDescription::clear_generation_tool() {
  generation_tool_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::generation_tool() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.generation_tool)
  return generation_tool_.GetNoArena();
}
inline void ModelDescription::set_generation_tool(const ::std::string& value) {
  
  generation_tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.generation_tool)
}
#if LANG_CXX11
inline void ModelDescription::set_generation_tool(::std::string&& value) {
  
  generation_tool_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.generation_tool)
}
#endif
inline void ModelDescription::set_generation_tool(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  generation_tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.generation_tool)
}
inline void ModelDescription::set_generation_tool(const char* value, size_t size) {
  
  generation_tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.generation_tool)
}
inline ::std::string* ModelDescription::mutable_generation_tool() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.generation_tool)
  return generation_tool_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_generation_tool() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.generation_tool)
  
  return generation_tool_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_generation_tool(::std::string* generation_tool) {
  if (generation_tool != NULL) {
    
  } else {
    
  }
  generation_tool_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generation_tool);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.generation_tool)
}

// string generation_date_and_time = 10;
inline void ModelDescription::clear_generation_date_and_time() {
  generation_date_and_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::generation_date_and_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.generation_date_and_time)
  return generation_date_and_time_.GetNoArena();
}
inline void ModelDescription::set_generation_date_and_time(const ::std::string& value) {
  
  generation_date_and_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
#if LANG_CXX11
inline void ModelDescription::set_generation_date_and_time(::std::string&& value) {
  
  generation_date_and_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
#endif
inline void ModelDescription::set_generation_date_and_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  generation_date_and_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
inline void ModelDescription::set_generation_date_and_time(const char* value, size_t size) {
  
  generation_date_and_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}
inline ::std::string* ModelDescription::mutable_generation_date_and_time() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.generation_date_and_time)
  return generation_date_and_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_generation_date_and_time() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.generation_date_and_time)
  
  return generation_date_and_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_generation_date_and_time(::std::string* generation_date_and_time) {
  if (generation_date_and_time != NULL) {
    
  } else {
    
  }
  generation_date_and_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generation_date_and_time);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.generation_date_and_time)
}

// .fmuproxy.grpc.DefaultExperiment default_experiment = 11;
inline bool ModelDescription::has_default_experiment() const {
  return this != internal_default_instance() && default_experiment_ != NULL;
}
inline void ModelDescription::clear_default_experiment() {
  if (GetArenaNoVirtual() == NULL && default_experiment_ != NULL) {
    delete default_experiment_;
  }
  default_experiment_ = NULL;
}
inline const ::fmuproxy::grpc::DefaultExperiment& ModelDescription::_internal_default_experiment() const {
  return *default_experiment_;
}
inline const ::fmuproxy::grpc::DefaultExperiment& ModelDescription::default_experiment() const {
  const ::fmuproxy::grpc::DefaultExperiment* p = default_experiment_;
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.default_experiment)
  return p != NULL ? *p : *reinterpret_cast<const ::fmuproxy::grpc::DefaultExperiment*>(
      &::fmuproxy::grpc::_DefaultExperiment_default_instance_);
}
inline ::fmuproxy::grpc::DefaultExperiment* ModelDescription::release_default_experiment() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.default_experiment)
  
  ::fmuproxy::grpc::DefaultExperiment* temp = default_experiment_;
  default_experiment_ = NULL;
  return temp;
}
inline ::fmuproxy::grpc::DefaultExperiment* ModelDescription::mutable_default_experiment() {
  
  if (default_experiment_ == NULL) {
    auto* p = CreateMaybeMessage<::fmuproxy::grpc::DefaultExperiment>(GetArenaNoVirtual());
    default_experiment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.default_experiment)
  return default_experiment_;
}
inline void ModelDescription::set_allocated_default_experiment(::fmuproxy::grpc::DefaultExperiment* default_experiment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete default_experiment_;
  }
  if (default_experiment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      default_experiment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_experiment, submessage_arena);
    }
    
  } else {
    
  }
  default_experiment_ = default_experiment;
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.default_experiment)
}

// string variable_naming_convention = 12;
inline void ModelDescription::clear_variable_naming_convention() {
  variable_naming_convention_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescription::variable_naming_convention() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.variable_naming_convention)
  return variable_naming_convention_.GetNoArena();
}
inline void ModelDescription::set_variable_naming_convention(const ::std::string& value) {
  
  variable_naming_convention_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescription.variable_naming_convention)
}
#if LANG_CXX11
inline void ModelDescription::set_variable_naming_convention(::std::string&& value) {
  
  variable_naming_convention_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescription.variable_naming_convention)
}
#endif
inline void ModelDescription::set_variable_naming_convention(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variable_naming_convention_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescription.variable_naming_convention)
}
inline void ModelDescription::set_variable_naming_convention(const char* value, size_t size) {
  
  variable_naming_convention_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescription.variable_naming_convention)
}
inline ::std::string* ModelDescription::mutable_variable_naming_convention() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.variable_naming_convention)
  return variable_naming_convention_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescription::release_variable_naming_convention() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.variable_naming_convention)
  
  return variable_naming_convention_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescription::set_allocated_variable_naming_convention(::std::string* variable_naming_convention) {
  if (variable_naming_convention != NULL) {
    
  } else {
    
  }
  variable_naming_convention_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variable_naming_convention);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.variable_naming_convention)
}

// repeated .fmuproxy.grpc.ScalarVariable model_variables = 13;
inline int ModelDescription::model_variables_size() const {
  return model_variables_.size();
}
inline void ModelDescription::clear_model_variables() {
  model_variables_.Clear();
}
inline ::fmuproxy::grpc::ScalarVariable* ModelDescription::mutable_model_variables(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >*
ModelDescription::mutable_model_variables() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelDescription.model_variables)
  return &model_variables_;
}
inline const ::fmuproxy::grpc::ScalarVariable& ModelDescription::model_variables(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_.Get(index);
}
inline ::fmuproxy::grpc::ScalarVariable* ModelDescription::add_model_variables() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::ScalarVariable >&
ModelDescription::model_variables() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelDescription.model_variables)
  return model_variables_;
}

// .fmuproxy.grpc.ModelStructure model_structure = 14;
inline bool ModelDescription::has_model_structure() const {
  return this != internal_default_instance() && model_structure_ != NULL;
}
inline void ModelDescription::clear_model_structure() {
  if (GetArenaNoVirtual() == NULL && model_structure_ != NULL) {
    delete model_structure_;
  }
  model_structure_ = NULL;
}
inline const ::fmuproxy::grpc::ModelStructure& ModelDescription::_internal_model_structure() const {
  return *model_structure_;
}
inline const ::fmuproxy::grpc::ModelStructure& ModelDescription::model_structure() const {
  const ::fmuproxy::grpc::ModelStructure* p = model_structure_;
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescription.model_structure)
  return p != NULL ? *p : *reinterpret_cast<const ::fmuproxy::grpc::ModelStructure*>(
      &::fmuproxy::grpc::_ModelStructure_default_instance_);
}
inline ::fmuproxy::grpc::ModelStructure* ModelDescription::release_model_structure() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescription.model_structure)
  
  ::fmuproxy::grpc::ModelStructure* temp = model_structure_;
  model_structure_ = NULL;
  return temp;
}
inline ::fmuproxy::grpc::ModelStructure* ModelDescription::mutable_model_structure() {
  
  if (model_structure_ == NULL) {
    auto* p = CreateMaybeMessage<::fmuproxy::grpc::ModelStructure>(GetArenaNoVirtual());
    model_structure_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescription.model_structure)
  return model_structure_;
}
inline void ModelDescription::set_allocated_model_structure(::fmuproxy::grpc::ModelStructure* model_structure) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete model_structure_;
  }
  if (model_structure) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      model_structure = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, model_structure, submessage_arena);
    }
    
  } else {
    
  }
  model_structure_ = model_structure;
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescription.model_structure)
}

// -------------------------------------------------------------------

// CoSimulationAttributes

// string model_identifier = 1;
inline void CoSimulationAttributes::clear_model_identifier() {
  model_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoSimulationAttributes::model_identifier() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
  return model_identifier_.GetNoArena();
}
inline void CoSimulationAttributes::set_model_identifier(const ::std::string& value) {
  
  model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
}
#if LANG_CXX11
inline void CoSimulationAttributes::set_model_identifier(::std::string&& value) {
  
  model_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
}
#endif
inline void CoSimulationAttributes::set_model_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
}
inline void CoSimulationAttributes::set_model_identifier(const char* value, size_t size) {
  
  model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
}
inline ::std::string* CoSimulationAttributes::mutable_model_identifier() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
  return model_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoSimulationAttributes::release_model_identifier() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
  
  return model_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoSimulationAttributes::set_allocated_model_identifier(::std::string* model_identifier) {
  if (model_identifier != NULL) {
    
  } else {
    
  }
  model_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_identifier);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.CoSimulationAttributes.model_identifier)
}

// bool can_get_and_set_FMUstate = 2;
inline void CoSimulationAttributes::clear_can_get_and_set_fmustate() {
  can_get_and_set_fmustate_ = false;
}
inline bool CoSimulationAttributes::can_get_and_set_fmustate() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CoSimulationAttributes.can_get_and_set_FMUstate)
  return can_get_and_set_fmustate_;
}
inline void CoSimulationAttributes::set_can_get_and_set_fmustate(bool value) {
  
  can_get_and_set_fmustate_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CoSimulationAttributes.can_get_and_set_FMUstate)
}

// bool can_serialize_FMUstate = 3;
inline void CoSimulationAttributes::clear_can_serialize_fmustate() {
  can_serialize_fmustate_ = false;
}
inline bool CoSimulationAttributes::can_serialize_fmustate() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CoSimulationAttributes.can_serialize_FMUstate)
  return can_serialize_fmustate_;
}
inline void CoSimulationAttributes::set_can_serialize_fmustate(bool value) {
  
  can_serialize_fmustate_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CoSimulationAttributes.can_serialize_FMUstate)
}

// bool provides_directional_derivative = 4;
inline void CoSimulationAttributes::clear_provides_directional_derivative() {
  provides_directional_derivative_ = false;
}
inline bool CoSimulationAttributes::provides_directional_derivative() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CoSimulationAttributes.provides_directional_derivative)
  return provides_directional_derivative_;
}
inline void CoSimulationAttributes::set_provides_directional_derivative(bool value) {
  
  provides_directional_derivative_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CoSimulationAttributes.provides_directional_derivative)
}

// bool can_handle_variable_communication_step_size = 5;
inline void CoSimulationAttributes::clear_can_handle_variable_communication_step_size() {
  can_handle_variable_communication_step_size_ = false;
}
inline bool CoSimulationAttributes::can_handle_variable_communication_step_size() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CoSimulationAttributes.can_handle_variable_communication_step_size)
  return can_handle_variable_communication_step_size_;
}
inline void CoSimulationAttributes::set_can_handle_variable_communication_step_size(bool value) {
  
  can_handle_variable_communication_step_size_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CoSimulationAttributes.can_handle_variable_communication_step_size)
}

// bool can_interpolate_inputs = 6;
inline void CoSimulationAttributes::clear_can_interpolate_inputs() {
  can_interpolate_inputs_ = false;
}
inline bool CoSimulationAttributes::can_interpolate_inputs() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CoSimulationAttributes.can_interpolate_inputs)
  return can_interpolate_inputs_;
}
inline void CoSimulationAttributes::set_can_interpolate_inputs(bool value) {
  
  can_interpolate_inputs_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CoSimulationAttributes.can_interpolate_inputs)
}

// uint32 max_output_derivative_order = 7;
inline void CoSimulationAttributes::clear_max_output_derivative_order() {
  max_output_derivative_order_ = 0u;
}
inline ::google::protobuf::uint32 CoSimulationAttributes::max_output_derivative_order() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CoSimulationAttributes.max_output_derivative_order)
  return max_output_derivative_order_;
}
inline void CoSimulationAttributes::set_max_output_derivative_order(::google::protobuf::uint32 value) {
  
  max_output_derivative_order_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CoSimulationAttributes.max_output_derivative_order)
}

// -------------------------------------------------------------------

// IntegerAttribute

// int32 min = 1;
inline void IntegerAttribute::clear_min() {
  min_ = 0;
}
inline ::google::protobuf::int32 IntegerAttribute::min() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerAttribute.min)
  return min_;
}
inline void IntegerAttribute::set_min(::google::protobuf::int32 value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerAttribute.min)
}

// int32 max = 2;
inline void IntegerAttribute::clear_max() {
  max_ = 0;
}
inline ::google::protobuf::int32 IntegerAttribute::max() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerAttribute.max)
  return max_;
}
inline void IntegerAttribute::set_max(::google::protobuf::int32 value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerAttribute.max)
}

// int32 start = 3;
inline void IntegerAttribute::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 IntegerAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerAttribute.start)
  return start_;
}
inline void IntegerAttribute::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerAttribute.start)
}

// string quantity = 4;
inline void IntegerAttribute::clear_quantity() {
  quantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IntegerAttribute::quantity() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerAttribute.quantity)
  return quantity_.GetNoArena();
}
inline void IntegerAttribute::set_quantity(const ::std::string& value) {
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerAttribute.quantity)
}
#if LANG_CXX11
inline void IntegerAttribute::set_quantity(::std::string&& value) {
  
  quantity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.IntegerAttribute.quantity)
}
#endif
inline void IntegerAttribute::set_quantity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.IntegerAttribute.quantity)
}
inline void IntegerAttribute::set_quantity(const char* value, size_t size) {
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.IntegerAttribute.quantity)
}
inline ::std::string* IntegerAttribute::mutable_quantity() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.IntegerAttribute.quantity)
  return quantity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IntegerAttribute::release_quantity() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.IntegerAttribute.quantity)
  
  return quantity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IntegerAttribute::set_allocated_quantity(::std::string* quantity) {
  if (quantity != NULL) {
    
  } else {
    
  }
  quantity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quantity);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.IntegerAttribute.quantity)
}

// -------------------------------------------------------------------

// RealAttribute

// double min = 1;
inline void RealAttribute::clear_min() {
  min_ = 0;
}
inline double RealAttribute::min() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealAttribute.min)
  return min_;
}
inline void RealAttribute::set_min(double value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealAttribute.min)
}

// double max = 2;
inline void RealAttribute::clear_max() {
  max_ = 0;
}
inline double RealAttribute::max() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealAttribute.max)
  return max_;
}
inline void RealAttribute::set_max(double value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealAttribute.max)
}

// double start = 3;
inline void RealAttribute::clear_start() {
  start_ = 0;
}
inline double RealAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealAttribute.start)
  return start_;
}
inline void RealAttribute::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealAttribute.start)
}

// string quantity = 4;
inline void RealAttribute::clear_quantity() {
  quantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealAttribute::quantity() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealAttribute.quantity)
  return quantity_.GetNoArena();
}
inline void RealAttribute::set_quantity(const ::std::string& value) {
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealAttribute.quantity)
}
#if LANG_CXX11
inline void RealAttribute::set_quantity(::std::string&& value) {
  
  quantity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.RealAttribute.quantity)
}
#endif
inline void RealAttribute::set_quantity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.RealAttribute.quantity)
}
inline void RealAttribute::set_quantity(const char* value, size_t size) {
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.RealAttribute.quantity)
}
inline ::std::string* RealAttribute::mutable_quantity() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.RealAttribute.quantity)
  return quantity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealAttribute::release_quantity() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.RealAttribute.quantity)
  
  return quantity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealAttribute::set_allocated_quantity(::std::string* quantity) {
  if (quantity != NULL) {
    
  } else {
    
  }
  quantity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quantity);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.RealAttribute.quantity)
}

// -------------------------------------------------------------------

// StringAttribute

// string start = 1;
inline void StringAttribute::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StringAttribute.start)
  return start_.GetNoArena();
}
inline void StringAttribute::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StringAttribute.start)
}
#if LANG_CXX11
inline void StringAttribute::set_start(::std::string&& value) {
  
  start_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.StringAttribute.start)
}
#endif
inline void StringAttribute::set_start(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.StringAttribute.start)
}
inline void StringAttribute::set_start(const char* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.StringAttribute.start)
}
inline ::std::string* StringAttribute::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.StringAttribute.start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringAttribute::release_start() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.StringAttribute.start)
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringAttribute::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.StringAttribute.start)
}

// -------------------------------------------------------------------

// BooleanAttribute

// bool start = 1;
inline void BooleanAttribute::clear_start() {
  start_ = false;
}
inline bool BooleanAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BooleanAttribute.start)
  return start_;
}
inline void BooleanAttribute::set_start(bool value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BooleanAttribute.start)
}

// -------------------------------------------------------------------

// EnumerationAttribute

// int32 min = 1;
inline void EnumerationAttribute::clear_min() {
  min_ = 0;
}
inline ::google::protobuf::int32 EnumerationAttribute::min() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnumerationAttribute.min)
  return min_;
}
inline void EnumerationAttribute::set_min(::google::protobuf::int32 value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnumerationAttribute.min)
}

// int32 max = 2;
inline void EnumerationAttribute::clear_max() {
  max_ = 0;
}
inline ::google::protobuf::int32 EnumerationAttribute::max() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnumerationAttribute.max)
  return max_;
}
inline void EnumerationAttribute::set_max(::google::protobuf::int32 value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnumerationAttribute.max)
}

// int32 start = 3;
inline void EnumerationAttribute::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 EnumerationAttribute::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnumerationAttribute.start)
  return start_;
}
inline void EnumerationAttribute::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnumerationAttribute.start)
}

// string quantity = 4;
inline void EnumerationAttribute::clear_quantity() {
  quantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnumerationAttribute::quantity() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnumerationAttribute.quantity)
  return quantity_.GetNoArena();
}
inline void EnumerationAttribute::set_quantity(const ::std::string& value) {
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnumerationAttribute.quantity)
}
#if LANG_CXX11
inline void EnumerationAttribute::set_quantity(::std::string&& value) {
  
  quantity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.EnumerationAttribute.quantity)
}
#endif
inline void EnumerationAttribute::set_quantity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.EnumerationAttribute.quantity)
}
inline void EnumerationAttribute::set_quantity(const char* value, size_t size) {
  
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.EnumerationAttribute.quantity)
}
inline ::std::string* EnumerationAttribute::mutable_quantity() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.EnumerationAttribute.quantity)
  return quantity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnumerationAttribute::release_quantity() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.EnumerationAttribute.quantity)
  
  return quantity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnumerationAttribute::set_allocated_quantity(::std::string* quantity) {
  if (quantity != NULL) {
    
  } else {
    
  }
  quantity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quantity);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.EnumerationAttribute.quantity)
}

// -------------------------------------------------------------------

// ScalarVariable

// uint64 value_reference = 1;
inline void ScalarVariable::clear_value_reference() {
  value_reference_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ScalarVariable::value_reference() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.value_reference)
  return value_reference_;
}
inline void ScalarVariable::set_value_reference(::google::protobuf::uint64 value) {
  
  value_reference_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.value_reference)
}

// string name = 2;
inline void ScalarVariable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::name() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.name)
  return name_.GetNoArena();
}
inline void ScalarVariable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.name)
}
#if LANG_CXX11
inline void ScalarVariable::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.name)
}
#endif
inline void ScalarVariable::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.name)
}
inline void ScalarVariable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.name)
}
inline ::std::string* ScalarVariable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_name() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.name)
}

// string description = 3;
inline void ScalarVariable::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::description() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.description)
  return description_.GetNoArena();
}
inline void ScalarVariable::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.description)
}
#if LANG_CXX11
inline void ScalarVariable::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.description)
}
#endif
inline void ScalarVariable::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.description)
}
inline void ScalarVariable::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.description)
}
inline ::std::string* ScalarVariable::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_description() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.description)
}

// string initial = 4;
inline void ScalarVariable::clear_initial() {
  initial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::initial() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.initial)
  return initial_.GetNoArena();
}
inline void ScalarVariable::set_initial(const ::std::string& value) {
  
  initial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.initial)
}
#if LANG_CXX11
inline void ScalarVariable::set_initial(::std::string&& value) {
  
  initial_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.initial)
}
#endif
inline void ScalarVariable::set_initial(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  initial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.initial)
}
inline void ScalarVariable::set_initial(const char* value, size_t size) {
  
  initial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.initial)
}
inline ::std::string* ScalarVariable::mutable_initial() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.initial)
  return initial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_initial() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.initial)
  
  return initial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_initial(::std::string* initial) {
  if (initial != NULL) {
    
  } else {
    
  }
  initial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), initial);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.initial)
}

// string causality = 5;
inline void ScalarVariable::clear_causality() {
  causality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::causality() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.causality)
  return causality_.GetNoArena();
}
inline void ScalarVariable::set_causality(const ::std::string& value) {
  
  causality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.causality)
}
#if LANG_CXX11
inline void ScalarVariable::set_causality(::std::string&& value) {
  
  causality_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.causality)
}
#endif
inline void ScalarVariable::set_causality(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  causality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.causality)
}
inline void ScalarVariable::set_causality(const char* value, size_t size) {
  
  causality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.causality)
}
inline ::std::string* ScalarVariable::mutable_causality() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.causality)
  return causality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_causality() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.causality)
  
  return causality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_causality(::std::string* causality) {
  if (causality != NULL) {
    
  } else {
    
  }
  causality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), causality);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.causality)
}

// string variability = 6;
inline void ScalarVariable::clear_variability() {
  variability_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScalarVariable::variability() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.variability)
  return variability_.GetNoArena();
}
inline void ScalarVariable::set_variability(const ::std::string& value) {
  
  variability_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ScalarVariable.variability)
}
#if LANG_CXX11
inline void ScalarVariable::set_variability(::std::string&& value) {
  
  variability_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ScalarVariable.variability)
}
#endif
inline void ScalarVariable::set_variability(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variability_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ScalarVariable.variability)
}
inline void ScalarVariable::set_variability(const char* value, size_t size) {
  
  variability_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ScalarVariable.variability)
}
inline ::std::string* ScalarVariable::mutable_variability() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.variability)
  return variability_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalarVariable::release_variability() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.variability)
  
  return variability_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalarVariable::set_allocated_variability(::std::string* variability) {
  if (variability != NULL) {
    
  } else {
    
  }
  variability_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variability);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ScalarVariable.variability)
}

// .fmuproxy.grpc.IntegerAttribute integer_attribute = 10;
inline bool ScalarVariable::has_integer_attribute() const {
  return attribute_case() == kIntegerAttribute;
}
inline void ScalarVariable::set_has_integer_attribute() {
  _oneof_case_[0] = kIntegerAttribute;
}
inline void ScalarVariable::clear_integer_attribute() {
  if (has_integer_attribute()) {
    delete attribute_.integer_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::IntegerAttribute& ScalarVariable::_internal_integer_attribute() const {
  return *attribute_.integer_attribute_;
}
inline ::fmuproxy::grpc::IntegerAttribute* ScalarVariable::release_integer_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.integer_attribute)
  if (has_integer_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::IntegerAttribute* temp = attribute_.integer_attribute_;
    attribute_.integer_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::IntegerAttribute& ScalarVariable::integer_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.integer_attribute)
  return has_integer_attribute()
      ? *attribute_.integer_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::IntegerAttribute*>(&::fmuproxy::grpc::_IntegerAttribute_default_instance_);
}
inline ::fmuproxy::grpc::IntegerAttribute* ScalarVariable::mutable_integer_attribute() {
  if (!has_integer_attribute()) {
    clear_attribute();
    set_has_integer_attribute();
    attribute_.integer_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::IntegerAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.integer_attribute)
  return attribute_.integer_attribute_;
}

// .fmuproxy.grpc.RealAttribute real_attribute = 11;
inline bool ScalarVariable::has_real_attribute() const {
  return attribute_case() == kRealAttribute;
}
inline void ScalarVariable::set_has_real_attribute() {
  _oneof_case_[0] = kRealAttribute;
}
inline void ScalarVariable::clear_real_attribute() {
  if (has_real_attribute()) {
    delete attribute_.real_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::RealAttribute& ScalarVariable::_internal_real_attribute() const {
  return *attribute_.real_attribute_;
}
inline ::fmuproxy::grpc::RealAttribute* ScalarVariable::release_real_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.real_attribute)
  if (has_real_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::RealAttribute* temp = attribute_.real_attribute_;
    attribute_.real_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::RealAttribute& ScalarVariable::real_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.real_attribute)
  return has_real_attribute()
      ? *attribute_.real_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::RealAttribute*>(&::fmuproxy::grpc::_RealAttribute_default_instance_);
}
inline ::fmuproxy::grpc::RealAttribute* ScalarVariable::mutable_real_attribute() {
  if (!has_real_attribute()) {
    clear_attribute();
    set_has_real_attribute();
    attribute_.real_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::RealAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.real_attribute)
  return attribute_.real_attribute_;
}

// .fmuproxy.grpc.StringAttribute string_attribute = 12;
inline bool ScalarVariable::has_string_attribute() const {
  return attribute_case() == kStringAttribute;
}
inline void ScalarVariable::set_has_string_attribute() {
  _oneof_case_[0] = kStringAttribute;
}
inline void ScalarVariable::clear_string_attribute() {
  if (has_string_attribute()) {
    delete attribute_.string_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::StringAttribute& ScalarVariable::_internal_string_attribute() const {
  return *attribute_.string_attribute_;
}
inline ::fmuproxy::grpc::StringAttribute* ScalarVariable::release_string_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.string_attribute)
  if (has_string_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::StringAttribute* temp = attribute_.string_attribute_;
    attribute_.string_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::StringAttribute& ScalarVariable::string_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.string_attribute)
  return has_string_attribute()
      ? *attribute_.string_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::StringAttribute*>(&::fmuproxy::grpc::_StringAttribute_default_instance_);
}
inline ::fmuproxy::grpc::StringAttribute* ScalarVariable::mutable_string_attribute() {
  if (!has_string_attribute()) {
    clear_attribute();
    set_has_string_attribute();
    attribute_.string_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::StringAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.string_attribute)
  return attribute_.string_attribute_;
}

// .fmuproxy.grpc.BooleanAttribute boolean_attribute = 13;
inline bool ScalarVariable::has_boolean_attribute() const {
  return attribute_case() == kBooleanAttribute;
}
inline void ScalarVariable::set_has_boolean_attribute() {
  _oneof_case_[0] = kBooleanAttribute;
}
inline void ScalarVariable::clear_boolean_attribute() {
  if (has_boolean_attribute()) {
    delete attribute_.boolean_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::BooleanAttribute& ScalarVariable::_internal_boolean_attribute() const {
  return *attribute_.boolean_attribute_;
}
inline ::fmuproxy::grpc::BooleanAttribute* ScalarVariable::release_boolean_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.boolean_attribute)
  if (has_boolean_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::BooleanAttribute* temp = attribute_.boolean_attribute_;
    attribute_.boolean_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::BooleanAttribute& ScalarVariable::boolean_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.boolean_attribute)
  return has_boolean_attribute()
      ? *attribute_.boolean_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::BooleanAttribute*>(&::fmuproxy::grpc::_BooleanAttribute_default_instance_);
}
inline ::fmuproxy::grpc::BooleanAttribute* ScalarVariable::mutable_boolean_attribute() {
  if (!has_boolean_attribute()) {
    clear_attribute();
    set_has_boolean_attribute();
    attribute_.boolean_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::BooleanAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.boolean_attribute)
  return attribute_.boolean_attribute_;
}

// .fmuproxy.grpc.EnumerationAttribute enumeration_attribute = 14;
inline bool ScalarVariable::has_enumeration_attribute() const {
  return attribute_case() == kEnumerationAttribute;
}
inline void ScalarVariable::set_has_enumeration_attribute() {
  _oneof_case_[0] = kEnumerationAttribute;
}
inline void ScalarVariable::clear_enumeration_attribute() {
  if (has_enumeration_attribute()) {
    delete attribute_.enumeration_attribute_;
    clear_has_attribute();
  }
}
inline const ::fmuproxy::grpc::EnumerationAttribute& ScalarVariable::_internal_enumeration_attribute() const {
  return *attribute_.enumeration_attribute_;
}
inline ::fmuproxy::grpc::EnumerationAttribute* ScalarVariable::release_enumeration_attribute() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ScalarVariable.enumeration_attribute)
  if (has_enumeration_attribute()) {
    clear_has_attribute();
      ::fmuproxy::grpc::EnumerationAttribute* temp = attribute_.enumeration_attribute_;
    attribute_.enumeration_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::fmuproxy::grpc::EnumerationAttribute& ScalarVariable::enumeration_attribute() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ScalarVariable.enumeration_attribute)
  return has_enumeration_attribute()
      ? *attribute_.enumeration_attribute_
      : *reinterpret_cast< ::fmuproxy::grpc::EnumerationAttribute*>(&::fmuproxy::grpc::_EnumerationAttribute_default_instance_);
}
inline ::fmuproxy::grpc::EnumerationAttribute* ScalarVariable::mutable_enumeration_attribute() {
  if (!has_enumeration_attribute()) {
    clear_attribute();
    set_has_enumeration_attribute();
    attribute_.enumeration_attribute_ = CreateMaybeMessage< ::fmuproxy::grpc::EnumerationAttribute >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ScalarVariable.enumeration_attribute)
  return attribute_.enumeration_attribute_;
}

inline bool ScalarVariable::has_attribute() const {
  return attribute_case() != ATTRIBUTE_NOT_SET;
}
inline void ScalarVariable::clear_has_attribute() {
  _oneof_case_[0] = ATTRIBUTE_NOT_SET;
}
inline ScalarVariable::AttributeCase ScalarVariable::attribute_case() const {
  return ScalarVariable::AttributeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DefaultExperiment

// double start_time = 1;
inline void DefaultExperiment::clear_start_time() {
  start_time_ = 0;
}
inline double DefaultExperiment::start_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.start_time)
  return start_time_;
}
inline void DefaultExperiment::set_start_time(double value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.start_time)
}

// double stop_time = 2;
inline void DefaultExperiment::clear_stop_time() {
  stop_time_ = 0;
}
inline double DefaultExperiment::stop_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.stop_time)
  return stop_time_;
}
inline void DefaultExperiment::set_stop_time(double value) {
  
  stop_time_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.stop_time)
}

// double tolerance = 3;
inline void DefaultExperiment::clear_tolerance() {
  tolerance_ = 0;
}
inline double DefaultExperiment::tolerance() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.tolerance)
  return tolerance_;
}
inline void DefaultExperiment::set_tolerance(double value) {
  
  tolerance_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.tolerance)
}

// double step_size = 4;
inline void DefaultExperiment::clear_step_size() {
  step_size_ = 0;
}
inline double DefaultExperiment::step_size() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DefaultExperiment.step_size)
  return step_size_;
}
inline void DefaultExperiment::set_step_size(double value) {
  
  step_size_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DefaultExperiment.step_size)
}

// -------------------------------------------------------------------

// Unknown

// uint32 index = 1;
inline void Unknown::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 Unknown::index() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Unknown.index)
  return index_;
}
inline void Unknown::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Unknown.index)
}

// repeated uint32 dependencies = 2;
inline int Unknown::dependencies_size() const {
  return dependencies_.size();
}
inline void Unknown::clear_dependencies() {
  dependencies_.Clear();
}
inline ::google::protobuf::uint32 Unknown::dependencies(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Unknown.dependencies)
  return dependencies_.Get(index);
}
inline void Unknown::set_dependencies(int index, ::google::protobuf::uint32 value) {
  dependencies_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Unknown.dependencies)
}
inline void Unknown::add_dependencies(::google::protobuf::uint32 value) {
  dependencies_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.Unknown.dependencies)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Unknown::dependencies() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.Unknown.dependencies)
  return dependencies_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Unknown::mutable_dependencies() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.Unknown.dependencies)
  return &dependencies_;
}

// repeated string dependencies_kind = 3;
inline int Unknown::dependencies_kind_size() const {
  return dependencies_kind_.size();
}
inline void Unknown::clear_dependencies_kind() {
  dependencies_kind_.Clear();
}
inline const ::std::string& Unknown::dependencies_kind(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Unknown.dependencies_kind)
  return dependencies_kind_.Get(index);
}
inline ::std::string* Unknown::mutable_dependencies_kind(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.Unknown.dependencies_kind)
  return dependencies_kind_.Mutable(index);
}
inline void Unknown::set_dependencies_kind(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Unknown.dependencies_kind)
  dependencies_kind_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Unknown::set_dependencies_kind(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Unknown.dependencies_kind)
  dependencies_kind_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Unknown::set_dependencies_kind(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dependencies_kind_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.Unknown.dependencies_kind)
}
inline void Unknown::set_dependencies_kind(int index, const char* value, size_t size) {
  dependencies_kind_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.Unknown.dependencies_kind)
}
inline ::std::string* Unknown::add_dependencies_kind() {
  // @@protoc_insertion_point(field_add_mutable:fmuproxy.grpc.Unknown.dependencies_kind)
  return dependencies_kind_.Add();
}
inline void Unknown::add_dependencies_kind(const ::std::string& value) {
  dependencies_kind_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.Unknown.dependencies_kind)
}
#if LANG_CXX11
inline void Unknown::add_dependencies_kind(::std::string&& value) {
  dependencies_kind_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.Unknown.dependencies_kind)
}
#endif
inline void Unknown::add_dependencies_kind(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dependencies_kind_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fmuproxy.grpc.Unknown.dependencies_kind)
}
inline void Unknown::add_dependencies_kind(const char* value, size_t size) {
  dependencies_kind_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fmuproxy.grpc.Unknown.dependencies_kind)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Unknown::dependencies_kind() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.Unknown.dependencies_kind)
  return dependencies_kind_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Unknown::mutable_dependencies_kind() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.Unknown.dependencies_kind)
  return &dependencies_kind_;
}

// -------------------------------------------------------------------

// ModelStructure

// repeated .fmuproxy.grpc.Unknown outputs = 1;
inline int ModelStructure::outputs_size() const {
  return outputs_.size();
}
inline void ModelStructure::clear_outputs() {
  outputs_.Clear();
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
ModelStructure::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelStructure.outputs)
  return &outputs_;
}
inline const ::fmuproxy::grpc::Unknown& ModelStructure::outputs(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_.Get(index);
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::add_outputs() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
ModelStructure::outputs() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelStructure.outputs)
  return outputs_;
}

// repeated .fmuproxy.grpc.Unknown derivatives = 2;
inline int ModelStructure::derivatives_size() const {
  return derivatives_.size();
}
inline void ModelStructure::clear_derivatives() {
  derivatives_.Clear();
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::mutable_derivatives(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
ModelStructure::mutable_derivatives() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelStructure.derivatives)
  return &derivatives_;
}
inline const ::fmuproxy::grpc::Unknown& ModelStructure::derivatives(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_.Get(index);
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::add_derivatives() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
ModelStructure::derivatives() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelStructure.derivatives)
  return derivatives_;
}

// repeated .fmuproxy.grpc.Unknown initial_unknowns = 3;
inline int ModelStructure::initial_unknowns_size() const {
  return initial_unknowns_.size();
}
inline void ModelStructure::clear_initial_unknowns() {
  initial_unknowns_.Clear();
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::mutable_initial_unknowns(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >*
ModelStructure::mutable_initial_unknowns() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return &initial_unknowns_;
}
inline const ::fmuproxy::grpc::Unknown& ModelStructure::initial_unknowns(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_.Get(index);
}
inline ::fmuproxy::grpc::Unknown* ModelStructure::add_initial_unknowns() {
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fmuproxy::grpc::Unknown >&
ModelStructure::initial_unknowns() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ModelStructure.initial_unknowns)
  return initial_unknowns_;
}

// -------------------------------------------------------------------

// FmuId

// string value = 1;
inline void FmuId::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FmuId::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.FmuId.value)
  return value_.GetNoArena();
}
inline void FmuId::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.FmuId.value)
}
#if LANG_CXX11
inline void FmuId::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.FmuId.value)
}
#endif
inline void FmuId::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.FmuId.value)
}
inline void FmuId::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.FmuId.value)
}
inline ::std::string* FmuId::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.FmuId.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FmuId::release_value() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.FmuId.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FmuId::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.FmuId.value)
}

// -------------------------------------------------------------------

// InstanceId

// string value = 1;
inline void InstanceId::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstanceId::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.InstanceId.value)
  return value_.GetNoArena();
}
inline void InstanceId::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.InstanceId.value)
}
#if LANG_CXX11
inline void InstanceId::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.InstanceId.value)
}
#endif
inline void InstanceId::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.InstanceId.value)
}
inline void InstanceId::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.InstanceId.value)
}
inline ::std::string* InstanceId::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.InstanceId.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstanceId::release_value() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.InstanceId.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstanceId::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.InstanceId.value)
}

// -------------------------------------------------------------------

// ModelDescriptionXml

// string xml = 1;
inline void ModelDescriptionXml::clear_xml() {
  xml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelDescriptionXml::xml() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ModelDescriptionXml.xml)
  return xml_.GetNoArena();
}
inline void ModelDescriptionXml::set_xml(const ::std::string& value) {
  
  xml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ModelDescriptionXml.xml)
}
#if LANG_CXX11
inline void ModelDescriptionXml::set_xml(::std::string&& value) {
  
  xml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ModelDescriptionXml.xml)
}
#endif
inline void ModelDescriptionXml::set_xml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ModelDescriptionXml.xml)
}
inline void ModelDescriptionXml::set_xml(const char* value, size_t size) {
  
  xml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ModelDescriptionXml.xml)
}
inline ::std::string* ModelDescriptionXml::mutable_xml() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ModelDescriptionXml.xml)
  return xml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelDescriptionXml::release_xml() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ModelDescriptionXml.xml)
  
  return xml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelDescriptionXml::set_allocated_xml(::std::string* xml) {
  if (xml != NULL) {
    
  } else {
    
  }
  xml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xml);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ModelDescriptionXml.xml)
}

// -------------------------------------------------------------------

// StatusResponse

// .fmuproxy.grpc.Status status = 1;
inline void StatusResponse::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status StatusResponse::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StatusResponse.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void StatusResponse::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StatusResponse.status)
}

// -------------------------------------------------------------------

// StepResponse

// .fmuproxy.grpc.Status status = 1;
inline void StepResponse::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status StepResponse::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepResponse.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void StepResponse::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepResponse.status)
}

// double simulation_time = 2;
inline void StepResponse::clear_simulation_time() {
  simulation_time_ = 0;
}
inline double StepResponse::simulation_time() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepResponse.simulation_time)
  return simulation_time_;
}
inline void StepResponse::set_simulation_time(double value) {
  
  simulation_time_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepResponse.simulation_time)
}

// -------------------------------------------------------------------

// CreateInstanceFromCSRequest

// string fmu_id = 1;
inline void CreateInstanceFromCSRequest::clear_fmu_id() {
  fmu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateInstanceFromCSRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
  return fmu_id_.GetNoArena();
}
inline void CreateInstanceFromCSRequest::set_fmu_id(const ::std::string& value) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
}
#if LANG_CXX11
inline void CreateInstanceFromCSRequest::set_fmu_id(::std::string&& value) {
  
  fmu_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
}
#endif
inline void CreateInstanceFromCSRequest::set_fmu_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
}
inline void CreateInstanceFromCSRequest::set_fmu_id(const char* value, size_t size) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
}
inline ::std::string* CreateInstanceFromCSRequest::mutable_fmu_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
  return fmu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateInstanceFromCSRequest::release_fmu_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
  
  return fmu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateInstanceFromCSRequest::set_allocated_fmu_id(::std::string* fmu_id) {
  if (fmu_id != NULL) {
    
  } else {
    
  }
  fmu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmu_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.CreateInstanceFromCSRequest.fmu_id)
}

// -------------------------------------------------------------------

// CreateInstanceFromMERequest

// string fmu_id = 1;
inline void CreateInstanceFromMERequest::clear_fmu_id() {
  fmu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateInstanceFromMERequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
  return fmu_id_.GetNoArena();
}
inline void CreateInstanceFromMERequest::set_fmu_id(const ::std::string& value) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
}
#if LANG_CXX11
inline void CreateInstanceFromMERequest::set_fmu_id(::std::string&& value) {
  
  fmu_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
}
#endif
inline void CreateInstanceFromMERequest::set_fmu_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
}
inline void CreateInstanceFromMERequest::set_fmu_id(const char* value, size_t size) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
}
inline ::std::string* CreateInstanceFromMERequest::mutable_fmu_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
  return fmu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateInstanceFromMERequest::release_fmu_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
  
  return fmu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateInstanceFromMERequest::set_allocated_fmu_id(::std::string* fmu_id) {
  if (fmu_id != NULL) {
    
  } else {
    
  }
  fmu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmu_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.CreateInstanceFromMERequest.fmu_id)
}

// .fmuproxy.grpc.Solver solver = 2;
inline bool CreateInstanceFromMERequest::has_solver() const {
  return this != internal_default_instance() && solver_ != NULL;
}
inline void CreateInstanceFromMERequest::clear_solver() {
  if (GetArenaNoVirtual() == NULL && solver_ != NULL) {
    delete solver_;
  }
  solver_ = NULL;
}
inline const ::fmuproxy::grpc::Solver& CreateInstanceFromMERequest::_internal_solver() const {
  return *solver_;
}
inline const ::fmuproxy::grpc::Solver& CreateInstanceFromMERequest::solver() const {
  const ::fmuproxy::grpc::Solver* p = solver_;
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CreateInstanceFromMERequest.solver)
  return p != NULL ? *p : *reinterpret_cast<const ::fmuproxy::grpc::Solver*>(
      &::fmuproxy::grpc::_Solver_default_instance_);
}
inline ::fmuproxy::grpc::Solver* CreateInstanceFromMERequest::release_solver() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.CreateInstanceFromMERequest.solver)
  
  ::fmuproxy::grpc::Solver* temp = solver_;
  solver_ = NULL;
  return temp;
}
inline ::fmuproxy::grpc::Solver* CreateInstanceFromMERequest::mutable_solver() {
  
  if (solver_ == NULL) {
    auto* p = CreateMaybeMessage<::fmuproxy::grpc::Solver>(GetArenaNoVirtual());
    solver_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.CreateInstanceFromMERequest.solver)
  return solver_;
}
inline void CreateInstanceFromMERequest::set_allocated_solver(::fmuproxy::grpc::Solver* solver) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete solver_;
  }
  if (solver) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      solver = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, solver, submessage_arena);
    }
    
  } else {
    
  }
  solver_ = solver;
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.CreateInstanceFromMERequest.solver)
}

// -------------------------------------------------------------------

// GetModelDescriptionRequest

// string fmu_id = 1;
inline void GetModelDescriptionRequest::clear_fmu_id() {
  fmu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModelDescriptionRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
  return fmu_id_.GetNoArena();
}
inline void GetModelDescriptionRequest::set_fmu_id(const ::std::string& value) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
}
#if LANG_CXX11
inline void GetModelDescriptionRequest::set_fmu_id(::std::string&& value) {
  
  fmu_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
}
#endif
inline void GetModelDescriptionRequest::set_fmu_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
}
inline void GetModelDescriptionRequest::set_fmu_id(const char* value, size_t size) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
}
inline ::std::string* GetModelDescriptionRequest::mutable_fmu_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
  return fmu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModelDescriptionRequest::release_fmu_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
  
  return fmu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModelDescriptionRequest::set_allocated_fmu_id(::std::string* fmu_id) {
  if (fmu_id != NULL) {
    
  } else {
    
  }
  fmu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmu_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.GetModelDescriptionRequest.fmu_id)
}

// -------------------------------------------------------------------

// GetCoSimulationAttributesRequest

// string instance_id = 1;
inline void GetCoSimulationAttributesRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCoSimulationAttributesRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void GetCoSimulationAttributesRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
}
#if LANG_CXX11
inline void GetCoSimulationAttributesRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
}
#endif
inline void GetCoSimulationAttributesRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
}
inline void GetCoSimulationAttributesRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
}
inline ::std::string* GetCoSimulationAttributesRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCoSimulationAttributesRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCoSimulationAttributesRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.GetCoSimulationAttributesRequest.instance_id)
}

// -------------------------------------------------------------------

// SetupExperimentRequest

// string instance_id = 1;
inline void SetupExperimentRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetupExperimentRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SetupExperimentRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void SetupExperimentRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SetupExperimentRequest.instance_id)
}
#if LANG_CXX11
inline void SetupExperimentRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.SetupExperimentRequest.instance_id)
}
#endif
inline void SetupExperimentRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.SetupExperimentRequest.instance_id)
}
inline void SetupExperimentRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.SetupExperimentRequest.instance_id)
}
inline ::std::string* SetupExperimentRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.SetupExperimentRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetupExperimentRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.SetupExperimentRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupExperimentRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.SetupExperimentRequest.instance_id)
}

// double start = 2;
inline void SetupExperimentRequest::clear_start() {
  start_ = 0;
}
inline double SetupExperimentRequest::start() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SetupExperimentRequest.start)
  return start_;
}
inline void SetupExperimentRequest::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SetupExperimentRequest.start)
}

// double stop = 3;
inline void SetupExperimentRequest::clear_stop() {
  stop_ = 0;
}
inline double SetupExperimentRequest::stop() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SetupExperimentRequest.stop)
  return stop_;
}
inline void SetupExperimentRequest::set_stop(double value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SetupExperimentRequest.stop)
}

// double tolerance = 4;
inline void SetupExperimentRequest::clear_tolerance() {
  tolerance_ = 0;
}
inline double SetupExperimentRequest::tolerance() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SetupExperimentRequest.tolerance)
  return tolerance_;
}
inline void SetupExperimentRequest::set_tolerance(double value) {
  
  tolerance_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SetupExperimentRequest.tolerance)
}

// -------------------------------------------------------------------

// EnterInitializationModeRequest

// string instance_id = 1;
inline void EnterInitializationModeRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnterInitializationModeRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void EnterInitializationModeRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
}
#if LANG_CXX11
inline void EnterInitializationModeRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
}
#endif
inline void EnterInitializationModeRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
}
inline void EnterInitializationModeRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
}
inline ::std::string* EnterInitializationModeRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterInitializationModeRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterInitializationModeRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.EnterInitializationModeRequest.instance_id)
}

// -------------------------------------------------------------------

// ExitInitializationModeRequest

// string instance_id = 1;
inline void ExitInitializationModeRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExitInitializationModeRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void ExitInitializationModeRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
}
#if LANG_CXX11
inline void ExitInitializationModeRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
}
#endif
inline void ExitInitializationModeRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
}
inline void ExitInitializationModeRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
}
inline ::std::string* ExitInitializationModeRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExitInitializationModeRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExitInitializationModeRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ExitInitializationModeRequest.instance_id)
}

// -------------------------------------------------------------------

// StepRequest

// string instance_id = 1;
inline void StepRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StepRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void StepRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepRequest.instance_id)
}
#if LANG_CXX11
inline void StepRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.StepRequest.instance_id)
}
#endif
inline void StepRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.StepRequest.instance_id)
}
inline void StepRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.StepRequest.instance_id)
}
inline ::std::string* StepRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.StepRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StepRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.StepRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StepRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.StepRequest.instance_id)
}

// double step_size = 2;
inline void StepRequest::clear_step_size() {
  step_size_ = 0;
}
inline double StepRequest::step_size() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StepRequest.step_size)
  return step_size_;
}
inline void StepRequest::set_step_size(double value) {
  
  step_size_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StepRequest.step_size)
}

// -------------------------------------------------------------------

// ResetRequest

// string instance_id = 1;
inline void ResetRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResetRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ResetRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void ResetRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ResetRequest.instance_id)
}
#if LANG_CXX11
inline void ResetRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ResetRequest.instance_id)
}
#endif
inline void ResetRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ResetRequest.instance_id)
}
inline void ResetRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ResetRequest.instance_id)
}
inline ::std::string* ResetRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ResetRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResetRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ResetRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResetRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ResetRequest.instance_id)
}

// -------------------------------------------------------------------

// TerminateRequest

// string instance_id = 1;
inline void TerminateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.TerminateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void TerminateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.TerminateRequest.instance_id)
}
#if LANG_CXX11
inline void TerminateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.TerminateRequest.instance_id)
}
#endif
inline void TerminateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.TerminateRequest.instance_id)
}
inline void TerminateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.TerminateRequest.instance_id)
}
inline ::std::string* TerminateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.TerminateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.TerminateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.TerminateRequest.instance_id)
}

// -------------------------------------------------------------------

// ReadRequest

// string instance_id = 1;
inline void ReadRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ReadRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void ReadRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ReadRequest.instance_id)
}
#if LANG_CXX11
inline void ReadRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.ReadRequest.instance_id)
}
#endif
inline void ReadRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.ReadRequest.instance_id)
}
inline void ReadRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.ReadRequest.instance_id)
}
inline ::std::string* ReadRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.ReadRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.ReadRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.ReadRequest.instance_id)
}

// repeated uint64 value_references = 2;
inline int ReadRequest::value_references_size() const {
  return value_references_.size();
}
inline void ReadRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint64 ReadRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.ReadRequest.value_references)
  return value_references_.Get(index);
}
inline void ReadRequest::set_value_references(int index, ::google::protobuf::uint64 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.ReadRequest.value_references)
}
inline void ReadRequest::add_value_references(::google::protobuf::uint64 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.ReadRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ReadRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.ReadRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ReadRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.ReadRequest.value_references)
  return &value_references_;
}

// -------------------------------------------------------------------

// WriteIntegerRequest

// string instance_id = 1;
inline void WriteIntegerRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteIntegerRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteIntegerRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void WriteIntegerRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteIntegerRequest.instance_id)
}
#if LANG_CXX11
inline void WriteIntegerRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.WriteIntegerRequest.instance_id)
}
#endif
inline void WriteIntegerRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.WriteIntegerRequest.instance_id)
}
inline void WriteIntegerRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.WriteIntegerRequest.instance_id)
}
inline ::std::string* WriteIntegerRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.WriteIntegerRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteIntegerRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.WriteIntegerRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteIntegerRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.WriteIntegerRequest.instance_id)
}

// repeated uint64 value_references = 2;
inline int WriteIntegerRequest::value_references_size() const {
  return value_references_.size();
}
inline void WriteIntegerRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint64 WriteIntegerRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteIntegerRequest.value_references)
  return value_references_.Get(index);
}
inline void WriteIntegerRequest::set_value_references(int index, ::google::protobuf::uint64 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteIntegerRequest.value_references)
}
inline void WriteIntegerRequest::add_value_references(::google::protobuf::uint64 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteIntegerRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WriteIntegerRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteIntegerRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WriteIntegerRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteIntegerRequest.value_references)
  return &value_references_;
}

// repeated int32 values = 3;
inline int WriteIntegerRequest::values_size() const {
  return values_.size();
}
inline void WriteIntegerRequest::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 WriteIntegerRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteIntegerRequest.values)
  return values_.Get(index);
}
inline void WriteIntegerRequest::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteIntegerRequest.values)
}
inline void WriteIntegerRequest::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteIntegerRequest.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WriteIntegerRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteIntegerRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WriteIntegerRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteIntegerRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// WriteRealRequest

// string instance_id = 1;
inline void WriteRealRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRealRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteRealRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void WriteRealRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteRealRequest.instance_id)
}
#if LANG_CXX11
inline void WriteRealRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.WriteRealRequest.instance_id)
}
#endif
inline void WriteRealRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.WriteRealRequest.instance_id)
}
inline void WriteRealRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.WriteRealRequest.instance_id)
}
inline ::std::string* WriteRealRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.WriteRealRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRealRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.WriteRealRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRealRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.WriteRealRequest.instance_id)
}

// repeated uint64 value_references = 2;
inline int WriteRealRequest::value_references_size() const {
  return value_references_.size();
}
inline void WriteRealRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint64 WriteRealRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteRealRequest.value_references)
  return value_references_.Get(index);
}
inline void WriteRealRequest::set_value_references(int index, ::google::protobuf::uint64 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteRealRequest.value_references)
}
inline void WriteRealRequest::add_value_references(::google::protobuf::uint64 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteRealRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WriteRealRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteRealRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WriteRealRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteRealRequest.value_references)
  return &value_references_;
}

// repeated double values = 3;
inline int WriteRealRequest::values_size() const {
  return values_.size();
}
inline void WriteRealRequest::clear_values() {
  values_.Clear();
}
inline double WriteRealRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteRealRequest.values)
  return values_.Get(index);
}
inline void WriteRealRequest::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteRealRequest.values)
}
inline void WriteRealRequest::add_values(double value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteRealRequest.values)
}
inline const ::google::protobuf::RepeatedField< double >&
WriteRealRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteRealRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< double >*
WriteRealRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteRealRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// WriteStringRequest

// string instance_id = 1;
inline void WriteStringRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteStringRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteStringRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void WriteStringRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteStringRequest.instance_id)
}
#if LANG_CXX11
inline void WriteStringRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.WriteStringRequest.instance_id)
}
#endif
inline void WriteStringRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.WriteStringRequest.instance_id)
}
inline void WriteStringRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.WriteStringRequest.instance_id)
}
inline ::std::string* WriteStringRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.WriteStringRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteStringRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.WriteStringRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteStringRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.WriteStringRequest.instance_id)
}

// repeated uint64 value_references = 2;
inline int WriteStringRequest::value_references_size() const {
  return value_references_.size();
}
inline void WriteStringRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint64 WriteStringRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteStringRequest.value_references)
  return value_references_.Get(index);
}
inline void WriteStringRequest::set_value_references(int index, ::google::protobuf::uint64 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteStringRequest.value_references)
}
inline void WriteStringRequest::add_value_references(::google::protobuf::uint64 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteStringRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WriteStringRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteStringRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WriteStringRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteStringRequest.value_references)
  return &value_references_;
}

// repeated string values = 3;
inline int WriteStringRequest::values_size() const {
  return values_.size();
}
inline void WriteStringRequest::clear_values() {
  values_.Clear();
}
inline const ::std::string& WriteStringRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteStringRequest.values)
  return values_.Get(index);
}
inline ::std::string* WriteStringRequest::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.WriteStringRequest.values)
  return values_.Mutable(index);
}
inline void WriteStringRequest::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteStringRequest.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void WriteStringRequest::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteStringRequest.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void WriteStringRequest::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.WriteStringRequest.values)
}
inline void WriteStringRequest::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.WriteStringRequest.values)
}
inline ::std::string* WriteStringRequest::add_values() {
  // @@protoc_insertion_point(field_add_mutable:fmuproxy.grpc.WriteStringRequest.values)
  return values_.Add();
}
inline void WriteStringRequest::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteStringRequest.values)
}
#if LANG_CXX11
inline void WriteStringRequest::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteStringRequest.values)
}
#endif
inline void WriteStringRequest::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fmuproxy.grpc.WriteStringRequest.values)
}
inline void WriteStringRequest::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fmuproxy.grpc.WriteStringRequest.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WriteStringRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteStringRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WriteStringRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteStringRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// WriteBooleanRequest

// string instance_id = 1;
inline void WriteBooleanRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteBooleanRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteBooleanRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void WriteBooleanRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteBooleanRequest.instance_id)
}
#if LANG_CXX11
inline void WriteBooleanRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.WriteBooleanRequest.instance_id)
}
#endif
inline void WriteBooleanRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.WriteBooleanRequest.instance_id)
}
inline void WriteBooleanRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.WriteBooleanRequest.instance_id)
}
inline ::std::string* WriteBooleanRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.WriteBooleanRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteBooleanRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.WriteBooleanRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteBooleanRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.WriteBooleanRequest.instance_id)
}

// repeated uint64 value_references = 2;
inline int WriteBooleanRequest::value_references_size() const {
  return value_references_.size();
}
inline void WriteBooleanRequest::clear_value_references() {
  value_references_.Clear();
}
inline ::google::protobuf::uint64 WriteBooleanRequest::value_references(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteBooleanRequest.value_references)
  return value_references_.Get(index);
}
inline void WriteBooleanRequest::set_value_references(int index, ::google::protobuf::uint64 value) {
  value_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteBooleanRequest.value_references)
}
inline void WriteBooleanRequest::add_value_references(::google::protobuf::uint64 value) {
  value_references_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteBooleanRequest.value_references)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WriteBooleanRequest::value_references() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteBooleanRequest.value_references)
  return value_references_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WriteBooleanRequest::mutable_value_references() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteBooleanRequest.value_references)
  return &value_references_;
}

// repeated bool values = 3;
inline int WriteBooleanRequest::values_size() const {
  return values_.size();
}
inline void WriteBooleanRequest::clear_values() {
  values_.Clear();
}
inline bool WriteBooleanRequest::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.WriteBooleanRequest.values)
  return values_.Get(index);
}
inline void WriteBooleanRequest::set_values(int index, bool value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.WriteBooleanRequest.values)
}
inline void WriteBooleanRequest::add_values(bool value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.WriteBooleanRequest.values)
}
inline const ::google::protobuf::RepeatedField< bool >&
WriteBooleanRequest::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.WriteBooleanRequest.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< bool >*
WriteBooleanRequest::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.WriteBooleanRequest.values)
  return &values_;
}

// -------------------------------------------------------------------

// IntegerRead

// repeated int32 values = 1;
inline int IntegerRead::values_size() const {
  return values_.size();
}
inline void IntegerRead::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 IntegerRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerRead.values)
  return values_.Get(index);
}
inline void IntegerRead::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerRead.values)
}
inline void IntegerRead::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.IntegerRead.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IntegerRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.IntegerRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IntegerRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.IntegerRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void IntegerRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status IntegerRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.IntegerRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void IntegerRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.IntegerRead.status)
}

// -------------------------------------------------------------------

// RealRead

// repeated double values = 1;
inline int RealRead::values_size() const {
  return values_.size();
}
inline void RealRead::clear_values() {
  values_.Clear();
}
inline double RealRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealRead.values)
  return values_.Get(index);
}
inline void RealRead::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealRead.values)
}
inline void RealRead::add_values(double value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.RealRead.values)
}
inline const ::google::protobuf::RepeatedField< double >&
RealRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.RealRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< double >*
RealRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.RealRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void RealRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status RealRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.RealRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void RealRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.RealRead.status)
}

// -------------------------------------------------------------------

// StringRead

// repeated string values = 1;
inline int StringRead::values_size() const {
  return values_.size();
}
inline void StringRead::clear_values() {
  values_.Clear();
}
inline const ::std::string& StringRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StringRead.values)
  return values_.Get(index);
}
inline ::std::string* StringRead::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.StringRead.values)
  return values_.Mutable(index);
}
inline void StringRead::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StringRead.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringRead::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StringRead.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringRead::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.StringRead.values)
}
inline void StringRead::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.StringRead.values)
}
inline ::std::string* StringRead::add_values() {
  // @@protoc_insertion_point(field_add_mutable:fmuproxy.grpc.StringRead.values)
  return values_.Add();
}
inline void StringRead::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.StringRead.values)
}
#if LANG_CXX11
inline void StringRead::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.StringRead.values)
}
#endif
inline void StringRead::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fmuproxy.grpc.StringRead.values)
}
inline void StringRead::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fmuproxy.grpc.StringRead.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.StringRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.StringRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void StringRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status StringRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.StringRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void StringRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.StringRead.status)
}

// -------------------------------------------------------------------

// BooleanRead

// repeated bool values = 1;
inline int BooleanRead::values_size() const {
  return values_.size();
}
inline void BooleanRead::clear_values() {
  values_.Clear();
}
inline bool BooleanRead::values(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BooleanRead.values)
  return values_.Get(index);
}
inline void BooleanRead::set_values(int index, bool value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BooleanRead.values)
}
inline void BooleanRead::add_values(bool value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.BooleanRead.values)
}
inline const ::google::protobuf::RepeatedField< bool >&
BooleanRead::values() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.BooleanRead.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< bool >*
BooleanRead::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.BooleanRead.values)
  return &values_;
}

// .fmuproxy.grpc.Status status = 2;
inline void BooleanRead::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status BooleanRead::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.BooleanRead.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void BooleanRead::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.BooleanRead.status)
}

// -------------------------------------------------------------------

// Solver

// string name = 1;
inline void Solver::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Solver::name() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Solver.name)
  return name_.GetNoArena();
}
inline void Solver::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Solver.name)
}
#if LANG_CXX11
inline void Solver::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.Solver.name)
}
#endif
inline void Solver::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.Solver.name)
}
inline void Solver::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.Solver.name)
}
inline ::std::string* Solver::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.Solver.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Solver::release_name() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.Solver.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Solver::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.Solver.name)
}

// string settings = 2;
inline void Solver::clear_settings() {
  settings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Solver::settings() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Solver.settings)
  return settings_.GetNoArena();
}
inline void Solver::set_settings(const ::std::string& value) {
  
  settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Solver.settings)
}
#if LANG_CXX11
inline void Solver::set_settings(::std::string&& value) {
  
  settings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.Solver.settings)
}
#endif
inline void Solver::set_settings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.Solver.settings)
}
inline void Solver::set_settings(const char* value, size_t size) {
  
  settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.Solver.settings)
}
inline ::std::string* Solver::mutable_settings() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.Solver.settings)
  return settings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Solver::release_settings() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.Solver.settings)
  
  return settings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Solver::set_allocated_settings(::std::string* settings) {
  if (settings != NULL) {
    
  } else {
    
  }
  settings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), settings);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.Solver.settings)
}

// -------------------------------------------------------------------

// Bool

// bool value = 1;
inline void Bool::clear_value() {
  value_ = false;
}
inline bool Bool::value() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Bool.value)
  return value_;
}
inline void Bool::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Bool.value)
}

// -------------------------------------------------------------------

// GetFMUstateRequest

// string instance_id = 1;
inline void GetFMUstateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFMUstateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetFMUstateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void GetFMUstateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetFMUstateRequest.instance_id)
}
#if LANG_CXX11
inline void GetFMUstateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.GetFMUstateRequest.instance_id)
}
#endif
inline void GetFMUstateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.GetFMUstateRequest.instance_id)
}
inline void GetFMUstateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.GetFMUstateRequest.instance_id)
}
inline ::std::string* GetFMUstateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.GetFMUstateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFMUstateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.GetFMUstateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFMUstateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.GetFMUstateRequest.instance_id)
}

// -------------------------------------------------------------------

// GetFMUstateResponse

// int64 state = 1;
inline void GetFMUstateResponse::clear_state() {
  state_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetFMUstateResponse::state() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetFMUstateResponse.state)
  return state_;
}
inline void GetFMUstateResponse::set_state(::google::protobuf::int64 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetFMUstateResponse.state)
}

// .fmuproxy.grpc.Status status = 2;
inline void GetFMUstateResponse::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status GetFMUstateResponse::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetFMUstateResponse.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void GetFMUstateResponse::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetFMUstateResponse.status)
}

// -------------------------------------------------------------------

// SetFMUstateRequest

// string instance_id = 1;
inline void SetFMUstateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetFMUstateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SetFMUstateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void SetFMUstateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SetFMUstateRequest.instance_id)
}
#if LANG_CXX11
inline void SetFMUstateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.SetFMUstateRequest.instance_id)
}
#endif
inline void SetFMUstateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.SetFMUstateRequest.instance_id)
}
inline void SetFMUstateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.SetFMUstateRequest.instance_id)
}
inline ::std::string* SetFMUstateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.SetFMUstateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFMUstateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.SetFMUstateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFMUstateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.SetFMUstateRequest.instance_id)
}

// int64 state = 2;
inline void SetFMUstateRequest::clear_state() {
  state_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SetFMUstateRequest::state() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SetFMUstateRequest.state)
  return state_;
}
inline void SetFMUstateRequest::set_state(::google::protobuf::int64 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SetFMUstateRequest.state)
}

// -------------------------------------------------------------------

// FreeFMUstateRequest

// string instance_id = 1;
inline void FreeFMUstateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FreeFMUstateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void FreeFMUstateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
}
#if LANG_CXX11
inline void FreeFMUstateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
}
#endif
inline void FreeFMUstateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
}
inline void FreeFMUstateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
}
inline ::std::string* FreeFMUstateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FreeFMUstateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FreeFMUstateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.FreeFMUstateRequest.instance_id)
}

// int64 state = 2;
inline void FreeFMUstateRequest::clear_state() {
  state_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FreeFMUstateRequest::state() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.FreeFMUstateRequest.state)
  return state_;
}
inline void FreeFMUstateRequest::set_state(::google::protobuf::int64 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.FreeFMUstateRequest.state)
}

// -------------------------------------------------------------------

// SerializeFMUstateRequest

// string instance_id = 1;
inline void SerializeFMUstateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SerializeFMUstateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void SerializeFMUstateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
}
#if LANG_CXX11
inline void SerializeFMUstateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
}
#endif
inline void SerializeFMUstateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
}
inline void SerializeFMUstateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
}
inline ::std::string* SerializeFMUstateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SerializeFMUstateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SerializeFMUstateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.SerializeFMUstateRequest.instance_id)
}

// int64 state = 2;
inline void SerializeFMUstateRequest::clear_state() {
  state_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SerializeFMUstateRequest::state() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SerializeFMUstateRequest.state)
  return state_;
}
inline void SerializeFMUstateRequest::set_state(::google::protobuf::int64 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SerializeFMUstateRequest.state)
}

// -------------------------------------------------------------------

// SerializeFMUstateResponse

// bytes state = 1;
inline void SerializeFMUstateResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SerializeFMUstateResponse::state() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SerializeFMUstateResponse.state)
  return state_.GetNoArena();
}
inline void SerializeFMUstateResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SerializeFMUstateResponse.state)
}
#if LANG_CXX11
inline void SerializeFMUstateResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.SerializeFMUstateResponse.state)
}
#endif
inline void SerializeFMUstateResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.SerializeFMUstateResponse.state)
}
inline void SerializeFMUstateResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.SerializeFMUstateResponse.state)
}
inline ::std::string* SerializeFMUstateResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.SerializeFMUstateResponse.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SerializeFMUstateResponse::release_state() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.SerializeFMUstateResponse.state)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SerializeFMUstateResponse::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.SerializeFMUstateResponse.state)
}

// .fmuproxy.grpc.Status status = 2;
inline void SerializeFMUstateResponse::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status SerializeFMUstateResponse::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.SerializeFMUstateResponse.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void SerializeFMUstateResponse::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.SerializeFMUstateResponse.status)
}

// -------------------------------------------------------------------

// DeSerializeFMUstateRequest

// string instance_id = 1;
inline void DeSerializeFMUstateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeSerializeFMUstateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void DeSerializeFMUstateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
}
#if LANG_CXX11
inline void DeSerializeFMUstateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
}
#endif
inline void DeSerializeFMUstateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
}
inline void DeSerializeFMUstateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
}
inline ::std::string* DeSerializeFMUstateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeSerializeFMUstateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeSerializeFMUstateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.DeSerializeFMUstateRequest.instance_id)
}

// bytes state = 2;
inline void DeSerializeFMUstateRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeSerializeFMUstateRequest::state() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
  return state_.GetNoArena();
}
inline void DeSerializeFMUstateRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
}
#if LANG_CXX11
inline void DeSerializeFMUstateRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
}
#endif
inline void DeSerializeFMUstateRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
}
inline void DeSerializeFMUstateRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
}
inline ::std::string* DeSerializeFMUstateRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeSerializeFMUstateRequest::release_state() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeSerializeFMUstateRequest::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.DeSerializeFMUstateRequest.state)
}

// -------------------------------------------------------------------

// DeSerializeFMUstateResponse

// int64 state = 1;
inline void DeSerializeFMUstateResponse::clear_state() {
  state_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeSerializeFMUstateResponse::state() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DeSerializeFMUstateResponse.state)
  return state_;
}
inline void DeSerializeFMUstateResponse::set_state(::google::protobuf::int64 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DeSerializeFMUstateResponse.state)
}

// .fmuproxy.grpc.Status status = 2;
inline void DeSerializeFMUstateResponse::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status DeSerializeFMUstateResponse::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.DeSerializeFMUstateResponse.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void DeSerializeFMUstateResponse::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.DeSerializeFMUstateResponse.status)
}

// -------------------------------------------------------------------

// CanCreateInstanceFromCSRequest

// string fmu_id = 1;
inline void CanCreateInstanceFromCSRequest::clear_fmu_id() {
  fmu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CanCreateInstanceFromCSRequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
  return fmu_id_.GetNoArena();
}
inline void CanCreateInstanceFromCSRequest::set_fmu_id(const ::std::string& value) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
}
#if LANG_CXX11
inline void CanCreateInstanceFromCSRequest::set_fmu_id(::std::string&& value) {
  
  fmu_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
}
#endif
inline void CanCreateInstanceFromCSRequest::set_fmu_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
}
inline void CanCreateInstanceFromCSRequest::set_fmu_id(const char* value, size_t size) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
}
inline ::std::string* CanCreateInstanceFromCSRequest::mutable_fmu_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
  return fmu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CanCreateInstanceFromCSRequest::release_fmu_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
  
  return fmu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CanCreateInstanceFromCSRequest::set_allocated_fmu_id(::std::string* fmu_id) {
  if (fmu_id != NULL) {
    
  } else {
    
  }
  fmu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmu_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.CanCreateInstanceFromCSRequest.fmu_id)
}

// -------------------------------------------------------------------

// CanCreateInstanceFromMERequest

// string fmu_id = 1;
inline void CanCreateInstanceFromMERequest::clear_fmu_id() {
  fmu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CanCreateInstanceFromMERequest::fmu_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
  return fmu_id_.GetNoArena();
}
inline void CanCreateInstanceFromMERequest::set_fmu_id(const ::std::string& value) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
}
#if LANG_CXX11
inline void CanCreateInstanceFromMERequest::set_fmu_id(::std::string&& value) {
  
  fmu_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
}
#endif
inline void CanCreateInstanceFromMERequest::set_fmu_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
}
inline void CanCreateInstanceFromMERequest::set_fmu_id(const char* value, size_t size) {
  
  fmu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
}
inline ::std::string* CanCreateInstanceFromMERequest::mutable_fmu_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
  return fmu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CanCreateInstanceFromMERequest::release_fmu_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
  
  return fmu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CanCreateInstanceFromMERequest::set_allocated_fmu_id(::std::string* fmu_id) {
  if (fmu_id != NULL) {
    
  } else {
    
  }
  fmu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmu_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.CanCreateInstanceFromMERequest.fmu_id)
}

// -------------------------------------------------------------------

// GetDirectionalDerivativeRequest

// string instance_id = 1;
inline void GetDirectionalDerivativeRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetDirectionalDerivativeRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void GetDirectionalDerivativeRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
}
#if LANG_CXX11
inline void GetDirectionalDerivativeRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
}
#endif
inline void GetDirectionalDerivativeRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
}
inline void GetDirectionalDerivativeRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
}
inline ::std::string* GetDirectionalDerivativeRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetDirectionalDerivativeRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDirectionalDerivativeRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.GetDirectionalDerivativeRequest.instance_id)
}

// repeated uint64 v_unknown_ref = 2;
inline int GetDirectionalDerivativeRequest::v_unknown_ref_size() const {
  return v_unknown_ref_.size();
}
inline void GetDirectionalDerivativeRequest::clear_v_unknown_ref() {
  v_unknown_ref_.Clear();
}
inline ::google::protobuf::uint64 GetDirectionalDerivativeRequest::v_unknown_ref(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_unknown_ref)
  return v_unknown_ref_.Get(index);
}
inline void GetDirectionalDerivativeRequest::set_v_unknown_ref(int index, ::google::protobuf::uint64 value) {
  v_unknown_ref_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_unknown_ref)
}
inline void GetDirectionalDerivativeRequest::add_v_unknown_ref(::google::protobuf::uint64 value) {
  v_unknown_ref_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_unknown_ref)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetDirectionalDerivativeRequest::v_unknown_ref() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_unknown_ref)
  return v_unknown_ref_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetDirectionalDerivativeRequest::mutable_v_unknown_ref() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_unknown_ref)
  return &v_unknown_ref_;
}

// repeated uint64 v_known_ref = 3;
inline int GetDirectionalDerivativeRequest::v_known_ref_size() const {
  return v_known_ref_.size();
}
inline void GetDirectionalDerivativeRequest::clear_v_known_ref() {
  v_known_ref_.Clear();
}
inline ::google::protobuf::uint64 GetDirectionalDerivativeRequest::v_known_ref(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_known_ref)
  return v_known_ref_.Get(index);
}
inline void GetDirectionalDerivativeRequest::set_v_known_ref(int index, ::google::protobuf::uint64 value) {
  v_known_ref_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_known_ref)
}
inline void GetDirectionalDerivativeRequest::add_v_known_ref(::google::protobuf::uint64 value) {
  v_known_ref_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_known_ref)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetDirectionalDerivativeRequest::v_known_ref() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_known_ref)
  return v_known_ref_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetDirectionalDerivativeRequest::mutable_v_known_ref() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.GetDirectionalDerivativeRequest.v_known_ref)
  return &v_known_ref_;
}

// repeated double dv_known_ref = 4;
inline int GetDirectionalDerivativeRequest::dv_known_ref_size() const {
  return dv_known_ref_.size();
}
inline void GetDirectionalDerivativeRequest::clear_dv_known_ref() {
  dv_known_ref_.Clear();
}
inline double GetDirectionalDerivativeRequest::dv_known_ref(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetDirectionalDerivativeRequest.dv_known_ref)
  return dv_known_ref_.Get(index);
}
inline void GetDirectionalDerivativeRequest::set_dv_known_ref(int index, double value) {
  dv_known_ref_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetDirectionalDerivativeRequest.dv_known_ref)
}
inline void GetDirectionalDerivativeRequest::add_dv_known_ref(double value) {
  dv_known_ref_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.GetDirectionalDerivativeRequest.dv_known_ref)
}
inline const ::google::protobuf::RepeatedField< double >&
GetDirectionalDerivativeRequest::dv_known_ref() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.GetDirectionalDerivativeRequest.dv_known_ref)
  return dv_known_ref_;
}
inline ::google::protobuf::RepeatedField< double >*
GetDirectionalDerivativeRequest::mutable_dv_known_ref() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.GetDirectionalDerivativeRequest.dv_known_ref)
  return &dv_known_ref_;
}

// -------------------------------------------------------------------

// GetDirectionalDerivativeResponse

// repeated double dv_unknown_ref = 1;
inline int GetDirectionalDerivativeResponse::dv_unknown_ref_size() const {
  return dv_unknown_ref_.size();
}
inline void GetDirectionalDerivativeResponse::clear_dv_unknown_ref() {
  dv_unknown_ref_.Clear();
}
inline double GetDirectionalDerivativeResponse::dv_unknown_ref(int index) const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetDirectionalDerivativeResponse.dv_unknown_ref)
  return dv_unknown_ref_.Get(index);
}
inline void GetDirectionalDerivativeResponse::set_dv_unknown_ref(int index, double value) {
  dv_unknown_ref_.Set(index, value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetDirectionalDerivativeResponse.dv_unknown_ref)
}
inline void GetDirectionalDerivativeResponse::add_dv_unknown_ref(double value) {
  dv_unknown_ref_.Add(value);
  // @@protoc_insertion_point(field_add:fmuproxy.grpc.GetDirectionalDerivativeResponse.dv_unknown_ref)
}
inline const ::google::protobuf::RepeatedField< double >&
GetDirectionalDerivativeResponse::dv_unknown_ref() const {
  // @@protoc_insertion_point(field_list:fmuproxy.grpc.GetDirectionalDerivativeResponse.dv_unknown_ref)
  return dv_unknown_ref_;
}
inline ::google::protobuf::RepeatedField< double >*
GetDirectionalDerivativeResponse::mutable_dv_unknown_ref() {
  // @@protoc_insertion_point(field_mutable_list:fmuproxy.grpc.GetDirectionalDerivativeResponse.dv_unknown_ref)
  return &dv_unknown_ref_;
}

// .fmuproxy.grpc.Status status = 2;
inline void GetDirectionalDerivativeResponse::clear_status() {
  status_ = 0;
}
inline ::fmuproxy::grpc::Status GetDirectionalDerivativeResponse::status() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.GetDirectionalDerivativeResponse.status)
  return static_cast< ::fmuproxy::grpc::Status >(status_);
}
inline void GetDirectionalDerivativeResponse::set_status(::fmuproxy::grpc::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.GetDirectionalDerivativeResponse.status)
}

// -------------------------------------------------------------------

// Void

// -------------------------------------------------------------------

// Url

// string url = 1;
inline void Url::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Url::url() const {
  // @@protoc_insertion_point(field_get:fmuproxy.grpc.Url.url)
  return url_.GetNoArena();
}
inline void Url::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fmuproxy.grpc.Url.url)
}
#if LANG_CXX11
inline void Url::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fmuproxy.grpc.Url.url)
}
#endif
inline void Url::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fmuproxy.grpc.Url.url)
}
inline void Url::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fmuproxy.grpc.Url.url)
}
inline ::std::string* Url::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:fmuproxy.grpc.Url.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Url::release_url() {
  // @@protoc_insertion_point(field_release:fmuproxy.grpc.Url.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Url::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:fmuproxy.grpc.Url.url)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc
}  // namespace fmuproxy

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fmuproxy::grpc::Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fmuproxy::grpc::Status>() {
  return ::fmuproxy::grpc::Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_2eproto
