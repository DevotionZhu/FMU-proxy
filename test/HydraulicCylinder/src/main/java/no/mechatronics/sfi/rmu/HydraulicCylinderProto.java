// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unique_service.proto

package no.mechatronics.sfi.rmu;

public final class HydraulicCylinderProto {
  private HydraulicCylinderProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface IntegerWriteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:no.mechatronics.sfi.rmu.IntegerWrite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    int getFmuId();

    /**
     * <code>int32 value = 2;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code no.mechatronics.sfi.rmu.IntegerWrite}
   */
  public  static final class IntegerWrite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:no.mechatronics.sfi.rmu.IntegerWrite)
      IntegerWriteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IntegerWrite.newBuilder() to construct.
    private IntegerWrite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IntegerWrite() {
      fmuId_ = 0;
      value_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IntegerWrite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              fmuId_ = input.readUInt32();
              break;
            }
            case 16: {

              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_IntegerWrite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_IntegerWrite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite.Builder.class);
    }

    public static final int FMU_ID_FIELD_NUMBER = 1;
    private int fmuId_;
    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    public int getFmuId() {
      return fmuId_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>int32 value = 2;</code>
     */
    public int getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fmuId_ != 0) {
        output.writeUInt32(1, fmuId_);
      }
      if (value_ != 0) {
        output.writeInt32(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fmuId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fmuId_);
      }
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite)) {
        return super.equals(obj);
      }
      no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite other = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite) obj;

      boolean result = true;
      result = result && (getFmuId()
          == other.getFmuId());
      result = result && (getValue()
          == other.getValue());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FMU_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFmuId();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code no.mechatronics.sfi.rmu.IntegerWrite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:no.mechatronics.sfi.rmu.IntegerWrite)
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWriteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_IntegerWrite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_IntegerWrite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite.Builder.class);
      }

      // Construct using no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fmuId_ = 0;

        value_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_IntegerWrite_descriptor;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite getDefaultInstanceForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite.getDefaultInstance();
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite build() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite buildPartial() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite result = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite(this);
        result.fmuId_ = fmuId_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite) {
          return mergeFrom((no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite other) {
        if (other == no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite.getDefaultInstance()) return this;
        if (other.getFmuId() != 0) {
          setFmuId(other.getFmuId());
        }
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fmuId_ ;
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public int getFmuId() {
        return fmuId_;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder setFmuId(int value) {
        
        fmuId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder clearFmuId() {
        
        fmuId_ = 0;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>int32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>int32 value = 2;</code>
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:no.mechatronics.sfi.rmu.IntegerWrite)
    }

    // @@protoc_insertion_point(class_scope:no.mechatronics.sfi.rmu.IntegerWrite)
    private static final no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite();
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IntegerWrite>
        PARSER = new com.google.protobuf.AbstractParser<IntegerWrite>() {
      public IntegerWrite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IntegerWrite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IntegerWrite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IntegerWrite> getParserForType() {
      return PARSER;
    }

    public no.mechatronics.sfi.rmu.HydraulicCylinderProto.IntegerWrite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RealWriteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:no.mechatronics.sfi.rmu.RealWrite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    int getFmuId();

    /**
     * <code>double value = 2;</code>
     */
    double getValue();
  }
  /**
   * Protobuf type {@code no.mechatronics.sfi.rmu.RealWrite}
   */
  public  static final class RealWrite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:no.mechatronics.sfi.rmu.RealWrite)
      RealWriteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RealWrite.newBuilder() to construct.
    private RealWrite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RealWrite() {
      fmuId_ = 0;
      value_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RealWrite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              fmuId_ = input.readUInt32();
              break;
            }
            case 17: {

              value_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_RealWrite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_RealWrite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite.Builder.class);
    }

    public static final int FMU_ID_FIELD_NUMBER = 1;
    private int fmuId_;
    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    public int getFmuId() {
      return fmuId_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private double value_;
    /**
     * <code>double value = 2;</code>
     */
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fmuId_ != 0) {
        output.writeUInt32(1, fmuId_);
      }
      if (value_ != 0D) {
        output.writeDouble(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fmuId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fmuId_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite)) {
        return super.equals(obj);
      }
      no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite other = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite) obj;

      boolean result = true;
      result = result && (getFmuId()
          == other.getFmuId());
      result = result && (
          java.lang.Double.doubleToLongBits(getValue())
          == java.lang.Double.doubleToLongBits(
              other.getValue()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FMU_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFmuId();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValue()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code no.mechatronics.sfi.rmu.RealWrite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:no.mechatronics.sfi.rmu.RealWrite)
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWriteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_RealWrite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_RealWrite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite.Builder.class);
      }

      // Construct using no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fmuId_ = 0;

        value_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_RealWrite_descriptor;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite getDefaultInstanceForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite.getDefaultInstance();
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite build() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite buildPartial() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite result = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite(this);
        result.fmuId_ = fmuId_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite) {
          return mergeFrom((no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite other) {
        if (other == no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite.getDefaultInstance()) return this;
        if (other.getFmuId() != 0) {
          setFmuId(other.getFmuId());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fmuId_ ;
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public int getFmuId() {
        return fmuId_;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder setFmuId(int value) {
        
        fmuId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder clearFmuId() {
        
        fmuId_ = 0;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <code>double value = 2;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>double value = 2;</code>
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:no.mechatronics.sfi.rmu.RealWrite)
    }

    // @@protoc_insertion_point(class_scope:no.mechatronics.sfi.rmu.RealWrite)
    private static final no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite();
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RealWrite>
        PARSER = new com.google.protobuf.AbstractParser<RealWrite>() {
      public RealWrite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RealWrite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RealWrite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RealWrite> getParserForType() {
      return PARSER;
    }

    public no.mechatronics.sfi.rmu.HydraulicCylinderProto.RealWrite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StringWriteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:no.mechatronics.sfi.rmu.StringWrite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    int getFmuId();

    /**
     * <code>string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code no.mechatronics.sfi.rmu.StringWrite}
   */
  public  static final class StringWrite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:no.mechatronics.sfi.rmu.StringWrite)
      StringWriteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StringWrite.newBuilder() to construct.
    private StringWrite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StringWrite() {
      fmuId_ = 0;
      value_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StringWrite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              fmuId_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_StringWrite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_StringWrite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite.Builder.class);
    }

    public static final int FMU_ID_FIELD_NUMBER = 1;
    private int fmuId_;
    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    public int getFmuId() {
      return fmuId_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <code>string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fmuId_ != 0) {
        output.writeUInt32(1, fmuId_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fmuId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fmuId_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite)) {
        return super.equals(obj);
      }
      no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite other = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite) obj;

      boolean result = true;
      result = result && (getFmuId()
          == other.getFmuId());
      result = result && getValue()
          .equals(other.getValue());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FMU_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFmuId();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code no.mechatronics.sfi.rmu.StringWrite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:no.mechatronics.sfi.rmu.StringWrite)
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWriteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_StringWrite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_StringWrite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite.Builder.class);
      }

      // Construct using no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fmuId_ = 0;

        value_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_StringWrite_descriptor;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite getDefaultInstanceForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite.getDefaultInstance();
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite build() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite buildPartial() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite result = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite(this);
        result.fmuId_ = fmuId_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite) {
          return mergeFrom((no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite other) {
        if (other == no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite.getDefaultInstance()) return this;
        if (other.getFmuId() != 0) {
          setFmuId(other.getFmuId());
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fmuId_ ;
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public int getFmuId() {
        return fmuId_;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder setFmuId(int value) {
        
        fmuId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder clearFmuId() {
        
        fmuId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:no.mechatronics.sfi.rmu.StringWrite)
    }

    // @@protoc_insertion_point(class_scope:no.mechatronics.sfi.rmu.StringWrite)
    private static final no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite();
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StringWrite>
        PARSER = new com.google.protobuf.AbstractParser<StringWrite>() {
      public StringWrite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StringWrite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StringWrite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StringWrite> getParserForType() {
      return PARSER;
    }

    public no.mechatronics.sfi.rmu.HydraulicCylinderProto.StringWrite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BooleanWriteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:no.mechatronics.sfi.rmu.BooleanWrite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    int getFmuId();

    /**
     * <code>bool value = 2;</code>
     */
    boolean getValue();
  }
  /**
   * Protobuf type {@code no.mechatronics.sfi.rmu.BooleanWrite}
   */
  public  static final class BooleanWrite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:no.mechatronics.sfi.rmu.BooleanWrite)
      BooleanWriteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BooleanWrite.newBuilder() to construct.
    private BooleanWrite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BooleanWrite() {
      fmuId_ = 0;
      value_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BooleanWrite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              fmuId_ = input.readUInt32();
              break;
            }
            case 16: {

              value_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_BooleanWrite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_BooleanWrite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite.Builder.class);
    }

    public static final int FMU_ID_FIELD_NUMBER = 1;
    private int fmuId_;
    /**
     * <code>uint32 fmu_id = 1;</code>
     */
    public int getFmuId() {
      return fmuId_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean value_;
    /**
     * <code>bool value = 2;</code>
     */
    public boolean getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fmuId_ != 0) {
        output.writeUInt32(1, fmuId_);
      }
      if (value_ != false) {
        output.writeBool(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fmuId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fmuId_);
      }
      if (value_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite)) {
        return super.equals(obj);
      }
      no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite other = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite) obj;

      boolean result = true;
      result = result && (getFmuId()
          == other.getFmuId());
      result = result && (getValue()
          == other.getValue());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FMU_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFmuId();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getValue());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code no.mechatronics.sfi.rmu.BooleanWrite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:no.mechatronics.sfi.rmu.BooleanWrite)
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWriteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_BooleanWrite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_BooleanWrite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite.class, no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite.Builder.class);
      }

      // Construct using no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fmuId_ = 0;

        value_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.internal_static_no_mechatronics_sfi_rmu_BooleanWrite_descriptor;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite getDefaultInstanceForType() {
        return no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite.getDefaultInstance();
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite build() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite buildPartial() {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite result = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite(this);
        result.fmuId_ = fmuId_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite) {
          return mergeFrom((no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite other) {
        if (other == no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite.getDefaultInstance()) return this;
        if (other.getFmuId() != 0) {
          setFmuId(other.getFmuId());
        }
        if (other.getValue() != false) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fmuId_ ;
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public int getFmuId() {
        return fmuId_;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder setFmuId(int value) {
        
        fmuId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 fmu_id = 1;</code>
       */
      public Builder clearFmuId() {
        
        fmuId_ = 0;
        onChanged();
        return this;
      }

      private boolean value_ ;
      /**
       * <code>bool value = 2;</code>
       */
      public boolean getValue() {
        return value_;
      }
      /**
       * <code>bool value = 2;</code>
       */
      public Builder setValue(boolean value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:no.mechatronics.sfi.rmu.BooleanWrite)
    }

    // @@protoc_insertion_point(class_scope:no.mechatronics.sfi.rmu.BooleanWrite)
    private static final no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite();
    }

    public static no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BooleanWrite>
        PARSER = new com.google.protobuf.AbstractParser<BooleanWrite>() {
      public BooleanWrite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BooleanWrite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BooleanWrite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BooleanWrite> getParserForType() {
      return PARSER;
    }

    public no.mechatronics.sfi.rmu.HydraulicCylinderProto.BooleanWrite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_no_mechatronics_sfi_rmu_IntegerWrite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_no_mechatronics_sfi_rmu_IntegerWrite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_no_mechatronics_sfi_rmu_RealWrite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_no_mechatronics_sfi_rmu_RealWrite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_no_mechatronics_sfi_rmu_StringWrite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_no_mechatronics_sfi_rmu_StringWrite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_no_mechatronics_sfi_rmu_BooleanWrite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_no_mechatronics_sfi_rmu_BooleanWrite_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024unique_service.proto\022\027no.mechatronics." +
      "sfi.rmu\032\021definitions.proto\"-\n\014IntegerWri" +
      "te\022\016\n\006fmu_id\030\001 \001(\r\022\r\n\005value\030\002 \001(\005\"*\n\tRea" +
      "lWrite\022\016\n\006fmu_id\030\001 \001(\r\022\r\n\005value\030\002 \001(\001\",\n" +
      "\013StringWrite\022\016\n\006fmu_id\030\001 \001(\r\022\r\n\005value\030\002 " +
      "\001(\t\"-\n\014BooleanWrite\022\016\n\006fmu_id\030\001 \001(\r\022\r\n\005v" +
      "alue\030\002 \001(\0102\210J\n\030HydraulicCylinderService\022" +
      "V\n\022Read_DrainTank_p_e\022\035.no.mechatronics." +
      "sfi.rmu.UInt\032!.no.mechatronics.sfi.rmu.R" +
      "ealRead\022Z\n\023Write_DrainTank_p_e\022\".no.mech" +
      "atronics.sfi.rmu.RealWrite\032\037.no.mechatro" +
      "nics.sfi.rmu.Status\022V\n\022Read_DrainTank_p_" +
      "f\022\035.no.mechatronics.sfi.rmu.UInt\032!.no.me" +
      "chatronics.sfi.rmu.RealRead\022Z\n\023Write_Dra" +
      "inTank_p_f\022\".no.mechatronics.sfi.rmu.Rea" +
      "lWrite\032\037.no.mechatronics.sfi.rmu.Status\022" +
      "_\n\033Read_DrainTank_pressureTank\022\035.no.mech" +
      "atronics.sfi.rmu.UInt\032!.no.mechatronics." +
      "sfi.rmu.RealRead\022c\n\034Write_DrainTank_pres" +
      "sureTank\022\".no.mechatronics.sfi.rmu.RealW" +
      "rite\032\037.no.mechatronics.sfi.rmu.Status\022[\n" +
      "\027Read_DrainTank_flowTank\022\035.no.mechatroni" +
      "cs.sfi.rmu.UInt\032!.no.mechatronics.sfi.rm" +
      "u.RealRead\022_\n\030Write_DrainTank_flowTank\022\"" +
      ".no.mechatronics.sfi.rmu.RealWrite\032\037.no." +
      "mechatronics.sfi.rmu.Status\022Y\n\025Read_OneJ" +
      "unction_flow\022\035.no.mechatronics.sfi.rmu.U" +
      "Int\032!.no.mechatronics.sfi.rmu.RealRead\022]" +
      "\n\026Write_OneJunction_flow\022\".no.mechatroni" +
      "cs.sfi.rmu.RealWrite\032\037.no.mechatronics.s" +
      "fi.rmu.Status\022Y\n\025Read_OneJunction_p1_e\022\035" +
      ".no.mechatronics.sfi.rmu.UInt\032!.no.mecha" +
      "tronics.sfi.rmu.RealRead\022]\n\026Write_OneJun" +
      "ction_p1_e\022\".no.mechatronics.sfi.rmu.Rea" +
      "lWrite\032\037.no.mechatronics.sfi.rmu.Status\022" +
      "Y\n\025Read_OneJunction_p2_e\022\035.no.mechatroni" +
      "cs.sfi.rmu.UInt\032!.no.mechatronics.sfi.rm" +
      "u.RealRead\022]\n\026Write_OneJunction_p2_e\022\".n" +
      "o.mechatronics.sfi.rmu.RealWrite\032\037.no.me" +
      "chatronics.sfi.rmu.Status\022Y\n\025Read_OneJun" +
      "ction_p3_e\022\035.no.mechatronics.sfi.rmu.UIn" +
      "t\032!.no.mechatronics.sfi.rmu.RealRead\022]\n\026" +
      "Write_OneJunction_p3_e\022\".no.mechatronics" +
      ".sfi.rmu.RealWrite\032\037.no.mechatronics.sfi" +
      ".rmu.Status\022Y\n\025Read_OneJunction_p1_f\022\035.n" +
      "o.mechatronics.sfi.rmu.UInt\032!.no.mechatr" +
      "onics.sfi.rmu.RealRead\022]\n\026Write_OneJunct" +
      "ion_p1_f\022\".no.mechatronics.sfi.rmu.RealW" +
      "rite\032\037.no.mechatronics.sfi.rmu.Status\022Y\n" +
      "\025Read_OneJunction_p2_f\022\035.no.mechatronics" +
      ".sfi.rmu.UInt\032!.no.mechatronics.sfi.rmu." +
      "RealRead\022]\n\026Write_OneJunction_p2_f\022\".no." +
      "mechatronics.sfi.rmu.RealWrite\032\037.no.mech" +
      "atronics.sfi.rmu.Status\022Y\n\025Read_OneJunct" +
      "ion_p3_f\022\035.no.mechatronics.sfi.rmu.UInt\032" +
      "!.no.mechatronics.sfi.rmu.RealRead\022]\n\026Wr" +
      "ite_OneJunction_p3_f\022\".no.mechatronics.s" +
      "fi.rmu.RealWrite\032\037.no.mechatronics.sfi.r" +
      "mu.Status\022X\n\024Read_PistonForce_p_e\022\035.no.m" +
      "echatronics.sfi.rmu.UInt\032!.no.mechatroni" +
      "cs.sfi.rmu.RealRead\022\\\n\025Write_PistonForce" +
      "_p_e\022\".no.mechatronics.sfi.rmu.RealWrite" +
      "\032\037.no.mechatronics.sfi.rmu.Status\022X\n\024Rea" +
      "d_PistonForce_p_f\022\035.no.mechatronics.sfi." +
      "rmu.UInt\032!.no.mechatronics.sfi.rmu.RealR" +
      "ead\022\\\n\025Write_PistonForce_p_f\022\".no.mechat" +
      "ronics.sfi.rmu.RealWrite\032\037.no.mechatroni" +
      "cs.sfi.rmu.Status\022[\n\027Read_PistonForce_ef" +
      "fort\022\035.no.mechatronics.sfi.rmu.UInt\032!.no" +
      ".mechatronics.sfi.rmu.RealRead\022_\n\030Write_" +
      "PistonForce_effort\022\".no.mechatronics.sfi" +
      ".rmu.RealWrite\032\037.no.mechatronics.sfi.rmu" +
      ".Status\022Y\n\025Read_PistonForce_flow\022\035.no.me" +
      "chatronics.sfi.rmu.UInt\032!.no.mechatronic" +
      "s.sfi.rmu.RealRead\022]\n\026Write_PistonForce_" +
      "flow\022\".no.mechatronics.sfi.rmu.RealWrite" +
      "\032\037.no.mechatronics.sfi.rmu.Status\022X\n\024Rea" +
      "d_PistonSide_p1_e\022\035.no.mechatronics.sfi." +
      "rmu.UInt\032!.no.mechatronics.sfi.rmu.RealR" +
      "ead\022\\\n\025Write_PistonSide_p1_e\022\".no.mechat" +
      "ronics.sfi.rmu.RealWrite\032\037.no.mechatroni" +
      "cs.sfi.rmu.Status\022X\n\024Read_PistonSide_p1_" +
      "f\022\035.no.mechatronics.sfi.rmu.UInt\032!.no.me" +
      "chatronics.sfi.rmu.RealRead\022\\\n\025Write_Pis" +
      "tonSide_p1_f\022\".no.mechatronics.sfi.rmu.R" +
      "ealWrite\032\037.no.mechatronics.sfi.rmu.Statu" +
      "s\022X\n\024Read_PistonSide_p2_e\022\035.no.mechatron" +
      "ics.sfi.rmu.UInt\032!.no.mechatronics.sfi.r" +
      "mu.RealRead\022\\\n\025Write_PistonSide_p2_e\022\".n" +
      "o.mechatronics.sfi.rmu.RealWrite\032\037.no.me" +
      "chatronics.sfi.rmu.Status\022X\n\024Read_Piston" +
      "Side_p2_f\022\035.no.mechatronics.sfi.rmu.UInt" +
      "\032!.no.mechatronics.sfi.rmu.RealRead\022\\\n\025W" +
      "rite_PistonSide_p2_f\022\".no.mechatronics.s" +
      "fi.rmu.RealWrite\032\037.no.mechatronics.sfi.r" +
      "mu.Status\022b\n\036Read_PistonSide_diameterPis" +
      "ton\022\035.no.mechatronics.sfi.rmu.UInt\032!.no." +
      "mechatronics.sfi.rmu.RealRead\022f\n\037Write_P" +
      "istonSide_diameterPiston\022\".no.mechatroni" +
      "cs.sfi.rmu.RealWrite\032\037.no.mechatronics.s" +
      "fi.rmu.Status\022b\n\036Read_PistonSide_areaPis" +
      "tonSide\022\035.no.mechatronics.sfi.rmu.UInt\032!" +
      ".no.mechatronics.sfi.rmu.RealRead\022f\n\037Wri" +
      "te_PistonSide_areaPistonSide\022\".no.mechat" +
      "ronics.sfi.rmu.RealWrite\032\037.no.mechatroni" +
      "cs.sfi.rmu.Status\022Q\n\rRead_Pump_p_e\022\035.no." +
      "mechatronics.sfi.rmu.UInt\032!.no.mechatron" +
      "ics.sfi.rmu.RealRead\022U\n\016Write_Pump_p_e\022\"" +
      ".no.mechatronics.sfi.rmu.RealWrite\032\037.no." +
      "mechatronics.sfi.rmu.Status\022Q\n\rRead_Pump" +
      "_p_f\022\035.no.mechatronics.sfi.rmu.UInt\032!.no" +
      ".mechatronics.sfi.rmu.RealRead\022U\n\016Write_" +
      "Pump_p_f\022\".no.mechatronics.sfi.rmu.RealW" +
      "rite\032\037.no.mechatronics.sfi.rmu.Status\022R\n" +
      "\016Read_Pump_gain\022\035.no.mechatronics.sfi.rm" +
      "u.UInt\032!.no.mechatronics.sfi.rmu.RealRea" +
      "d\022V\n\017Write_Pump_gain\022\".no.mechatronics.s" +
      "fi.rmu.RealWrite\032\037.no.mechatronics.sfi.r" +
      "mu.Status\022^\n\032Read_Pump_displacementPump\022" +
      "\035.no.mechatronics.sfi.rmu.UInt\032!.no.mech" +
      "atronics.sfi.rmu.RealRead\022b\n\033Write_Pump_" +
      "displacementPump\022\".no.mechatronics.sfi.r" +
      "mu.RealWrite\032\037.no.mechatronics.sfi.rmu.S" +
      "tatus\022U\n\021Read_Pump_rpmPump\022\035.no.mechatro" +
      "nics.sfi.rmu.UInt\032!.no.mechatronics.sfi." +
      "rmu.RealRead\022Y\n\022Write_Pump_rpmPump\022\".no." +
      "mechatronics.sfi.rmu.RealWrite\032\037.no.mech" +
      "atronics.sfi.rmu.Status\022Y\n\025Read_Pump_flo" +
      "wMaxPump\022\035.no.mechatronics.sfi.rmu.UInt\032" +
      "!.no.mechatronics.sfi.rmu.RealRead\022]\n\026Wr" +
      "ite_Pump_flowMaxPump\022\".no.mechatronics.s" +
      "fi.rmu.RealWrite\032\037.no.mechatronics.sfi.r" +
      "mu.Status\022Z\n\026Read_Pump_pressurePump\022\035.no" +
      ".mechatronics.sfi.rmu.UInt\032!.no.mechatro" +
      "nics.sfi.rmu.RealRead\022^\n\027Write_Pump_pres" +
      "surePump\022\".no.mechatronics.sfi.rmu.RealW" +
      "rite\032\037.no.mechatronics.sfi.rmu.Status\022V\n" +
      "\022Read_Pump_flowPump\022\035.no.mechatronics.sf" +
      "i.rmu.UInt\032!.no.mechatronics.sfi.rmu.Rea" +
      "lRead\022Z\n\023Write_Pump_flowPump\022\".no.mechat" +
      "ronics.sfi.rmu.RealWrite\032\037.no.mechatroni" +
      "cs.sfi.rmu.Status\022U\n\021Read_RodSide_p1_e\022\035" +
      ".no.mechatronics.sfi.rmu.UInt\032!.no.mecha" +
      "tronics.sfi.rmu.RealRead\022Y\n\022Write_RodSid" +
      "e_p1_e\022\".no.mechatronics.sfi.rmu.RealWri" +
      "te\032\037.no.mechatronics.sfi.rmu.Status\022U\n\021R" +
      "ead_RodSide_p1_f\022\035.no.mechatronics.sfi.r" +
      "mu.UInt\032!.no.mechatronics.sfi.rmu.RealRe" +
      "ad\022Y\n\022Write_RodSide_p1_f\022\".no.mechatroni" +
      "cs.sfi.rmu.RealWrite\032\037.no.mechatronics.s" +
      "fi.rmu.Status\022U\n\021Read_RodSide_p2_e\022\035.no." +
      "mechatronics.sfi.rmu.UInt\032!.no.mechatron" +
      "ics.sfi.rmu.RealRead\022Y\n\022Write_RodSide_p2" +
      "_e\022\".no.mechatronics.sfi.rmu.RealWrite\032\037" +
      ".no.mechatronics.sfi.rmu.Status\022U\n\021Read_" +
      "RodSide_p2_f\022\035.no.mechatronics.sfi.rmu.U" +
      "Int\032!.no.mechatronics.sfi.rmu.RealRead\022Y" +
      "\n\022Write_RodSide_p2_f\022\".no.mechatronics.s" +
      "fi.rmu.RealWrite\032\037.no.mechatronics.sfi.r" +
      "mu.Status\022_\n\033Read_RodSide_diameterPiston" +
      "\022\035.no.mechatronics.sfi.rmu.UInt\032!.no.mec" +
      "hatronics.sfi.rmu.RealRead\022c\n\034Write_RodS" +
      "ide_diameterPiston\022\".no.mechatronics.sfi" +
      ".rmu.RealWrite\032\037.no.mechatronics.sfi.rmu" +
      ".Status\022\\\n\030Read_RodSide_diameterRod\022\035.no" +
      ".mechatronics.sfi.rmu.UInt\032!.no.mechatro" +
      "nics.sfi.rmu.RealRead\022`\n\031Write_RodSide_d" +
      "iameterRod\022\".no.mechatronics.sfi.rmu.Rea" +
      "lWrite\032\037.no.mechatronics.sfi.rmu.Status\022" +
      "\\\n\030Read_RodSide_areaRodSide\022\035.no.mechatr" +
      "onics.sfi.rmu.UInt\032!.no.mechatronics.sfi" +
      ".rmu.RealRead\022`\n\031Write_RodSide_areaRodSi" +
      "de\022\".no.mechatronics.sfi.rmu.RealWrite\032\037" +
      ".no.mechatronics.sfi.rmu.Status\022X\n\024Read_" +
      "Splitter1_input\022\035.no.mechatronics.sfi.rm" +
      "u.UInt\032!.no.mechatronics.sfi.rmu.RealRea" +
      "d\022\\\n\025Write_Splitter1_input\022\".no.mechatro" +
      "nics.sfi.rmu.RealWrite\032\037.no.mechatronics" +
      ".sfi.rmu.Status\022Z\n\026Read_Splitter1_output" +
      "1\022\035.no.mechatronics.sfi.rmu.UInt\032!.no.me" +
      "chatronics.sfi.rmu.RealRead\022^\n\027Write_Spl" +
      "itter1_output1\022\".no.mechatronics.sfi.rmu" +
      ".RealWrite\032\037.no.mechatronics.sfi.rmu.Sta" +
      "tus\022Z\n\026Read_Splitter1_output2\022\035.no.mecha" +
      "tronics.sfi.rmu.UInt\032!.no.mechatronics.s" +
      "fi.rmu.RealRead\022^\n\027Write_Splitter1_outpu" +
      "t2\022\".no.mechatronics.sfi.rmu.RealWrite\032\037" +
      ".no.mechatronics.sfi.rmu.Status\022\\\n\030Read_" +
      "ZeroJunction_effort\022\035.no.mechatronics.sf" +
      "i.rmu.UInt\032!.no.mechatronics.sfi.rmu.Rea" +
      "lRead\022`\n\031Write_ZeroJunction_effort\022\".no." +
      "mechatronics.sfi.rmu.RealWrite\032\037.no.mech" +
      "atronics.sfi.rmu.Status\022Z\n\026Read_ZeroJunc" +
      "tion_p1_e\022\035.no.mechatronics.sfi.rmu.UInt" +
      "\032!.no.mechatronics.sfi.rmu.RealRead\022^\n\027W" +
      "rite_ZeroJunction_p1_e\022\".no.mechatronics" +
      ".sfi.rmu.RealWrite\032\037.no.mechatronics.sfi" +
      ".rmu.Status\022Z\n\026Read_ZeroJunction_p2_e\022\035." +
      "no.mechatronics.sfi.rmu.UInt\032!.no.mechat" +
      "ronics.sfi.rmu.RealRead\022^\n\027Write_ZeroJun" +
      "ction_p2_e\022\".no.mechatronics.sfi.rmu.Rea" +
      "lWrite\032\037.no.mechatronics.sfi.rmu.Status\022" +
      "Z\n\026Read_ZeroJunction_p1_f\022\035.no.mechatron" +
      "ics.sfi.rmu.UInt\032!.no.mechatronics.sfi.r" +
      "mu.RealRead\022^\n\027Write_ZeroJunction_p1_f\022\"" +
      ".no.mechatronics.sfi.rmu.RealWrite\032\037.no." +
      "mechatronics.sfi.rmu.Status\022Z\n\026Read_Zero" +
      "Junction_p2_f\022\035.no.mechatronics.sfi.rmu." +
      "UInt\032!.no.mechatronics.sfi.rmu.RealRead\022" +
      "^\n\027Write_ZeroJunction_p2_f\022\".no.mechatro" +
      "nics.sfi.rmu.RealWrite\032\037.no.mechatronics" +
      ".sfi.rmu.Status\022X\n\024Read_ConstraintForce\022" +
      "\035.no.mechatronics.sfi.rmu.UInt\032!.no.mech" +
      "atronics.sfi.rmu.RealRead\022\\\n\025Write_Const" +
      "raintForce\022\".no.mechatronics.sfi.rmu.Rea" +
      "lWrite\032\037.no.mechatronics.sfi.rmu.Status\022" +
      "Q\n\rRead_FlowGain\022\035.no.mechatronics.sfi.r" +
      "mu.UInt\032!.no.mechatronics.sfi.rmu.RealRe" +
      "ad\022U\n\016Write_FlowGain\022\".no.mechatronics.s" +
      "fi.rmu.RealWrite\032\037.no.mechatronics.sfi.r" +
      "mu.Status\022[\n\027Read_PistonDisplacement\022\035.n" +
      "o.mechatronics.sfi.rmu.UInt\032!.no.mechatr" +
      "onics.sfi.rmu.RealRead\022_\n\030Write_PistonDi" +
      "splacement\022\".no.mechatronics.sfi.rmu.Rea" +
      "lWrite\032\037.no.mechatronics.sfi.rmu.Status\022" +
      "T\n\020Read_PistonSpeed\022\035.no.mechatronics.sf" +
      "i.rmu.UInt\032!.no.mechatronics.sfi.rmu.Rea" +
      "lRead\022X\n\021Write_PistonSpeed\022\".no.mechatro" +
      "nics.sfi.rmu.RealWrite\032\037.no.mechatronics" +
      ".sfi.rmu.Status\022X\n\024Read_Integrate_input\022" +
      "\035.no.mechatronics.sfi.rmu.UInt\032!.no.mech" +
      "atronics.sfi.rmu.RealRead\022\\\n\025Write_Integ" +
      "rate_input\022\".no.mechatronics.sfi.rmu.Rea" +
      "lWrite\032\037.no.mechatronics.sfi.rmu.Status\022" +
      "Y\n\025Read_Integrate_output\022\035.no.mechatroni" +
      "cs.sfi.rmu.UInt\032!.no.mechatronics.sfi.rm" +
      "u.RealRead\022]\n\026Write_Integrate_output\022\".n" +
      "o.mechatronics.sfi.rmu.RealWrite\032\037.no.me" +
      "chatronics.sfi.rmu.Status\022Z\n\026Read_Integr" +
      "ate_initial\022\035.no.mechatronics.sfi.rmu.UI" +
      "nt\032!.no.mechatronics.sfi.rmu.RealRead\022^\n" +
      "\027Write_Integrate_initial\022\".no.mechatroni" +
      "cs.sfi.rmu.RealWrite\032\037.no.mechatronics.s" +
      "fi.rmu.StatusB\030B\026HydraulicCylinderProtob" +
      "\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          no.mechatronics.sfi.rmu.FmiDefinitions.getDescriptor(),
        }, assigner);
    internal_static_no_mechatronics_sfi_rmu_IntegerWrite_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_no_mechatronics_sfi_rmu_IntegerWrite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_no_mechatronics_sfi_rmu_IntegerWrite_descriptor,
        new java.lang.String[] { "FmuId", "Value", });
    internal_static_no_mechatronics_sfi_rmu_RealWrite_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_no_mechatronics_sfi_rmu_RealWrite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_no_mechatronics_sfi_rmu_RealWrite_descriptor,
        new java.lang.String[] { "FmuId", "Value", });
    internal_static_no_mechatronics_sfi_rmu_StringWrite_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_no_mechatronics_sfi_rmu_StringWrite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_no_mechatronics_sfi_rmu_StringWrite_descriptor,
        new java.lang.String[] { "FmuId", "Value", });
    internal_static_no_mechatronics_sfi_rmu_BooleanWrite_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_no_mechatronics_sfi_rmu_BooleanWrite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_no_mechatronics_sfi_rmu_BooleanWrite_descriptor,
        new java.lang.String[] { "FmuId", "Value", });
    no.mechatronics.sfi.rmu.FmiDefinitions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
